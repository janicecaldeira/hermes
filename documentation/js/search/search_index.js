var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.403,1,2.619]],["body/modules/AppModule.html",[0,2.081,1,5.109,2,1.983,3,2.578,4,3.683,5,3.683,6,4.146,7,0.019,8,4.467,9,4.146,10,2.903,11,2.233,12,2.102,13,0.22,14,0.22,15,0.195,16,4.288,17,3.096,18,0.364,19,1.378,20,2.987,21,2.233,22,4.288,23,2.749,24,3.574,25,3.683,26,4.288,27,3.683,28,4.788,29,3.683,30,4.288,31,0.327,32,2.987,33,4.288,34,4.288,35,4.288,36,4.288,37,3.683,38,4.288,39,4.288,40,3.685,41,4.288,42,4.288,43,1.875,44,2.382,45,0.22,46,0.272,47,0.014,48,0.014]],["title/classes/BasicEntity.html",[46,0.239,49,2.237]],["body/classes/BasicEntity.html",[7,0.019,13,0.238,14,0.238,15,0.21,18,0.238,31,0.489,45,0.238,46,0.294,47,0.015,48,0.015,49,3.482,50,0.863,51,3.973,52,4.076,53,5.514,54,0.353,55,0.88,56,2.167,57,2.167,58,2.167,59,2.425,60,6.747,61,2.523,62,1.02,63,6.42,64,0.651,65,4.626,66,6.42,67,4.626,68,6.42,69,4.626,70,4.626,71,1.917,72,3.752,73,2.139,74,4.626,75,4.626,76,2.023,77,4.626]],["title/entities/BrandEntity.html",[78,1.958,79,1.558]],["body/entities/BrandEntity.html",[7,0.019,13,0.225,14,0.225,15,0.199,18,0.321,31,0.521,45,0.225,46,0.278,47,0.014,48,0.014,49,3.36,52,3.048,54,0.333,55,0.849,62,0.994,64,0.603,73,2.024,78,2.942,79,2.34,80,3.048,81,3.759,82,1.167,83,0.732,84,4.791,85,1.228,86,3.352,87,3.934,88,4.376,89,0.802,90,3.352,91,4.326,92,4.326,93,4.326,94,4.326,95,4.791,96,4.376,97,3.239,98,3.759,99,3.621,100,5.649,101,4.376,102,4.326,103,4.851,104,4.326,105,3.352,106,3.352,107,3.759,108,2.024,109,3.352,110,3.759]],["title/injectables/BrandRepository.html",[111,1.478,112,2.237]],["body/injectables/BrandRepository.html",[7,0.019,13,0.121,14,0.121,15,0.107,18,0.324,19,0.758,21,1.229,23,1.513,24,1.513,31,0.468,40,2.166,45,0.121,46,0.15,47,0.009,48,0.009,54,0.18,59,1.508,64,0.608,71,2.544,73,1.091,76,2.601,79,0.978,82,1.201,83,0.726,85,1.445,89,0.631,108,2.497,111,1.431,112,2.166,113,1.311,114,2.027,115,4.587,116,2.449,117,2.789,118,2.449,119,1.785,120,3.127,121,1.785,122,3.761,123,2.789,124,2.311,125,2.022,126,1.808,127,3.974,128,4.555,129,2.36,130,2.686,131,2.292,132,1.157,133,2.973,134,2.36,135,1.303,136,2.495,137,2.789,138,2.36,139,3.481,140,2.36,141,1.785,142,2.36,143,3.127,144,2.36,145,1.785,146,2.36,147,2.789,148,4.136,149,2.324,150,2.36,151,1.808,152,1.157,153,2.973,154,2.36,155,2.027,156,1.808,157,2.789,158,2.789,159,1.808,160,1.229,161,1.229,162,2.789,163,1.311,164,1.229,165,2.789,166,1.311,167,1.229,168,1.229,169,2.36,170,1.808,171,1.157,172,4.126,173,2.027,174,3.096,175,2.789,176,3.096,177,3.761,178,2.973,179,2.36,180,1.359,181,2.027,182,2.027,183,1.091,184,1.091,185,2.536,186,2.36,187,1.808,188,2.36,189,2.36,190,2.789,191,2.789,192,2.027,193,1.011,194,2.536,195,2.36,196,2.027,197,1.404,198,1.808,199,1.808,200,2.027,201,2.36,202,2.36,203,2.027,204,0.688,205,1.808,206,1.808,207,1.808,208,1.808]],["title/modules/BrandRepositoryModule.html",[0,1.403,209,2.41]],["body/modules/BrandRepositoryModule.html",[0,2.25,2,2.243,3,2.788,7,0.019,10,3.14,11,2.526,12,2.377,13,0.249,14,0.249,15,0.221,17,2.694,18,0.352,19,1.559,20,3.378,21,2.526,43,2.121,44,3.348,45,0.249,46,0.308,47,0.015,48,0.015,79,2.009,112,4.497,160,2.526,209,4.677,210,4.166,211,4.166,212,4.166,213,4.851,214,3.865,215,4.851,216,4.851]],["title/controllers/BrandsController.html",[217,2.088,218,2.619]],["body/controllers/BrandsController.html",[7,0.019,13,0.162,14,0.162,15,0.143,18,0.35,19,1.011,31,0.483,43,1.376,45,0.162,46,0.2,47,0.011,48,0.011,54,0.24,59,1.868,62,0.969,64,0.588,71,2.526,76,2.666,79,1.303,82,1.184,83,0.638,89,0.966,116,2.584,118,2.822,119,2.21,121,2.21,124,2.438,130,2.518,131,2.15,132,1.542,133,3.627,135,1.449,136,2.923,141,1.542,145,1.542,152,1.542,153,3.627,160,1.638,161,1.638,162,3.455,163,1.747,164,1.638,165,3.455,166,1.747,167,1.638,168,1.638,171,1.542,217,1.747,218,3.141,219,2.702,220,2.41,221,3.146,222,3.146,223,3.146,224,3.146,225,3.146,226,3.146,227,3.146,228,3.146,229,3.146,230,3.146,231,3.146,232,3.146,233,3.146,234,4.038,235,2.017,236,2.41,237,3.455,238,2.41,239,4.038,240,2.41,241,2.41,242,2.41,243,2.41,244,0.587,245,2.928,246,2.702,247,2.41,248,2.41,249,2.41,250,2.41,251,2.41,252,2.41,253,2.41,254,2.41,255,2.41,256,2.41,257,2.41,258,2.41,259,2.41,260,3.146,261,3.146,262,3.146,263,1.872,264,3.146,265,3.146,266,3.146,267,3.146,268,5.272,269,2.41,270,2.41,271,3.146,272,3.146,273,3.146,274,3.146,275,3.146,276,3.146,277,3.146,278,3.146,279,3.146,280,2.41,281,2.41,282,3.146,283,3.146,284,3.146,285,2.41,286,2.41,287,3.146]],["title/modules/BrandsModule.html",[0,1.403,6,2.237]],["body/modules/BrandsModule.html",[0,2.207,2,2.175,3,2.735,6,4.399,7,0.019,10,3.08,11,2.449,12,2.305,13,0.242,14,0.242,15,0.214,17,3.284,18,0.349,19,1.511,43,2.586,44,3.284,45,0.242,46,0.298,47,0.015,48,0.015,209,4.577,214,3.791,218,4.506,245,4.181,246,4.039,288,4.039,289,4.703,290,4.039,291,4.039,292,4.703,293,4.703,294,4.703]],["title/injectables/BrandsService.html",[111,1.478,245,2.088]],["body/injectables/BrandsService.html",[7,0.019,13,0.187,14,0.187,15,0.165,18,0.35,19,1.169,31,0.49,45,0.187,46,0.231,47,0.012,48,0.012,54,0.277,59,2.069,64,0.641,71,2.665,76,2.813,79,1.507,82,1.145,83,0.713,85,1.529,111,1.963,112,3.954,113,2.02,116,2.447,118,3.008,119,2.447,121,2.447,124,2.637,125,2.02,130,2.813,131,2.401,132,2.447,133,3.652,135,1.469,136,3.032,141,2.447,145,2.447,152,1.782,153,3.652,160,1.894,161,1.894,162,3.825,163,2.02,164,1.894,165,3.825,166,2.02,167,1.894,168,1.894,171,1.782,245,2.773,263,2.164,295,3.124,296,3.637,297,3.637,298,3.637,299,3.637,300,3.637,301,3.637,302,3.637,303,3.637,304,3.637,305,3.637,306,3.637,307,3.637,308,3.637]],["title/classes/CreateBrandDto.html",[46,0.239,133,2.237]],["body/classes/CreateBrandDto.html",[7,0.019,13,0.259,14,0.259,15,0.23,18,0.317,31,0.385,45,0.259,46,0.392,47,0.015,48,0.015,50,0.943,54,0.385,55,0.929,62,0.803,64,0.487,83,0.791,89,0.878,133,3.678,193,1.716,244,0.943,309,5.31,310,3.87,311,3.239,312,3.678,313,4.339,314,1.557,315,3.963,316,3.434,317,3.006,318,2.631,319,3.006]],["title/classes/CreateBrandSerializer.html",[46,0.239,163,2.088]],["body/classes/CreateBrandSerializer.html",[7,0.019,13,0.189,14,0.189,15,0.168,18,0.189,31,0.492,45,0.189,46,0.234,47,0.012,48,0.012,50,0.687,54,0.281,55,0.757,56,1.938,57,1.938,58,1.938,61,2.368,62,1.027,64,0.623,82,1.206,83,0.636,85,1.095,89,0.715,135,1.524,163,2.798,204,1.468,244,0.687,314,1.681,320,5.731,321,2.822,322,3.845,323,2.368,324,1.881,325,3.12,326,3.12,327,2.409,328,2.19,329,2.304,330,2.304,331,3.684,332,1.845,333,1.881,334,1.881,335,1.881,336,2.046,337,3.684,338,3.684,339,1.788,340,2.997,341,3.684,342,1.881,343,3.684,344,2.182]],["title/classes/CreateProductDto.html",[46,0.239,345,2.237]],["body/classes/CreateProductDto.html",[7,0.019,13,0.221,14,0.221,15,0.196,18,0.287,31,0.501,45,0.221,46,0.355,47,0.014,48,0.014,50,0.804,54,0.328,55,0.841,62,1.044,64,0.634,83,0.754,85,1.516,89,0.794,131,2.088,193,1.553,244,0.804,311,2.763,312,3.327,314,1.655,315,4.212,316,3.106,317,2.564,318,2.245,319,2.564,345,3.327,346,5.848,347,3.301,348,3.234,349,3.043,350,3.234,351,5.593,352,4.31,353,4.31,354,4.31,355,4.31,356,4.31,357,4.31,358,4.284,359,4.804,360,6.209,361,4.284,362,3.002,363,3.301]],["title/classes/CreateProductSerializer.html",[46,0.239,364,2.088]],["body/classes/CreateProductSerializer.html",[7,0.019,13,0.156,14,0.156,15,0.138,18,0.156,31,0.514,45,0.156,46,0.192,47,0.011,48,0.011,50,0.565,54,0.231,55,0.66,56,1.742,57,1.742,58,1.742,61,2.222,62,1.072,64,0.65,82,1.258,83,0.572,85,1.438,89,0.803,135,1.43,204,1.649,244,0.565,314,1.725,322,4.011,323,2.43,324,1.638,325,1.919,326,1.919,327,2.465,328,2.008,329,2.112,330,2.112,332,1.658,333,1.638,334,1.638,335,1.638,336,1.682,339,1.557,342,1.638,344,2.276,348,2.688,349,2.529,350,2.688,364,2.437,365,5.881,366,2.32,367,2.627,368,4.344,369,3.028,370,3.028,371,3.028,372,3.028,373,2.611,374,3.627,375,3.028,376,2.813,377,2.813,378,3.028,379,2.029,380,2.285,381,3.028,382,2.813,383,3.028,384,3.028]],["title/classes/CreateSellerDto.html",[46,0.239,385,2.237]],["body/classes/CreateSellerDto.html",[7,0.019,13,0.259,14,0.259,15,0.23,18,0.317,31,0.385,45,0.259,46,0.392,47,0.015,48,0.015,50,0.943,54,0.385,55,0.929,62,0.803,64,0.487,83,0.791,89,0.878,193,1.716,244,0.943,311,3.239,312,3.678,314,1.557,315,3.963,316,3.434,317,3.006,318,2.631,319,3.006,385,3.678,386,5.31,387,3.87,388,4.339]],["title/classes/CreateSellerSerializer.html",[46,0.239,389,2.088]],["body/classes/CreateSellerSerializer.html",[7,0.019,13,0.193,14,0.193,15,0.171,18,0.193,31,0.496,45,0.193,46,0.239,47,0.013,48,0.013,50,0.703,54,0.287,55,0.769,56,1.96,57,1.96,58,1.96,61,2.383,62,1.035,64,0.628,82,1.215,83,0.643,85,1.111,89,0.726,135,1.534,204,1.49,244,0.703,314,1.692,322,3.874,323,2.383,324,1.909,327,2.419,328,2.21,329,2.325,330,2.325,332,1.866,333,1.909,334,1.909,335,1.909,336,2.092,339,1.815,342,1.909,344,2.198,379,3.313,389,2.84,390,5.768,391,2.884,392,3.766,393,3.766,394,3.766,395,3.278,396,3.766,397,3.766]],["title/classes/FindOptions.html",[46,0.239,398,2.237]],["body/classes/FindOptions.html",[7,0.019,13,0.196,14,0.196,15,0.173,18,0.265,31,0.498,45,0.196,46,0.327,47,0.013,48,0.013,50,0.711,54,0.29,55,0.774,62,1.039,64,0.63,83,0.647,89,1.019,108,2.7,131,2.68,244,0.711,316,3.475,318,1.983,327,2.207,332,1.656,336,2.862,340,2.265,358,5.161,361,4.792,373,2.265,395,2.441,398,3.065,399,5.787,400,3.271,401,5.015,402,5.015,403,2.7,404,6.537,405,3.808,406,3.808,407,3.808,408,3.808,409,3.808,410,5.152,411,3.808,412,3.808,413,3.808,414,3.808,415,3.808,416,5.84,417,6.257,418,3.808,419,3.808,420,5.152,421,5.152,422,3.271,423,5.152]],["title/classes/GetBrandResponse.html",[46,0.239,424,2.088]],["body/classes/GetBrandResponse.html",[7,0.019,13,0.167,14,0.167,15,0.148,18,0.167,31,0.471,45,0.3,46,0.371,47,0.011,48,0.011,50,0.607,54,0.248,55,0.695,56,1.814,57,1.814,58,1.814,61,2.277,62,0.982,64,0.596,82,1.152,83,0.684,85,1.342,89,0.937,135,1.465,149,1.64,180,1.215,183,1.505,184,1.505,193,1.491,204,1.347,244,0.607,314,1.818,322,3.674,323,2.277,324,1.725,325,3.042,326,3.042,327,2.488,328,2.075,329,2.183,330,2.183,332,1.726,333,1.725,334,1.725,335,1.725,336,1.807,339,1.64,340,2.749,342,1.725,344,2.085,424,2.566,425,2.086,426,3.254,427,3.254,428,3.254,429,3.254,430,3.254,431,1.099,432,1.348,433,2.349,434,1.099,435,1.348,436,1.423,437,1.423,438,1.423,439,1.348,440,1.595,441,1.695]],["title/classes/GetProductResponse.html",[46,0.239,442,2.088]],["body/classes/GetProductResponse.html",[7,0.019,13,0.128,14,0.128,15,0.113,18,0.236,31,0.506,45,0.264,46,0.326,47,0.009,48,0.009,50,0.465,54,0.19,55,0.571,56,1.552,57,1.552,58,1.552,61,2.069,62,1.055,64,0.64,79,1.905,82,1.194,83,0.613,85,1.443,89,0.909,108,2.126,135,1.331,149,1.347,160,1.298,180,0.93,183,1.152,184,1.152,193,1.276,204,1.699,244,0.465,314,1.808,322,3.949,323,2.317,324,1.417,325,1.66,326,2.248,327,2.505,328,1.824,329,1.919,330,1.919,332,1.477,333,1.417,334,1.417,335,1.417,336,1.384,339,1.347,342,1.417,344,2.241,348,2.395,349,2.253,350,2.395,367,2.42,368,4.308,373,2.258,374,3.296,376,2.433,377,2.433,379,2.377,380,2.677,382,2.433,403,2.126,431,0.841,432,1.032,433,2.011,434,0.841,435,1.032,436,1.09,437,1.09,438,1.09,439,1.032,440,1.221,441,1.298,442,2.108,443,1.597,444,2.644,445,3.581,446,2.492,447,2.492,448,2.492,449,2.492,450,2.492,451,2.492,452,2.492,453,1.905,454,2.644,455,2.492,456,2.492,457,2.492,458,2.492,459,1.298]],["title/classes/GetSellerResponse.html",[46,0.239,460,2.237]],["body/classes/GetSellerResponse.html",[7,0.019,13,0.179,14,0.179,15,0.159,18,0.179,31,0.483,45,0.286,46,0.354,47,0.012,48,0.012,50,0.651,54,0.266,55,0.729,56,1.883,57,1.883,58,1.883,61,2.328,62,1.007,64,0.611,82,1.182,83,0.668,85,1.31,89,0.9,135,1.498,149,1.238,180,1.302,193,1.347,204,1.414,244,0.651,314,1.796,322,3.77,323,2.328,324,1.811,327,2.477,328,2.14,329,2.251,330,2.251,332,1.792,333,1.811,334,1.811,335,1.811,336,1.937,339,1.721,342,1.811,344,2.139,379,3.264,395,3.11,431,1.177,432,1.445,433,2.121,434,1.177,435,1.445,436,1.525,437,1.525,438,1.525,460,2.886,461,2.429,462,3.488,463,3.488,464,3.488,465,3.488,466,3.488]],["title/entities/ProductEntity.html",[78,1.958,97,1.843]],["body/entities/ProductEntity.html",[7,0.019,13,0.161,14,0.161,15,0.143,18,0.313,31,0.547,40,3.77,45,0.161,46,0.199,47,0.011,48,0.011,49,2.676,52,2.183,54,0.239,55,0.676,62,1.061,64,0.644,73,1.449,78,2.343,79,2.382,80,2.183,82,0.982,83,0.637,85,1.451,86,2.401,87,4.413,89,0.816,90,4.663,91,4.403,92,4.403,93,4.403,94,5.115,95,5.208,97,2.205,99,2.009,102,4.853,104,3.445,105,2.401,106,2.401,108,2.815,109,2.401,110,2.692,348,2.74,349,2.579,350,2.74,362,3.133,363,2.401,367,2.514,380,2.343,403,2.815,453,2.382,467,2.692,468,4.498,469,4.498,470,5.749,471,3.134,472,3.134,473,3.134,474,3.134,475,4.498,476,4.498,477,4.498,478,4.498,479,3.134,480,4.498,481,3.134,482,3.134,483,3.134,484,3.864,485,4.498,486,4.498,487,5.261,488,3.134,489,3.134,490,3.134,491,3.134,492,3.134,493,3.134,494,3.134,495,3.134]],["title/injectables/ProductRepository.html",[111,1.478,496,2.237]],["body/injectables/ProductRepository.html",[7,0.019,13,0.098,14,0.098,15,0.087,18,0.324,19,0.615,21,0.997,23,1.227,24,1.227,31,0.461,40,2.903,45,0.098,46,0.121,47,0.008,48,0.008,54,0.146,59,1.279,64,0.583,71,2.442,73,0.885,76,2.496,82,1.129,83,0.737,85,1.37,89,0.74,97,0.938,99,3.517,108,2.412,111,1.213,113,1.063,115,4.511,116,2.18,117,2.364,118,1.513,119,1.513,120,2.651,121,1.513,122,3.821,123,2.364,124,2.057,125,1.714,126,1.466,127,3.633,128,4.202,130,2.646,131,2.259,132,0.938,135,1.191,136,2.281,137,2.364,139,3.398,141,1.513,143,2.651,145,1.513,147,2.364,148,3.737,149,2.237,151,1.466,152,0.938,155,1.644,156,1.466,157,2.364,158,3.407,159,1.466,170,1.466,171,1.901,172,4.165,174,3.098,175,2.97,176,3.098,177,3.821,178,3.103,180,0.714,181,2.651,182,2.651,183,1.427,184,1.427,185,3.398,187,1.466,190,2.364,191,2.364,193,0.857,194,2.15,197,1.139,198,1.466,199,1.466,200,2.651,203,1.644,204,0.558,205,1.466,206,1.466,207,1.466,208,1.466,245,3.047,345,2.647,364,1.063,367,1.696,398,2.647,401,4.191,402,4.191,403,2.412,496,1.836,497,1.644,498,2.364,499,3.047,500,1.914,501,1.914,502,1.914,503,2.364,504,1.914,505,2.364,506,2.364,507,1.914,508,1.914,509,1.914,510,1.914,511,1.914,512,2.647,513,1.914,514,1.914,515,1.914,516,1.333,517,1.914,518,2.364,519,1.914,520,1.914,521,2.364,522,1.063,523,1.914,524,1.914,525,1.466,526,1.466,527,1.914,528,1.914,529,3.086,530,1.914,531,1.914,532,1.914,533,1.914,534,1.914,535,1.914,536,1.914,537,1.914,538,1.914,539,1.914,540,3.878,541,1.914,542,1.914,543,1.914,544,1.914,545,1.914,546,1.914,547,1.914,548,1.914,549,1.914,550,1.914]],["title/modules/ProductRepositoryModule.html",[0,1.403,551,2.41]],["body/modules/ProductRepositoryModule.html",[0,2.137,2,2.066,3,2.647,6,4.191,7,0.019,9,4.191,10,2.981,11,2.327,12,2.19,13,0.229,14,0.229,15,0.203,17,3.179,18,0.362,19,1.436,20,3.112,21,2.327,25,3.838,27,3.838,43,1.954,44,3.179,45,0.229,46,0.284,47,0.014,48,0.014,97,2.19,214,3.67,496,4.448,516,3.112,551,4.766,552,3.838,553,4.468,554,3.838,555,3.838,556,4.468,557,4.468,558,4.468]],["title/controllers/ProductsController.html",[217,2.088,559,2.619]],["body/controllers/ProductsController.html",[7,0.019,13,0.148,14,0.148,15,0.131,18,0.347,19,0.924,31,0.497,43,1.257,45,0.148,46,0.182,47,0.01,48,0.01,54,0.219,59,1.75,62,0.977,64,0.593,71,2.548,76,2.689,82,1.147,83,0.681,84,2.202,89,0.985,97,1.409,116,2.455,118,2.07,119,2.07,121,2.07,124,2.316,130,2.689,131,2.295,132,1.409,135,1.404,136,2.959,141,1.409,145,1.409,152,1.409,161,1.497,164,1.497,167,1.497,168,1.497,171,1.409,217,1.597,220,2.202,234,3.836,235,1.843,236,2.202,237,3.236,238,2.202,239,3.836,240,2.202,241,2.202,242,2.202,243,2.202,244,0.536,263,1.71,269,2.202,270,2.202,280,2.202,281,2.202,285,2.202,286,2.202,345,3.499,364,1.597,367,1.847,398,3.284,498,3.236,503,2.202,505,3.836,506,2.202,512,3.499,516,2.002,518,3.236,521,3.236,522,1.597,525,2.202,526,2.202,559,2.942,560,2.469,561,2.875,562,2.875,563,2.875,564,2.875,565,2.875,566,2.875,567,2.875,568,2.875,569,2.875,570,2.875,571,2.875,572,2.875,573,2.875,574,2.875,575,2.98,576,2.469,577,2.202,578,2.202,579,2.202,580,2.202,581,2.202,582,2.202,583,2.202,584,2.202,585,2.202,586,2.202,587,2.202,588,2.202,589,2.202,590,2.202,591,2.202,592,2.202,593,2.875,594,2.875,595,2.875,596,2.875,597,2.875,598,2.875,599,2.875,600,2.875,601,2.875,602,2.875,603,2.875,604,2.875,605,2.875,606,2.875,607,5.008,608,2.875,609,2.875,610,2.875,611,2.875,612,2.875,613,2.875,614,2.875,615,2.875,616,2.875,617,2.875,618,2.875,619,2.875,620,2.875]],["title/modules/ProductsModule.html",[0,1.403,8,2.41]],["body/modules/ProductsModule.html",[0,2.25,2,2.243,3,2.788,7,0.019,8,4.726,10,3.14,11,2.526,12,2.377,13,0.249,14,0.249,15,0.221,17,3.348,18,0.352,19,1.559,43,2.637,44,3.348,45,0.249,46,0.308,47,0.015,48,0.015,551,4.612,559,4.569,575,4.28,576,4.166,621,4.166,622,4.851,623,4.166,624,4.851,625,4.851,626,4.851]],["title/injectables/ProductsService.html",[111,1.478,575,2.237]],["body/injectables/ProductsService.html",[7,0.019,13,0.173,14,0.173,15,0.153,18,0.349,19,1.081,31,0.508,45,0.173,46,0.213,47,0.012,48,0.012,54,0.256,59,1.959,64,0.642,71,2.687,76,2.836,82,1.107,83,0.738,85,1.502,89,0.776,97,1.649,111,1.859,113,1.868,116,2.318,118,2.318,119,2.318,121,2.318,124,2.53,125,1.868,130,2.913,131,2.487,132,2.318,135,1.428,136,3.064,141,2.318,145,2.318,152,1.649,161,1.752,164,1.752,167,1.752,168,1.752,171,1.649,263,2.001,345,3.531,364,1.868,367,1.471,398,3.531,496,3.858,498,3.623,503,3.623,505,2.576,506,3.623,512,3.531,516,2.343,518,3.623,521,3.623,522,1.868,525,2.576,526,2.576,575,2.814,627,2.889,628,3.364,629,3.364,630,3.364,631,3.364,632,3.364,633,3.364,634,3.364,635,3.364,636,3.364,637,3.364,638,3.364,639,3.364,640,3.364,641,3.364,642,3.364]],["title/classes/Response400Dto.html",[46,0.239,434,1.269]],["body/classes/Response400Dto.html",[7,0.019,13,0.186,14,0.186,15,0.165,18,0.186,31,0.434,45,0.315,46,0.389,47,0.012,48,0.012,50,0.677,54,0.277,55,0.749,56,1.225,57,1.225,58,1.225,61,2.021,62,0.905,64,0.549,82,0.93,83,0.679,85,1.397,89,0.984,135,1.301,149,2.176,180,1.355,183,1.678,184,1.678,193,1.785,204,1.058,244,0.677,314,1.848,323,2.021,324,1.355,325,2.811,326,2.811,327,2.462,328,1.769,329,1.861,330,1.861,332,1.602,333,1.355,334,1.355,335,1.355,339,1.288,340,2.159,342,1.355,344,2.17,424,2.016,425,2.327,431,1.225,432,1.504,433,2.811,434,1.683,435,2.066,436,2.181,437,2.181,438,2.181,439,1.504,440,1.779,441,1.89,643,2.967,644,3.629,645,3.629,646,3.629]],["title/classes/Response400Dto-1.html",[46,0.2,204,0.918,434,1.064]],["body/classes/Response400Dto-1.html",[7,0.019,13,0.162,14,0.162,15,0.144,18,0.271,31,0.403,45,0.296,46,0.366,47,0.011,48,0.011,50,0.589,54,0.241,55,0.68,56,1.066,57,1.066,58,1.066,61,1.875,62,0.84,64,0.509,79,1.873,82,1.076,83,0.639,85,1.454,89,0.967,108,1.46,135,1.207,149,2.047,160,1.645,180,1.179,183,1.46,184,1.46,193,1.695,204,1.54,244,0.589,314,1.864,323,2.166,324,1.179,325,1.381,326,1.978,327,2.489,328,1.605,329,1.688,330,1.688,332,1.453,333,1.179,334,1.179,335,1.179,339,1.12,342,1.179,344,2.362,348,1.645,349,1.548,350,1.645,367,1.978,368,4.162,373,1.879,374,2.899,376,2.024,377,2.024,379,2.091,380,2.355,382,2.024,403,1.46,431,1.066,432,1.308,433,2.67,434,1.527,435,1.873,436,1.978,437,1.978,438,1.978,439,1.308,440,1.548,441,1.645,442,1.754,443,2.024,444,2.199,445,3.15,453,1.873,454,2.199,459,1.645,643,2.752,647,3.158,648,3.158,649,3.158]],["title/classes/Response400Dto-2.html",[46,0.2,380,1.641,434,1.064]],["body/classes/Response400Dto-2.html",[7,0.019,13,0.199,14,0.199,15,0.176,18,0.199,31,0.449,45,0.303,46,0.374,47,0.013,48,0.013,50,0.724,54,0.295,55,0.784,56,1.309,57,1.309,58,1.309,61,2.091,62,0.937,64,0.568,82,0.973,83,0.653,85,1.37,89,0.961,135,1.346,149,2.091,180,1.447,193,1.75,204,1.13,244,0.724,314,1.831,323,2.091,324,1.447,327,2.432,328,1.851,329,1.947,330,1.947,332,1.676,333,1.447,334,1.447,335,1.447,339,1.376,342,1.447,344,2.22,379,3.042,395,2.486,431,1.309,432,1.606,433,2.756,434,1.761,435,2.161,436,2.281,437,2.281,438,2.281,460,2.307,461,2.701,643,3.069,650,3.878,651,3.878,652,3.878]],["title/classes/Response404Dto.html",[46,0.239,431,1.269]],["body/classes/Response404Dto.html",[7,0.019,13,0.192,14,0.192,15,0.17,18,0.192,31,0.387,45,0.319,46,0.394,47,0.013,48,0.013,50,0.697,54,0.284,55,0.764,56,1.26,57,1.26,58,1.26,61,2.051,62,0.808,64,0.49,82,0.948,83,0.64,85,1.411,89,0.973,135,1.32,149,1.804,180,1.897,183,1.726,184,1.726,193,1.802,204,1.088,244,0.697,314,1.856,323,2.051,324,1.393,325,2.839,326,2.839,327,2.473,328,1.804,329,1.897,330,1.897,332,1.633,333,1.393,334,1.393,335,1.393,339,1.325,340,2.221,342,1.393,344,2.192,424,2.073,425,2.393,431,1.716,432,2.106,433,2.839,434,1.26,435,1.546,436,1.632,437,1.632,438,1.632,439,1.546,440,1.829,441,1.944,643,2.647,653,3.733,654,3.733]],["title/classes/Response404Dto-1.html",[46,0.2,204,0.918,431,1.064]],["body/classes/Response404Dto-1.html",[7,0.019,13,0.166,14,0.166,15,0.147,18,0.275,31,0.351,45,0.3,46,0.37,47,0.011,48,0.011,50,0.604,54,0.247,55,0.692,56,1.092,57,1.092,58,1.092,61,1.9,62,0.731,64,0.444,79,1.906,82,1.088,83,0.593,85,1.463,89,0.956,108,1.496,135,1.223,149,1.633,160,1.685,180,1.718,183,1.496,184,1.496,193,1.711,204,1.561,244,0.604,314,1.869,323,2.187,324,1.208,325,1.415,326,2.012,327,2.496,328,1.633,329,1.718,330,1.718,332,1.479,333,1.208,334,1.208,335,1.208,339,1.148,342,1.208,344,2.373,348,1.685,349,1.586,350,1.685,367,2.012,368,4.182,373,1.925,374,2.95,376,2.074,377,2.074,379,2.128,380,2.397,382,2.074,403,1.496,431,1.553,432,1.906,433,2.695,434,1.092,435,1.34,436,1.415,437,1.415,438,1.415,439,1.34,440,1.586,441,1.685,442,1.797,443,2.074,444,2.254,445,3.205,453,1.906,454,2.254,459,1.685,643,2.397,655,3.236,656,3.236]],["title/classes/Response404Dto-2.html",[46,0.2,380,1.641,431,1.064]],["body/classes/Response404Dto-2.html",[7,0.019,13,0.205,14,0.205,15,0.182,18,0.205,31,0.406,45,0.307,46,0.38,47,0.013,48,0.013,50,0.746,54,0.305,55,0.8,56,1.349,57,1.349,58,1.349,61,2.123,62,0.846,64,0.513,82,0.993,83,0.59,85,1.386,89,0.943,135,1.366,149,1.418,180,1.986,193,1.771,204,1.165,244,0.746,314,1.84,323,2.123,324,1.492,327,2.446,328,1.888,329,1.986,330,1.986,332,1.71,333,1.492,334,1.492,335,1.492,339,1.418,342,1.492,344,2.243,379,3.073,395,2.562,431,1.796,432,2.205,433,2.79,434,1.349,435,1.655,436,1.747,437,1.747,438,1.747,460,2.377,461,2.783,643,2.772,657,3.996,658,3.996]],["title/classes/Response409Dto.html",[46,0.239,439,1.558]],["body/classes/Response409Dto.html",[7,0.019,13,0.186,14,0.186,15,0.165,18,0.186,31,0.434,45,0.315,46,0.389,47,0.012,48,0.012,50,0.677,54,0.277,55,0.749,56,1.225,57,1.225,58,1.225,61,2.021,62,0.905,64,0.549,82,0.93,83,0.679,85,1.397,89,0.984,135,1.301,149,2.176,180,1.355,183,2.306,184,2.306,193,1.785,204,1.058,244,0.677,314,1.848,323,2.021,324,1.355,325,2.811,326,2.811,327,2.462,328,1.769,329,1.861,330,1.861,332,1.602,333,1.355,334,1.355,335,1.355,339,1.288,340,2.159,342,1.355,344,2.17,424,2.016,425,2.327,431,1.225,432,1.504,433,2.811,434,1.225,435,1.504,436,1.587,437,1.587,438,1.587,439,2.066,440,2.444,441,2.597,643,2.967,659,3.629,660,3.629,661,3.629]],["title/classes/Response409Dto-1.html",[46,0.2,204,0.918,439,1.305]],["body/classes/Response409Dto-1.html",[7,0.019,13,0.162,14,0.162,15,0.144,18,0.271,31,0.403,45,0.296,46,0.366,47,0.011,48,0.011,50,0.589,54,0.241,55,0.68,56,1.066,57,1.066,58,1.066,61,1.875,62,0.84,64,0.509,79,1.873,82,1.076,83,0.639,85,1.454,89,0.967,108,1.46,135,1.207,149,2.047,160,1.645,180,1.179,183,2.091,184,2.091,193,1.695,204,1.54,244,0.589,314,1.864,323,2.166,324,1.179,325,1.381,326,1.978,327,2.489,328,1.605,329,1.688,330,1.688,332,1.453,333,1.179,334,1.179,335,1.179,339,1.12,342,1.179,344,2.362,348,1.645,349,1.548,350,1.645,367,1.978,368,4.162,373,1.879,374,2.899,376,2.024,377,2.024,379,2.091,380,2.355,382,2.024,403,1.46,431,1.066,432,1.308,433,2.67,434,1.066,435,1.308,436,1.381,437,1.381,438,1.381,439,1.873,440,2.216,441,2.355,442,1.754,443,2.024,444,2.199,445,3.15,453,1.873,454,2.199,459,1.645,643,2.752,662,3.158,663,3.158,664,3.158]],["title/entities/SellerEntity.html",[78,1.958,453,1.558]],["body/entities/SellerEntity.html",[7,0.019,13,0.226,14,0.226,15,0.2,18,0.322,31,0.522,45,0.226,46,0.279,47,0.014,48,0.014,49,3.372,52,3.064,54,0.335,55,0.852,62,0.997,64,0.605,73,2.034,78,2.952,80,3.064,82,1.17,83,0.734,84,4.802,85,1.232,86,3.369,87,3.947,89,0.804,90,3.369,91,4.341,92,4.341,93,4.341,94,4.341,95,4.802,97,3.245,98,3.778,99,3.633,102,4.341,103,4.868,104,4.341,106,3.369,107,3.778,109,3.369,403,2.034,453,2.348,665,3.778,666,4.399,667,4.399,668,5.667,669,4.399]],["title/injectables/SellerRepository.html",[111,1.478,670,2.237]],["body/injectables/SellerRepository.html",[7,0.019,13,0.13,14,0.13,15,0.115,18,0.33,19,0.814,21,1.319,23,1.623,24,1.623,31,0.465,40,2.286,45,0.13,46,0.161,47,0.01,48,0.01,54,0.193,59,1.592,64,0.606,71,2.525,73,1.171,76,2.566,82,1.224,83,0.675,85,1.468,111,1.51,113,1.406,115,4.562,116,2.541,117,2.943,118,2.541,119,1.883,121,1.883,122,3.882,123,2.943,124,2.397,125,2.134,126,1.94,127,4.086,128,4.669,130,2.666,131,2.275,132,1.241,135,1.34,136,2.267,137,2.943,139,3.611,141,1.883,145,1.883,147,2.943,148,4.269,149,2.365,151,1.94,152,1.241,156,1.94,157,2.943,158,2.943,159,1.94,161,1.319,164,1.319,167,1.319,168,1.319,170,1.94,171,1.241,172,4.026,173,2.175,174,3.234,175,2.943,176,3.234,177,3.611,178,2.763,180,1.434,185,2.677,187,1.94,190,2.943,191,2.943,192,2.175,193,1.067,194,2.677,196,2.175,197,1.507,198,1.94,199,1.94,205,1.94,206,1.94,207,1.94,208,1.94,385,3.084,389,1.406,403,2.577,453,1.049,459,1.319,670,2.286,671,2.175,672,2.532,673,2.532,674,2.532,675,2.532,676,2.532,677,2.532,678,2.532,679,3.084,680,2.532,681,2.943,682,2.943,683,1.406,684,2.532,685,2.532,686,2.532,687,2.532,688,2.532,689,2.532]],["title/modules/SellerRepositoryModule.html",[0,1.403,690,2.41]],["body/modules/SellerRepositoryModule.html",[0,2.25,2,2.243,3,2.788,7,0.019,10,3.14,11,2.526,12,2.377,13,0.249,14,0.249,15,0.221,17,2.694,18,0.352,19,1.559,20,3.378,21,2.526,43,2.121,44,3.348,45,0.249,46,0.308,47,0.015,48,0.015,214,3.865,453,2.009,459,2.526,670,4.497,690,4.677,691,4.166,692,4.166,693,4.166,694,4.851,695,4.851,696,4.851]],["title/controllers/SellersController.html",[217,2.088,697,2.619]],["body/controllers/SellersController.html",[7,0.019,13,0.163,14,0.163,15,0.144,18,0.35,19,1.02,31,0.485,43,1.389,45,0.163,46,0.202,47,0.011,48,0.011,54,0.242,59,1.881,62,0.972,64,0.59,71,2.535,76,2.676,82,1.188,83,0.641,89,0.968,116,2.597,118,2.834,119,2.225,121,2.225,124,2.451,130,2.529,131,2.159,132,1.556,135,1.453,136,2.93,141,1.556,145,1.556,152,1.556,161,1.654,164,1.654,167,1.654,168,1.654,171,1.556,217,1.764,220,2.432,234,4.059,235,2.036,236,2.432,237,3.478,238,2.432,239,4.059,240,2.432,241,2.432,242,2.432,243,2.432,244,0.592,263,1.889,269,2.432,270,2.432,280,2.432,281,2.432,285,2.432,286,2.432,385,3.64,389,1.764,453,1.315,459,1.654,499,2.943,679,3.64,681,3.478,682,3.478,683,1.764,697,3.162,698,2.727,699,3.175,700,3.175,701,3.175,702,3.175,703,3.175,704,3.175,705,3.175,706,3.175,707,3.175,708,3.175,709,3.175,710,3.175,711,3.175,712,2.727,713,2.432,714,2.432,715,2.432,716,2.432,717,2.432,718,2.432,719,2.432,720,2.432,721,2.432,722,2.432,723,2.432,724,3.175,725,3.175,726,3.175,727,3.175,728,3.175,729,3.175,730,3.175,731,3.175,732,3.175,733,3.175,734,3.175,735,3.175,736,3.175,737,3.175,738,4.54,739,3.175,740,3.175,741,3.175,742,3.175]],["title/modules/SellersModule.html",[0,1.403,9,2.237]],["body/modules/SellersModule.html",[0,2.207,2,2.175,3,2.735,7,0.019,9,4.399,10,3.08,11,2.449,12,2.305,13,0.242,14,0.242,15,0.214,17,3.284,18,0.349,19,1.511,43,2.586,44,3.284,45,0.242,46,0.298,47,0.015,48,0.015,214,3.791,499,4.181,690,4.577,697,4.506,712,4.039,743,4.039,744,4.703,745,4.039,746,4.039,747,4.703,748,4.703,749,4.703]],["title/injectables/SellersService.html",[111,1.478,499,2.088]],["body/injectables/SellersService.html",[7,0.019,13,0.187,14,0.187,15,0.165,18,0.35,19,1.169,31,0.49,45,0.187,46,0.231,47,0.012,48,0.012,54,0.277,59,2.069,64,0.641,71,2.665,76,2.813,82,1.145,83,0.713,85,1.529,111,1.963,113,2.02,116,2.447,118,3.008,119,2.447,121,2.447,124,2.637,125,2.02,130,2.813,131,2.401,132,2.447,135,1.469,136,3.032,141,2.447,145,2.447,152,1.782,161,1.894,164,1.894,167,1.894,168,1.894,171,1.782,263,2.164,385,3.652,389,2.02,453,1.507,459,1.894,499,2.773,670,3.954,679,3.652,681,3.825,682,3.825,683,2.02,750,3.124,751,3.637,752,3.637,753,3.637,754,3.637,755,3.637,756,3.637,757,3.637,758,3.637,759,3.637,760,3.637,761,3.637,762,3.637,763,3.637]],["title/classes/TestHelper.html",[46,0.239,764,2.88]],["body/classes/TestHelper.html",[7,0.019,13,0.135,14,0.135,15,0.12,18,0.204,28,3.404,29,2.266,31,0.471,32,1.838,45,0.135,46,0.167,47,0.01,48,0.01,50,0.492,53,5.118,54,0.201,55,0.596,59,1.642,64,0.649,71,2.561,72,1.691,73,1.22,76,2.845,78,2.479,83,0.527,89,0.374,115,4.17,122,4.429,125,2.644,127,3.952,130,2.481,131,1.777,135,0.905,136,1.733,139,2.761,149,1.407,172,4.077,174,1.838,176,1.838,177,1.838,178,2.832,185,4.687,332,0.848,764,4.735,765,2.266,766,6.181,767,5.959,768,4.089,769,6.213,770,5.293,771,5.293,772,5.293,773,3.964,774,5.293,775,4.761,776,3.964,777,3.964,778,4.761,779,3.964,780,2.638,781,2.638,782,2.638,783,2.638,784,3.964,785,2.638,786,5.293,787,2.638,788,2.638,789,4.089,790,2.638,791,5.674,792,3.964,793,2.638,794,2.638,795,2.638,796,2.638,797,4.761,798,2.638,799,2.638,800,2.638,801,2.638,802,2.638,803,2.266,804,2.638,805,2.266,806,3.964,807,2.638,808,4.761,809,2.638,810,3.964,811,2.638,812,2.266,813,2.638,814,6.181,815,2.638,816,2.638,817,2.638,818,3.964,819,2.638,820,2.638,821,2.638,822,2.638,823,2.266,824,2.266,825,2.638,826,2.638,827,3.964,828,3.964,829,2.638,830,5.293,831,3.964,832,2.638]],["title/classes/UpdateBrandDto.html",[46,0.239,153,2.237]],["body/classes/UpdateBrandDto.html",[7,0.019,13,0.259,14,0.259,15,0.23,18,0.317,31,0.385,45,0.259,46,0.392,47,0.015,48,0.015,50,0.943,54,0.385,55,0.929,62,0.803,64,0.487,83,0.791,89,0.878,153,3.678,193,1.716,244,0.943,310,3.87,311,3.239,312,3.678,313,4.339,314,1.557,315,3.963,316,3.434,317,3.006,318,2.631,319,3.006,833,5.31]],["title/classes/UpdateBrandSerializer.html",[46,0.239,166,2.088]],["body/classes/UpdateBrandSerializer.html",[7,0.019,13,0.275,14,0.275,15,0.244,18,0.275,31,0.408,45,0.275,46,0.34,47,0.016,48,0.016,50,0.999,54,0.408,55,0.963,62,0.851,64,0.516,72,4.105,166,3.556,197,4.076,244,0.999,314,1.726,321,4.101,834,5.5,835,5.355]],["title/classes/UpdateProductDto.html",[46,0.239,512,2.237]],["body/classes/UpdateProductDto.html",[7,0.019,13,0.244,14,0.244,15,0.216,18,0.306,31,0.454,45,0.244,46,0.378,47,0.015,48,0.015,50,0.887,54,0.362,55,0.895,62,0.947,64,0.574,83,0.777,85,1.294,89,0.845,131,2.544,193,1.653,244,0.887,312,3.543,316,3.307,317,2.829,318,2.477,319,2.829,347,3.643,349,3.186,358,4.98,359,5.115,361,4.98,512,3.543,836,5.584,837,4.756,838,4.756,839,4.756,840,4.756]],["title/classes/UpdateProductSerializer.html",[46,0.239,522,2.088]],["body/classes/UpdateProductSerializer.html",[7,0.019,13,0.275,14,0.275,15,0.244,18,0.275,31,0.408,45,0.275,46,0.34,47,0.016,48,0.016,50,0.999,54,0.408,55,0.963,62,0.851,64,0.516,72,4.105,197,4.076,244,0.999,314,1.726,366,4.101,522,3.556,841,5.5,842,5.355]],["title/classes/UpdateSellerDto.html",[46,0.239,679,2.237]],["body/classes/UpdateSellerDto.html",[7,0.019,13,0.259,14,0.259,15,0.23,18,0.317,31,0.385,45,0.259,46,0.392,47,0.015,48,0.015,50,0.943,54,0.385,55,0.929,62,0.803,64,0.487,83,0.791,89,0.878,193,1.716,244,0.943,311,3.239,312,3.678,314,1.557,315,3.963,316,3.434,317,3.006,318,2.631,319,3.006,387,3.87,388,4.339,679,3.678,843,5.31]],["title/classes/UpdateSellerSerializer.html",[46,0.239,683,2.088]],["body/classes/UpdateSellerSerializer.html",[7,0.019,13,0.275,14,0.275,15,0.244,18,0.275,31,0.408,45,0.275,46,0.34,47,0.016,48,0.016,50,0.999,54,0.408,55,0.963,62,0.851,64,0.516,72,4.105,197,4.076,244,0.999,314,1.726,391,4.101,683,3.556,844,5.5,845,5.355]],["title/coverage.html",[846,3.912]],["body/coverage.html",[7,0.019,15,0.096,31,0.161,46,0.461,47,0.008,48,0.008,49,1.258,51,1.816,78,2.157,79,1.384,81,2.869,97,1.637,111,2.142,112,1.258,114,1.816,133,1.258,153,1.258,163,1.174,166,1.174,178,1.258,217,2.301,218,1.472,219,1.816,245,1.174,247,1.619,248,1.619,249,1.619,250,1.619,251,1.619,252,1.619,253,1.619,254,1.619,255,1.619,256,1.619,257,1.619,258,1.619,259,1.619,295,1.816,309,1.816,310,2.559,320,1.816,321,2.559,345,1.258,346,1.816,347,2.559,363,5.903,364,1.174,365,1.816,366,2.559,385,1.258,386,1.816,387,2.559,389,1.174,390,1.816,391,2.559,398,1.258,399,1.816,400,1.816,424,1.174,425,3.018,431,1.398,434,1.398,439,1.384,442,1.174,443,3.018,453,0.876,460,1.258,461,2.885,467,2.869,496,1.258,497,1.816,499,1.174,512,1.258,522,1.174,559,1.472,560,1.816,575,1.258,577,1.619,578,1.619,579,1.619,580,1.619,581,1.619,582,1.619,583,1.619,584,1.619,585,1.619,586,1.619,587,1.619,588,1.619,589,1.619,590,1.619,591,1.619,592,1.619,627,1.816,665,1.816,670,1.258,671,1.816,679,1.258,683,1.174,697,1.472,698,1.816,713,1.619,714,1.619,715,1.619,716,1.619,717,1.619,718,1.619,719,1.619,720,1.619,721,1.619,722,1.619,723,1.619,750,1.816,764,1.619,765,1.816,833,1.816,834,1.816,836,1.816,841,1.816,843,1.816,844,1.816,846,1.619,847,1.619,848,2.114,849,2.114,850,1.816,851,1.816,852,1.619,853,5.45,854,5.707,855,4.142,856,5.707,857,3.341,858,4.707,859,5.639,860,7.46,861,7.502,862,3.341,863,3.341,864,2.114,865,1.816,866,1.816,867,3.341,868,1.816,869,2.114,870,1.816,871,2.114,872,5.831,873,2.114,874,5.465,875,2.114,876,1.816]],["title/dependencies.html",[3,2.088,877,2.706]],["body/dependencies.html",[3,2.187,7,0.019,19,1.52,21,2.463,23,3.032,24,4.158,32,3.294,37,4.062,46,0.377,47,0.015,48,0.015,73,2.744,244,0.882,318,2.463,484,4.062,878,6.485,879,4.729,880,4.729,881,4.729,882,4.729,883,5.097,884,4.729,885,4.729,886,4.729,887,4.729,888,4.729,889,5.934,890,4.729,891,4.729,892,5.934,893,4.729,894,4.729,895,4.729,896,4.729,897,4.729,898,4.729,899,4.729,900,4.729,901,4.729,902,4.729,903,4.729,904,4.729,905,4.062,906,4.729,907,4.729,908,4.729,909,4.729,910,4.729,911,4.729]],["title/miscellaneous/functions.html",[912,2.195,913,3.878]],["body/miscellaneous/functions.html",[7,0.017,47,0.017,48,0.017,54,0.444,868,5.009,870,6.097,912,4.062,913,5.009,914,5.832]],["title/index.html",[54,0.24,915,2.706,916,2.706]],["body/index.html",[7,0.018,32,2.501,47,0.012,48,0.012,83,0.398,327,1.212,768,3.084,805,3.084,823,5.936,824,5.244,846,2.75,847,3.791,905,3.084,917,4.95,918,3.591,919,3.591,920,3.591,921,4.95,922,3.591,923,3.591,924,3.591,925,3.591,926,3.591,927,4.95,928,3.591,929,3.591,930,3.591,931,3.591,932,3.591,933,7.23,934,3.591,935,4.95,936,5.665,937,4.95,938,3.591,939,3.591,940,3.591,941,3.591,942,3.591,943,4.95,944,3.591,945,3.591,946,3.591,947,3.591,948,3.591,949,3.591,950,3.591,951,4.95,952,4.95,953,7.401,954,4.95,955,4.95,956,6.105,957,3.591,958,3.591,959,3.591,960,3.591,961,6.105,962,3.591,963,3.591,964,3.591,965,7.015,966,6.404,967,4.95,968,3.591,969,3.591,970,3.591,971,3.591,972,3.591,973,3.591,974,3.084,975,4.95,976,3.591,977,3.591,978,3.591,979,3.591,980,4.95,981,4.95,982,3.591,983,4.95,984,3.591,985,3.591,986,3.591,987,3.591,988,3.591,989,3.591,990,3.591,991,3.591,992,3.591,993,3.591,994,3.591,995,3.591,996,3.591,997,3.591,998,4.95,999,4.251,1000,4.95,1001,3.591,1002,3.591,1003,3.591,1004,3.591,1005,3.591,1006,2.501,1007,3.591,1008,3.084,1009,3.591]],["title/license.html",[915,2.706,916,2.706,1006,2.195]],["body/license.html",[7,0.014,12,2.213,47,0.014,48,0.014,328,1.602,847,3.459,883,3.879,1006,3.145,1008,3.879,1010,6.348,1011,4.516,1012,4.516,1013,4.516,1014,5.763,1015,4.516,1016,4.516,1017,4.516,1018,4.516,1019,4.516,1020,4.516,1021,5.763,1022,7.341,1023,4.516,1024,4.516,1025,4.516,1026,6.348,1027,4.516,1028,5.763,1029,4.516,1030,4.516,1031,5.763,1032,4.516,1033,4.516,1034,4.516,1035,4.516,1036,4.516,1037,4.516,1038,4.516,1039,5.763,1040,4.516,1041,4.516,1042,4.516,1043,4.516,1044,4.516,1045,4.516,1046,4.516,1047,5.763,1048,5.763,1049,4.516,1050,4.516,1051,4.516,1052,4.516,1053,4.516,1054,4.516,1055,4.516,1056,4.516,1057,4.516,1058,4.516,1059,4.516,1060,4.516,1061,4.516,1062,4.516,1063,4.516,1064,4.516,1065,4.516,1066,4.516,1067,4.516,1068,4.516,1069,4.516,1070,4.516,1071,3.879,1072,4.516,1073,4.516,1074,4.516,1075,4.516,1076,4.516,1077,4.516]],["title/classes/migrations1679162777045.html",[46,0.239,852,2.88]],["body/classes/migrations1679162777045.html",[7,0.018,13,0.155,14,0.155,15,0.137,18,0.155,31,0.392,45,0.155,46,0.191,47,0.011,48,0.011,50,0.562,54,0.457,55,0.657,56,1.737,57,1.737,58,1.737,59,1.811,64,0.496,71,1.811,73,1.393,82,1.166,83,0.758,87,4.174,89,0.428,99,4.134,105,3.348,108,2.379,115,4.007,124,2.772,130,1.912,131,1.632,136,2.468,172,4.49,235,2.802,332,2.355,348,2.277,349,1.476,350,2.277,362,4.601,367,1.912,403,2.021,769,5.369,803,5.784,812,5.539,850,4.848,851,2.587,852,4.323,876,5.874,974,3.754,1071,4.848,1078,4.371,1079,5.145,1080,4.371,1081,2.587,1082,3.012,1083,4.371,1084,3.012,1085,4.371,1086,3.012,1087,5.145,1088,6.734,1089,6.734,1090,5.145,1091,5.644,1092,5.145,1093,5.145,1094,3.012,1095,3.012,1096,4.371,1097,4.371,1098,5.644,1099,4.371,1100,4.371,1101,4.371,1102,5.644,1103,4.371,1104,3.012,1105,4.371,1106,3.012,1107,4.371,1108,5.993]],["title/modules.html",[2,2.362]],["body/modules.html",[1,3.706,2,2.461,6,3.166,7,0.016,8,3.411,9,3.166,47,0.016,48,0.016,209,3.411,551,3.411,690,3.411,999,6.387,1109,7.436,1110,7.436,1111,7.436]],["title/overview.html",[1112,4.387]],["body/overview.html",[1,4.919,2,1.822,3,2.438,4,3.384,5,3.384,6,4.255,7,0.019,8,4.455,9,4.255,10,2.746,11,2.052,12,1.931,43,1.723,47,0.013,48,0.013,50,0.735,80,2.745,112,4.135,113,2.188,209,4.363,210,3.384,211,3.384,212,3.384,245,3.86,288,3.384,290,3.384,291,3.384,496,4.135,499,3.86,551,4.632,552,3.384,554,3.384,555,3.384,575,3.535,621,3.384,623,3.384,670,4.135,690,4.363,691,3.384,692,3.384,693,3.384,743,3.384,745,3.384,746,3.384,1112,3.384,1113,3.94,1114,5.272,1115,3.94,1116,3.94]],["title/properties.html",[55,0.679,877,2.706]],["body/properties.html",[7,0.019,47,0.017,48,0.017,55,0.868,344,1.949,1006,4.021,1117,5.773,1118,5.773,1119,5.773,1120,5.773]],["title/miscellaneous/variables.html",[912,2.195,1121,3.878]],["body/miscellaneous/variables.html",[7,0.019,31,0.576,40,2.29,47,0.006,48,0.006,54,0.115,82,0.868,83,0.426,89,0.546,163,0.838,166,1.41,178,0.898,194,4.958,235,2.105,247,1.944,248,1.944,249,1.944,250,1.944,251,1.944,252,1.944,253,1.944,254,1.944,255,1.944,256,1.944,257,1.944,258,1.944,259,1.944,323,1.165,325,1.877,326,2.568,339,1.98,344,2.429,362,5.023,364,0.838,367,1.11,368,3.687,379,2.58,389,0.838,422,5.147,424,1.41,431,1.883,432,2.311,434,1.57,435,1.926,439,1.595,440,1.887,442,1.824,460,1.51,522,1.41,577,1.944,578,1.944,579,1.944,580,1.944,581,1.944,582,1.944,583,1.944,584,1.944,585,1.944,586,1.944,587,1.944,588,1.944,589,1.944,590,1.944,591,1.944,592,1.944,683,1.41,713,1.944,714,1.944,715,1.944,716,1.944,717,1.944,718,1.944,719,1.944,720,1.944,721,1.944,722,1.944,723,1.944,789,6.179,859,1.297,865,1.297,866,2.821,872,1.297,874,1.297,912,1.051,1081,6.194,1121,1.297,1122,1.51,1123,5.993,1124,6.285,1125,5.735,1126,6.285,1127,4.65,1128,4.65,1129,4.65,1130,3.849,1131,3.849,1132,3.849,1133,3.849,1134,3.284,1135,3.284,1136,3.284,1137,5.579,1138,4.944,1139,3.284,1140,3.284,1141,3.284,1142,3.284,1143,1.51,1144,1.51,1145,1.51,1146,3.849,1147,3.284,1148,5.399,1149,4.944,1150,3.284,1151,1.51,1152,2.538,1153,1.51,1154,1.51,1155,1.51,1156,1.51,1157,1.51]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"classes/migrations1679162777045.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":363,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/ProductEntity.html":{},"coverage.html":{}}}],["0'})@isoptional()@isdecimal",{"_index":355,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["0.0",{"_index":490,"title":{},"body":{"entities/ProductEntity.html":{}}}],["0.0.1",{"_index":1118,"title":{},"body":{"properties.html":{}}}],["0.00",{"_index":1095,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["0.1.13",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":329,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["1",{"_index":204,"title":{"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{}},"body":{"injectables/BrandRepository.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"injectables/ProductRepository.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["1.6.5",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":477,"title":{},"body":{"entities/ProductEntity.html":{}}}],["10.0.0",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":419,"title":{},"body":{"classes/FindOptions.html":{}}}],["100'})@validateif(o",{"_index":412,"title":{},"body":{"classes/FindOptions.html":{}}}],["100.00",{"_index":377,"title":{},"body":{"classes/CreateProductSerializer.html":{},"classes/GetProductResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{}}}],["127.0.0.1",{"_index":977,"title":{},"body":{"index.html":{}}}],["13306",{"_index":979,"title":{},"body":{"index.html":{}}}],["16.0.3",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["18t22:38:45.996z",{"_index":330,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["2",{"_index":380,"title":{"classes/Response400Dto-2.html":{},"classes/Response404Dto-2.html":{}},"body":{"classes/CreateProductSerializer.html":{},"classes/GetProductResponse.html":{},"entities/ProductEntity.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{}}}],["2.3.1",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":422,"title":{},"body":{"classes/FindOptions.html":{},"miscellaneous/variables.html":{}}}],["200'})@isnumberstring()@validateif(o",{"_index":409,"title":{},"body":{"classes/FindOptions.html":{}}}],["201",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2023",{"_index":328,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"license.html":{}}}],["29",{"_index":1116,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1114,"title":{},"body":{"overview.html":{}}}],["3.1.1",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":435,"title":{},"body":{"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"miscellaneous/variables.html":{}}}],["404",{"_index":432,"title":{},"body":{"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"miscellaneous/variables.html":{}}}],["409",{"_index":440,"title":{},"body":{"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":93,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{}}}],["6",{"_index":1115,"title":{},"body":{"overview.html":{}}}],["6.2.1",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1113,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["8.3.3",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":1046,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":74,"title":{},"body":{"classes/BasicEntity.html":{}}}],["accessors",{"_index":777,"title":{},"body":{"classes/TestHelper.html":{}}}],["action",{"_index":1071,"title":{},"body":{"license.html":{},"classes/migrations1679162777045.html":{}}}],["add",{"_index":1099,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["already",{"_index":183,"title":{},"body":{"injectables/BrandRepository.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"injectables/ProductRepository.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["and/or",{"_index":1037,"title":{},"body":{"license.html":{}}}],["ao",{"_index":445,"title":{},"body":{"classes/GetProductResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{}}}],["apibody",{"_index":239,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["apiokresponse",{"_index":240,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["apiokresponse(create_brand_ok_response",{"_index":272,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiokresponse(create_brand_ok_response)@apiresponse(create_brand_400_response)@apiresponse(create_brand_409_response)@apibody({type",{"_index":222,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiokresponse(create_product_ok_response",{"_index":609,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiokresponse(create_product_ok_response)@apiresponse(create_product_400_response)@apiresponse(create_product_409_response)@apibody({type",{"_index":561,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiokresponse(create_seller_ok_response",{"_index":732,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiokresponse(create_seller_ok_response)@apiresponse(create_seller_400_response)@apibody({type",{"_index":700,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiokresponse(delete_brand_ok_response",{"_index":283,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiokresponse(delete_brand_ok_response)@apiresponse(delete_brand_404_response)@apiparam(param_id_brand)@delete(':id",{"_index":229,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiokresponse(delete_product_ok_response",{"_index":618,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiokresponse(delete_product_ok_response)@apiresponse(delete_product_404_response)@apiparam(param_id_product)@delete(':id",{"_index":570,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiokresponse(delete_seller_ok_response",{"_index":740,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiokresponse(delete_seller_ok_response)@apiresponse(delete_seller_404_response)@apiparam(param_id_seller)@delete(':id",{"_index":707,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiokresponse(get_brand_ok_response",{"_index":264,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiokresponse(get_brand_ok_response)@get",{"_index":225,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiokresponse(get_by_id_brand_ok_response",{"_index":266,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiokresponse(get_by_id_brand_ok_response)@apiresponse(get_by_id_brand_404_response)@apiparam(param_id_brand)@get(':id",{"_index":227,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiokresponse(get_by_id_product_ok_response",{"_index":605,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiokresponse(get_by_id_product_ok_response)@apiresponse(get_by_id_product_404_response)@apiparam(param_id_product)@get(':id",{"_index":568,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiokresponse(get_by_id_seller_ok_response",{"_index":729,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiokresponse(get_by_id_seller_ok_response)@apiresponse(get_by_id_seller_404_response)@get(':id",{"_index":705,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiokresponse(get_by_slug_product_ok_response",{"_index":599,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiokresponse(get_by_slug_product_ok_response)@apiresponse(get_by_slug_product_404_response)@apiparam(param_slug_product)@get(':slug",{"_index":566,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiokresponse(get_product_ok_response",{"_index":596,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiokresponse(get_product_ok_response)@get",{"_index":564,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiokresponse(get_seller_ok_response",{"_index":727,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiokresponse(get_seller_ok_response)@get",{"_index":703,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiokresponse(update_brand_ok_response",{"_index":276,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiokresponse(update_brand_ok_response)@apiresponse(update_brand_400_response)@apiresponse(update_brand_404_response)@apiresponse(update_brand_409_response)@apiparam(param_id_brand)@apibody({type",{"_index":231,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiokresponse(update_product_ok_response",{"_index":613,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiokresponse(update_product_ok_response)@apiresponse(update_product_400_response)@apiresponse(update_product_404_response)@apiresponse(update_product_409_response)@apiparam(param_id_product)@apibody({type",{"_index":572,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiokresponse(update_seller_ok_response",{"_index":735,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiokresponse(update_seller_ok_response)@apiresponse(update_seller_400_response)@apiresponse(update_seller_404_response)@apiparam(param_id_seller)@apibody({type",{"_index":709,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiparam",{"_index":241,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["apiparam(param_id_brand",{"_index":268,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiparam(param_id_product",{"_index":607,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiparam(param_id_seller",{"_index":738,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiparam(param_slug_product",{"_index":601,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiproperty",{"_index":314,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{}}}],["apiproperty()@isnotempty()@isnumber",{"_index":351,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@maxlength(50",{"_index":311,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSellerDto.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSellerDto.html":{}}}],["apiproperty({description",{"_index":322,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{}}}],["apiproperty({example",{"_index":643,"title":{},"body":{"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["apipropertyoptional",{"_index":358,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/FindOptions.html":{},"classes/UpdateProductDto.html":{}}}],["apipropertyoptional()@isoptional()@isdecimal",{"_index":839,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["apipropertyoptional()@isoptional()@isstring()@maxlength(50",{"_index":837,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["apipropertyoptional({default",{"_index":354,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["apipropertyoptional({example",{"_index":404,"title":{},"body":{"classes/FindOptions.html":{}}}],["apiresponse",{"_index":242,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["apiresponse(create_brand_400_response",{"_index":273,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiresponse(create_brand_409_response",{"_index":274,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiresponse(create_product_400_response",{"_index":610,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiresponse(create_product_409_response",{"_index":611,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiresponse(create_seller_400_response",{"_index":733,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiresponse(delete_brand_404_response",{"_index":284,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiresponse(delete_product_404_response",{"_index":619,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiresponse(delete_seller_404_response",{"_index":741,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiresponse(get_by_id_brand_404_response",{"_index":267,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiresponse(get_by_id_product_404_response",{"_index":606,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiresponse(get_by_id_seller_404_response",{"_index":730,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiresponse(get_by_slug_product_404_response",{"_index":600,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiresponse(update_brand_400_response",{"_index":277,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiresponse(update_brand_404_response",{"_index":278,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiresponse(update_brand_409_response",{"_index":279,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apiresponse(update_product_400_response",{"_index":614,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiresponse(update_product_404_response",{"_index":615,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiresponse(update_product_409_response",{"_index":616,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apiresponse(update_seller_400_response",{"_index":736,"title":{},"body":{"controllers/SellersController.html":{}}}],["apiresponse(update_seller_404_response",{"_index":737,"title":{},"body":{"controllers/SellersController.html":{}}}],["apitags",{"_index":243,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["apitags('brands",{"_index":261,"title":{},"body":{"controllers/BrandsController.html":{}}}],["apitags('products",{"_index":594,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apitags('sellers",{"_index":725,"title":{},"body":{"controllers/SellersController.html":{}}}],["aplicável",{"_index":335,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["app",{"_index":951,"title":{},"body":{"index.html":{}}}],["application",{"_index":997,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":1075,"title":{},"body":{"license.html":{}}}],["associada",{"_index":444,"title":{},"body":{"classes/GetProductResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{}}}],["associado",{"_index":454,"title":{},"body":{"classes/GetProductResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{}}}],["associated",{"_index":1023,"title":{},"body":{"license.html":{}}}],["async",{"_index":115,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"classes/TestHelper.html":{},"classes/migrations1679162777045.html":{}}}],["atualiza",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atualização",{"_index":342,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["author",{"_index":1120,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":1064,"title":{},"body":{"license.html":{}}}],["auto_increment",{"_index":1090,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["await",{"_index":172,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"classes/TestHelper.html":{},"classes/migrations1679162777045.html":{}}}],["bad",{"_index":437,"title":{},"body":{"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["baseentity",{"_index":53,"title":{},"body":{"classes/BasicEntity.html":{},"classes/TestHelper.html":{}}}],["basic.entity",{"_index":106,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{}}}],["basicentity",{"_index":49,"title":{"classes/BasicEntity.html":{}},"body":{"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{},"coverage.html":{}}}],["before",{"_index":926,"title":{},"body":{"index.html":{}}}],["beforeinsert",{"_index":485,"title":{},"body":{"entities/ProductEntity.html":{}}}],["beforeupdate",{"_index":486,"title":{},"body":{"entities/ProductEntity.html":{}}}],["between",{"_index":534,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["body",{"_index":234,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["boolean",{"_index":72,"title":{},"body":{"classes/BasicEntity.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerSerializer.html":{}}}],["bootstrap",{"_index":870,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["brand",{"_index":108,"title":{},"body":{"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"classes/FindOptions.html":{},"classes/GetProductResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{},"classes/migrations1679162777045.html":{}}}],["brand.dto",{"_index":162,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{}}}],["brand.dto.ts",{"_index":310,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/UpdateBrandDto.html":{},"coverage.html":{}}}],["brand.dto.ts:11",{"_index":313,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/UpdateBrandDto.html":{}}}],["brand.entity",{"_index":488,"title":{},"body":{"entities/ProductEntity.html":{}}}],["brand.products",{"_index":469,"title":{},"body":{"entities/ProductEntity.html":{}}}],["brand.repository",{"_index":215,"title":{},"body":{"modules/BrandRepositoryModule.html":{}}}],["brand.serializer",{"_index":165,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{}}}],["brand.serializer.ts",{"_index":321,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/UpdateBrandSerializer.html":{},"coverage.html":{}}}],["brand.serializer.ts:14",{"_index":341,"title":{},"body":{"classes/CreateBrandSerializer.html":{}}}],["brand.serializer.ts:20",{"_index":331,"title":{},"body":{"classes/CreateBrandSerializer.html":{}}}],["brand.serializer.ts:26",{"_index":343,"title":{},"body":{"classes/CreateBrandSerializer.html":{}}}],["brand.serializer.ts:32",{"_index":337,"title":{},"body":{"classes/CreateBrandSerializer.html":{}}}],["brand.serializer.ts:5",{"_index":835,"title":{},"body":{"classes/UpdateBrandSerializer.html":{}}}],["brand.serializer.ts:8",{"_index":338,"title":{},"body":{"classes/CreateBrandSerializer.html":{}}}],["brand\\`(\\`id",{"_index":1104,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["brand_not_found",{"_index":195,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["brandentity",{"_index":79,"title":{"entities/BrandEntity.html":{}},"body":{"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/GetProductResponse.html":{},"entities/ProductEntity.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{},"coverage.html":{}}}],["brandid",{"_index":348,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/GetProductResponse.html":{},"entities/ProductEntity.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{},"classes/migrations1679162777045.html":{}}}],["brandrepository",{"_index":112,"title":{"injectables/BrandRepository.html":{}},"body":{"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"injectables/BrandsService.html":{},"coverage.html":{},"overview.html":{}}}],["brandrepositorymodule",{"_index":209,"title":{"modules/BrandRepositoryModule.html":{}},"body":{"modules/BrandRepositoryModule.html":{},"modules/BrandsModule.html":{},"modules.html":{},"overview.html":{}}}],["brands",{"_index":221,"title":{},"body":{"controllers/BrandsController.html":{}}}],["brands.controller",{"_index":293,"title":{},"body":{"modules/BrandsModule.html":{}}}],["brands.service",{"_index":246,"title":{},"body":{"controllers/BrandsController.html":{},"modules/BrandsModule.html":{}}}],["brands/brands.module",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductRepositoryModule.html":{}}}],["brands/brands.service",{"_index":515,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["brandscontroller",{"_index":218,"title":{"controllers/BrandsController.html":{}},"body":{"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"coverage.html":{}}}],["brandsmodule",{"_index":6,"title":{"modules/BrandsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BrandsModule.html":{},"modules/ProductRepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["brandsservice",{"_index":245,"title":{"injectables/BrandsService.html":{}},"body":{"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"coverage.html":{},"overview.html":{}}}],["bring",{"_index":973,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1111,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":999,"title":{},"body":{"index.html":{},"modules.html":{}}}],["c",{"_index":1011,"title":{},"body":{"license.html":{}}}],["cadastrada",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cadastradas",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cadastrado",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cadastrados",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caldeira",{"_index":1013,"title":{},"body":{"license.html":{}}}],["call",{"_index":982,"title":{},"body":{"index.html":{}}}],["catch",{"_index":176,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"classes/TestHelper.html":{}}}],["centauro",{"_index":395,"title":{},"body":{"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto-2.html":{}}}],["centauro'})@isoptional()@isstring",{"_index":414,"title":{},"body":{"classes/FindOptions.html":{}}}],["charge",{"_index":1018,"title":{},"body":{"license.html":{}}}],["chosen",{"_index":918,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1067,"title":{},"body":{"license.html":{}}}],["class",{"_index":46,"title":{"classes/BasicEntity.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"classes/migrations1679162777045.html":{}},"body":{"modules/AppModule.html":{},"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"coverage.html":{},"dependencies.html":{},"classes/migrations1679162777045.html":{}}}],["classes",{"_index":50,"title":{},"body":{"classes/BasicEntity.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"classes/migrations1679162777045.html":{},"overview.html":{}}}],["cleandatabase",{"_index":770,"title":{},"body":{"classes/TestHelper.html":{}}}],["cleaning",{"_index":806,"title":{},"body":{"classes/TestHelper.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_brandrepositorymodule",{"_index":210,"title":{},"body":{"modules/BrandRepositoryModule.html":{},"overview.html":{}}}],["cluster_brandrepositorymodule_exports",{"_index":211,"title":{},"body":{"modules/BrandRepositoryModule.html":{},"overview.html":{}}}],["cluster_brandrepositorymodule_providers",{"_index":212,"title":{},"body":{"modules/BrandRepositoryModule.html":{},"overview.html":{}}}],["cluster_brandsmodule",{"_index":288,"title":{},"body":{"modules/BrandsModule.html":{},"overview.html":{}}}],["cluster_brandsmodule_exports",{"_index":290,"title":{},"body":{"modules/BrandsModule.html":{},"overview.html":{}}}],["cluster_brandsmodule_imports",{"_index":289,"title":{},"body":{"modules/BrandsModule.html":{}}}],["cluster_brandsmodule_providers",{"_index":291,"title":{},"body":{"modules/BrandsModule.html":{},"overview.html":{}}}],["cluster_productrepositorymodule",{"_index":552,"title":{},"body":{"modules/ProductRepositoryModule.html":{},"overview.html":{}}}],["cluster_productrepositorymodule_exports",{"_index":555,"title":{},"body":{"modules/ProductRepositoryModule.html":{},"overview.html":{}}}],["cluster_productrepositorymodule_imports",{"_index":553,"title":{},"body":{"modules/ProductRepositoryModule.html":{}}}],["cluster_productrepositorymodule_providers",{"_index":554,"title":{},"body":{"modules/ProductRepositoryModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":621,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":622,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":623,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_sellerrepositorymodule",{"_index":691,"title":{},"body":{"modules/SellerRepositoryModule.html":{},"overview.html":{}}}],["cluster_sellerrepositorymodule_exports",{"_index":692,"title":{},"body":{"modules/SellerRepositoryModule.html":{},"overview.html":{}}}],["cluster_sellerrepositorymodule_providers",{"_index":693,"title":{},"body":{"modules/SellerRepositoryModule.html":{},"overview.html":{}}}],["cluster_sellersmodule",{"_index":743,"title":{},"body":{"modules/SellersModule.html":{},"overview.html":{}}}],["cluster_sellersmodule_exports",{"_index":745,"title":{},"body":{"modules/SellersModule.html":{},"overview.html":{}}}],["cluster_sellersmodule_imports",{"_index":744,"title":{},"body":{"modules/SellersModule.html":{}}}],["cluster_sellersmodule_providers",{"_index":746,"title":{},"body":{"modules/SellersModule.html":{},"overview.html":{}}}],["colorize",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":102,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{}}}],["column({type",{"_index":90,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{}}}],["commerce",{"_index":922,"title":{},"body":{"index.html":{}}}],["common/database/entities/brand.entity",{"_index":160,"title":{},"body":{"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/GetProductResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{}}}],["common/database/entities/product.entity",{"_index":516,"title":{},"body":{"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["common/database/entities/seller.entity",{"_index":459,"title":{},"body":{"classes/GetProductResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{},"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["compodoc",{"_index":1002,"title":{},"body":{"index.html":{}}}],["compose",{"_index":966,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1045,"title":{},"body":{"license.html":{}}}],["config/db.config",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/TestHelper.html":{}}}],["configservice",{"_index":866,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":967,"title":{},"body":{"index.html":{}}}],["conflict",{"_index":441,"title":{},"body":{"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["conflictexception",{"_index":155,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{}}}],["conflictexception('name",{"_index":182,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{}}}],["connection",{"_index":1076,"title":{},"body":{"license.html":{}}}],["const",{"_index":185,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"classes/TestHelper.html":{}}}],["constraint",{"_index":1100,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{}}}],["constructor(brandrepository",{"_index":296,"title":{},"body":{"injectables/BrandsService.html":{}}}],["constructor(private",{"_index":263,"title":{},"body":{"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["constructor(productrepository",{"_index":628,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(repository",{"_index":126,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["constructor(sellerrepository",{"_index":751,"title":{},"body":{"injectables/SellersService.html":{}}}],["container",{"_index":985,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1072,"title":{},"body":{"license.html":{}}}],["controller",{"_index":217,"title":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{},"coverage.html":{}}}],["controller('brands",{"_index":262,"title":{},"body":{"controllers/BrandsController.html":{}}}],["controller('products",{"_index":595,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('sellers",{"_index":726,"title":{},"body":{"controllers/SellersController.html":{}}}],["controllers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandRepositoryModule.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"modules/ProductRepositoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"modules/SellerRepositoryModule.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"overview.html":{}}}],["copies",{"_index":1039,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1021,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1010,"title":{},"body":{"license.html":{}}}],["corrida",{"_index":374,"title":{},"body":{"classes/CreateProductSerializer.html":{},"classes/GetProductResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{}}}],["coverage",{"_index":846,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":116,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["create(data",{"_index":132,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["create_brand_400_response",{"_index":247,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["create_brand_409_response",{"_index":248,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["create_brand_ok_response",{"_index":249,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["create_product_400_response",{"_index":577,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["create_product_409_response",{"_index":578,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["create_product_ok_response",{"_index":579,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["create_seller_400_response",{"_index":713,"title":{},"body":{"controllers/SellersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["create_seller_ok_response",{"_index":714,"title":{},"body":{"controllers/SellersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createbranddto",{"_index":133,"title":{"classes/CreateBrandDto.html":{}},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"coverage.html":{}}}],["createbranddto})@post",{"_index":223,"title":{},"body":{"controllers/BrandsController.html":{}}}],["createbrandserializer",{"_index":163,"title":{"classes/CreateBrandSerializer.html":{}},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandSerializer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createdat",{"_index":56,"title":{},"body":{"classes/BasicEntity.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"classes/migrations1679162777045.html":{}}}],["createdatecolumn",{"_index":63,"title":{},"body":{"classes/BasicEntity.html":{}}}],["createproductdto",{"_index":345,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["createproductdto})@post",{"_index":562,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createproductserializer",{"_index":364,"title":{"classes/CreateProductSerializer.html":{}},"body":{"classes/CreateProductSerializer.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createquerybuilder('brand",{"_index":201,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["createquerybuilder('product",{"_index":529,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["createsellerdto",{"_index":385,"title":{"classes/CreateSellerDto.html":{}},"body":{"classes/CreateSellerDto.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"coverage.html":{}}}],["createsellerdto})@post",{"_index":701,"title":{},"body":{"controllers/SellersController.html":{}}}],["createsellerserializer",{"_index":389,"title":{"classes/CreateSellerSerializer.html":{}},"body":{"classes/CreateSellerSerializer.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cria",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["criação",{"_index":324,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["current_timestamp(6",{"_index":1089,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["da",{"_index":325,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":1068,"title":{},"body":{"license.html":{}}}],["data",{"_index":135,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{}}}],["data.name",{"_index":548,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["database",{"_index":824,"title":{},"body":{"classes/TestHelper.html":{},"index.html":{}}}],["datasource",{"_index":766,"title":{},"body":{"classes/TestHelper.html":{}}}],["date",{"_index":61,"title":{},"body":{"classes/BasicEntity.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["datetime(6",{"_index":1088,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["db",{"_index":805,"title":{},"body":{"classes/TestHelper.html":{},"index.html":{}}}],["db_host=127.0.0.1",{"_index":945,"title":{},"body":{"index.html":{}}}],["db_host=localhost",{"_index":938,"title":{},"body":{"index.html":{}}}],["db_name=hermes_dev",{"_index":940,"title":{},"body":{"index.html":{}}}],["db_name=hermes_test",{"_index":947,"title":{},"body":{"index.html":{}}}],["db_password=hermes_dev",{"_index":942,"title":{},"body":{"index.html":{}}}],["db_password=hermes_test",{"_index":949,"title":{},"body":{"index.html":{}}}],["db_port=13306",{"_index":939,"title":{},"body":{"index.html":{}}}],["db_port=23306",{"_index":946,"title":{},"body":{"index.html":{}}}],["db_type=mariadb",{"_index":937,"title":{},"body":{"index.html":{}}}],["db_user=hermes_dev",{"_index":941,"title":{},"body":{"index.html":{}}}],["db_user=hermes_test",{"_index":948,"title":{},"body":{"index.html":{}}}],["dbconfig",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"classes/TestHelper.html":{}}}],["de",{"_index":323,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":1025,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1077,"title":{},"body":{"license.html":{}}}],["decimal",{"_index":475,"title":{},"body":{"entities/ProductEntity.html":{}}}],["decimal(10,2",{"_index":1094,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["decorators",{"_index":62,"title":{},"body":{"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"controllers/BrandsController.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"controllers/ProductsController.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"controllers/SellersController.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{}}}],["default",{"_index":362,"title":{},"body":{"classes/CreateProductDto.html":{},"entities/ProductEntity.html":{},"classes/migrations1679162777045.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":64,"title":{},"body":{"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"classes/migrations1679162777045.html":{}}}],["delete",{"_index":235,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{},"classes/migrations1679162777045.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":285,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["delete_brand_404_response",{"_index":250,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete_brand_ok_response",{"_index":251,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete_product_404_response",{"_index":580,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete_product_ok_response",{"_index":581,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete_seller_404_response",{"_index":715,"title":{},"body":{"controllers/SellersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete_seller_ok_response",{"_index":716,"title":{},"body":{"controllers/SellersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deletedat",{"_index":57,"title":{},"body":{"classes/BasicEntity.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"classes/migrations1679162777045.html":{}}}],["deletedatecolumn",{"_index":66,"title":{},"body":{"classes/BasicEntity.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BrandRepositoryModule.html":{},"modules/BrandsModule.html":{},"modules/ProductRepositoryModule.html":{},"modules/ProductsModule.html":{},"modules/SellerRepositoryModule.html":{},"modules/SellersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":344,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destroy",{"_index":771,"title":{},"body":{"classes/TestHelper.html":{}}}],["dev",{"_index":969,"title":{},"body":{"index.html":{}}}],["deve",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":952,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1035,"title":{},"body":{"license.html":{}}}],["docker",{"_index":965,"title":{},"body":{"index.html":{}}}],["docs:buildnow",{"_index":1004,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":847,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dotenv",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":1080,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["down(queryrunner",{"_index":1083,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["download",{"_index":928,"title":{},"body":{"index.html":{}}}],["drop",{"_index":1107,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["dto/create",{"_index":161,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["dto/find",{"_index":525,"title":{},"body":{"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dto/update",{"_index":168,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["e",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":962,"title":{},"body":{"index.html":{}}}],["eager",{"_index":470,"title":{},"body":{"entities/ProductEntity.html":{}}}],["empty",{"_index":436,"title":{},"body":{"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["encontrada",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encontrado",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["engine=innodb",{"_index":1093,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["entities",{"_index":80,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{},"overview.html":{}}}],["entity",{"_index":78,"title":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{}},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{},"classes/TestHelper.html":{},"coverage.html":{}}}],["entitytype",{"_index":791,"title":{},"body":{"classes/TestHelper.html":{}}}],["env",{"_index":935,"title":{},"body":{"index.html":{}}}],["env.test",{"_index":936,"title":{},"body":{"index.html":{}}}],["error",{"_index":149,"title":{},"body":{"injectables/BrandRepository.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"injectables/ProductRepository.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"injectables/SellerRepository.html":{},"classes/TestHelper.html":{}}}],["error(`error",{"_index":822,"title":{},"body":{"classes/TestHelper.html":{}}}],["error.message",{"_index":208,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["estar",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":1063,"title":{},"body":{"license.html":{}}}],["example",{"_index":327,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"index.html":{}}}],["exclui",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exclusão",{"_index":333,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["exist",{"_index":117,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["exist(id",{"_index":137,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["exists",{"_index":184,"title":{},"body":{"injectables/BrandRepository.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"injectables/ProductRepository.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["export",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"classes/migrations1679162777045.html":{}}}],["exports",{"_index":214,"title":{},"body":{"modules/BrandRepositoryModule.html":{},"modules/BrandsModule.html":{},"modules/ProductRepositoryModule.html":{},"modules/SellerRepositoryModule.html":{},"modules/SellersModule.html":{}}}],["expose",{"_index":976,"title":{},"body":{"index.html":{}}}],["express",{"_index":883,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":52,"title":{},"body":{"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{}}}],["false",{"_index":95,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"coverage.html":{},"classes/migrations1679162777045.html":{}}}],["files",{"_index":1024,"title":{},"body":{"license.html":{}}}],["filter",{"_index":816,"title":{},"body":{"classes/TestHelper.html":{}}}],["filtrar",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finally",{"_index":825,"title":{},"body":{"classes/TestHelper.html":{}}}],["findall",{"_index":118,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["findall(@query",{"_index":597,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findall(query",{"_index":503,"title":{},"body":{"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findbyslug",{"_index":498,"title":{},"body":{"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findbyslug(@param('slug",{"_index":603,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findbyslug(slug",{"_index":506,"title":{},"body":{"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findone",{"_index":119,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["findone(@param('id",{"_index":270,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["findone(id",{"_index":141,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["findoptions",{"_index":398,"title":{"classes/FindOptions.html":{}},"body":{"classes/FindOptions.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["first",{"_index":1003,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1059,"title":{},"body":{"license.html":{}}}],["fk_bb7d3d9dc1fae40293795ae39d6",{"_index":1101,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["fk_d5cac481d22dacaf4d53f900a3f",{"_index":1105,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["flow",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["following",{"_index":1044,"title":{},"body":{"license.html":{}}}],["foreign",{"_index":1102,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["foreign_key_checks=0",{"_index":819,"title":{},"body":{"classes/TestHelper.html":{}}}],["foreign_key_checks=1",{"_index":821,"title":{},"body":{"classes/TestHelper.html":{}}}],["found",{"_index":180,"title":{},"body":{"injectables/BrandRepository.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"injectables/ProductRepository.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"injectables/SellerRepository.html":{}}}],["free",{"_index":1017,"title":{},"body":{"license.html":{}}}],["function",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":913,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1042,"title":{},"body":{"license.html":{}}}],["generateslug",{"_index":491,"title":{},"body":{"entities/ProductEntity.html":{}}}],["get(':id",{"_index":269,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["get(':slug",{"_index":602,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get_brand_ok_response",{"_index":252,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_by_id_brand_404_response",{"_index":253,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_by_id_brand_ok_response",{"_index":254,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_by_id_product_404_response",{"_index":582,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_by_id_product_ok_response",{"_index":583,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_by_id_seller_404_response",{"_index":717,"title":{},"body":{"controllers/SellersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_by_id_seller_ok_response",{"_index":718,"title":{},"body":{"controllers/SellersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_by_slug_product_404_response",{"_index":584,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_by_slug_product_ok_response",{"_index":585,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_product_ok_response",{"_index":586,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get_seller_ok_response",{"_index":719,"title":{},"body":{"controllers/SellersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getbrandresponse",{"_index":424,"title":{"classes/GetBrandResponse.html":{}},"body":{"classes/GetBrandResponse.html":{},"classes/Response400Dto.html":{},"classes/Response404Dto.html":{},"classes/Response409Dto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcount",{"_index":203,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{}}}],["getinstance",{"_index":772,"title":{},"body":{"classes/TestHelper.html":{}}}],["getisinitialized",{"_index":794,"title":{},"body":{"classes/TestHelper.html":{}}}],["getproductresponse",{"_index":442,"title":{"classes/GetProductResponse.html":{}},"body":{"classes/GetProductResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrepository",{"_index":773,"title":{},"body":{"classes/TestHelper.html":{}}}],["getrepository(klass",{"_index":784,"title":{},"body":{"classes/TestHelper.html":{}}}],["getsellerresponse",{"_index":460,"title":{"classes/GetSellerResponse.html":{}},"body":{"classes/GetSellerResponse.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":915,"title":{"index.html":{},"license.html":{}},"body":{}}],["god",{"_index":921,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1016,"title":{},"body":{"license.html":{}}}],["greek",{"_index":920,"title":{},"body":{"index.html":{}}}],["helpers",{"_index":75,"title":{},"body":{"classes/BasicEntity.html":{}}}],["hereby",{"_index":1015,"title":{},"body":{"license.html":{}}}],["hermes",{"_index":917,"title":{},"body":{"index.html":{}}}],["holders",{"_index":1065,"title":{},"body":{"license.html":{}}}],["http",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["http://localhost:3000/api",{"_index":1001,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1005,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":148,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["id",{"_index":82,"title":{},"body":{"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/migrations1679162777045.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["idx_5f468ae5696f07da025138e38f",{"_index":1097,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["idx_fb3049aa3e5955c00ded7a2827",{"_index":1096,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["ilike",{"_index":514,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["ilike(`%${name",{"_index":536,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["implements",{"_index":1078,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["implied",{"_index":1055,"title":{},"body":{"license.html":{}}}],["import",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"classes/migrations1679162777045.html":{}}}],["imports",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandRepositoryModule.html":{},"modules/BrandsModule.html":{},"modules/ProductRepositoryModule.html":{},"modules/ProductsModule.html":{},"modules/SellerRepositoryModule.html":{},"modules/SellersModule.html":{}}}],["included",{"_index":1049,"title":{},"body":{"license.html":{}}}],["including",{"_index":1028,"title":{},"body":{"license.html":{}}}],["index",{"_index":54,"title":{"index.html":{}},"body":{"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"miscellaneous/functions.html":{},"classes/migrations1679162777045.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"classes/migrations1679162777045.html":{}}}],["initialize",{"_index":774,"title":{},"body":{"classes/TestHelper.html":{}}}],["inject",{"_index":156,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["inject(logger",{"_index":170,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["injectable",{"_index":111,"title":{"injectables/BrandRepository.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"injectables/SellersService.html":{}},"body":{"injectables/BrandRepository.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"injectables/SellersService.html":{},"coverage.html":{}}}],["injectables",{"_index":113,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"injectables/SellersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":159,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["injectrepository(brandentity",{"_index":169,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["injectrepository(productentity",{"_index":527,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["injectrepository(sellerentity",{"_index":684,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["install",{"_index":929,"title":{},"body":{"index.html":{}}}],["installation",{"_index":932,"title":{},"body":{"index.html":{}}}],["installconfigure",{"_index":934,"title":{},"body":{"index.html":{}}}],["installed",{"_index":971,"title":{},"body":{"index.html":{}}}],["instance",{"_index":768,"title":{},"body":{"classes/TestHelper.html":{},"index.html":{}}}],["instanceof",{"_index":206,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["int",{"_index":87,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{},"classes/migrations1679162777045.html":{}}}],["internal_error",{"_index":207,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["internalservererrorexception",{"_index":157,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["isdecimal",{"_index":359,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isdefined",{"_index":416,"title":{},"body":{"classes/FindOptions.html":{}}}],["isdefined()@isnumberstring",{"_index":410,"title":{},"body":{"classes/FindOptions.html":{}}}],["isdeleted",{"_index":60,"title":{},"body":{"classes/BasicEntity.html":{}}}],["isinitialized",{"_index":778,"title":{},"body":{"classes/TestHelper.html":{}}}],["isnotempty",{"_index":315,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSellerDto.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateSellerDto.html":{}}}],["isnumber",{"_index":360,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnumberstring",{"_index":417,"title":{},"body":{"classes/FindOptions.html":{}}}],["isolated",{"_index":984,"title":{},"body":{"index.html":{}}}],["isoptional",{"_index":361,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/FindOptions.html":{},"classes/UpdateProductDto.html":{}}}],["isstring",{"_index":316,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSellerDto.html":{},"classes/FindOptions.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSellerDto.html":{}}}],["janice",{"_index":1012,"title":{},"body":{"license.html":{}}}],["jest",{"_index":981,"title":{},"body":{"index.html":{}}}],["key",{"_index":812,"title":{},"body":{"classes/TestHelper.html":{},"classes/migrations1679162777045.html":{}}}],["kind",{"_index":1054,"title":{},"body":{"license.html":{}}}],["klass",{"_index":786,"title":{},"body":{"classes/TestHelper.html":{}}}],["known",{"_index":923,"title":{},"body":{"index.html":{}}}],["leftjoin('product.brand",{"_index":530,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["leftjoin('product.seller",{"_index":531,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["length",{"_index":92,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{}}}],["levelfirst",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":1069,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1066,"title":{},"body":{"license.html":{}}}],["license",{"_index":1006,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":1009,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1029,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1056,"title":{},"body":{"license.html":{}}}],["lista",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":968,"title":{},"body":{"index.html":{}}}],["loadallrelationids",{"_index":532,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["loaded",{"_index":988,"title":{},"body":{"index.html":{}}}],["loadrelationids",{"_index":540,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["local",{"_index":987,"title":{},"body":{"index.html":{}}}],["locally",{"_index":991,"title":{},"body":{"index.html":{}}}],["logger",{"_index":128,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["loggermodule",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["long",{"_index":312,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSellerDto.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSellerDto.html":{}}}],["lower",{"_index":494,"title":{},"body":{"entities/ProductEntity.html":{}}}],["lts",{"_index":931,"title":{},"body":{"index.html":{}}}],["machine",{"_index":972,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":487,"title":{},"body":{"entities/ProductEntity.html":{}}}],["manytoone(undefined",{"_index":468,"title":{},"body":{"entities/ProductEntity.html":{}}}],["map((row",{"_index":811,"title":{},"body":{"classes/TestHelper.html":{}}}],["marca",{"_index":326,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"miscellaneous/variables.html":{}}}],["marcas",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mariadb",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/TestHelper.html":{},"dependencies.html":{},"index.html":{}}}],["matching",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"classes/migrations1679162777045.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":317,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSellerDto.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSellerDto.html":{}}}],["maxlength(50",{"_index":319,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSellerDto.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSellerDto.html":{}}}],["meexample",{"_index":944,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1058,"title":{},"body":{"license.html":{}}}],["merchants",{"_index":925,"title":{},"body":{"index.html":{}}}],["merge",{"_index":1033,"title":{},"body":{"license.html":{}}}],["merunning",{"_index":950,"title":{},"body":{"index.html":{}}}],["message",{"_index":193,"title":{},"body":{"injectables/BrandRepository.html":{},"classes/CreateBrandDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSellerDto.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"injectables/ProductRepository.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"injectables/SellerRepository.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSellerDto.html":{}}}],["metadata",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":59,"title":{},"body":{"classes/BasicEntity.html":{},"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/migrations1679162777045.html":{}}}],["migrationinterface",{"_index":1079,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["migrations",{"_index":817,"title":{},"body":{"classes/TestHelper.html":{}}}],["migrations.ts",{"_index":851,"title":{},"body":{"coverage.html":{},"classes/migrations1679162777045.html":{}}}],["migrations.ts:14",{"_index":1084,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["migrations.ts:4",{"_index":1082,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["migrations.ts:6",{"_index":1086,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["migrations/1679162777045",{"_index":850,"title":{},"body":{"coverage.html":{},"classes/migrations1679162777045.html":{}}}],["migrations1679162777045",{"_index":852,"title":{"classes/migrations1679162777045.html":{}},"body":{"coverage.html":{},"classes/migrations1679162777045.html":{}}}],["miscellaneous",{"_index":912,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1008,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":956,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1032,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/BrandRepositoryModule.html":{},"modules/BrandsModule.html":{},"modules/ProductRepositoryModule.html":{},"modules/ProductsModule.html":{},"modules/SellerRepositoryModule.html":{},"modules/SellersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BrandRepositoryModule.html":{},"modules/BrandsModule.html":{},"modules/ProductRepositoryModule.html":{},"modules/ProductsModule.html":{},"modules/SellerRepositoryModule.html":{},"modules/SellersModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BrandRepositoryModule.html":{},"modules/BrandsModule.html":{},"modules/ProductRepositoryModule.html":{},"modules/ProductsModule.html":{},"modules/SellerRepositoryModule.html":{},"modules/SellersModule.html":{},"modules.html":{},"overview.html":{}}}],["mysql2",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":83,"title":{},"body":{"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSellerDto.html":{},"index.html":{},"classes/migrations1679162777045.html":{},"miscellaneous/variables.html":{}}}],["nameexists",{"_index":120,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{}}}],["nameexists(name",{"_index":143,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{}}}],["naming",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["navigate",{"_index":1000,"title":{},"body":{"index.html":{}}}],["need",{"_index":970,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1007,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":244,"title":{},"body":{"controllers/BrandsController.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"controllers/ProductsController.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"controllers/SellersController.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"dependencies.html":{}}}],["new",{"_index":178,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"classes/TestHelper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newbrand",{"_index":186,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["newbrand.id",{"_index":189,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["newproduct",{"_index":543,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["newproduct.id",{"_index":545,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["newseller",{"_index":686,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["newseller.id",{"_index":688,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["nico",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nike",{"_index":340,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/Response400Dto.html":{},"classes/Response404Dto.html":{},"classes/Response409Dto.html":{}}}],["nike'})@isoptional()@isstring",{"_index":405,"title":{},"body":{"classes/FindOptions.html":{}}}],["node",{"_index":930,"title":{},"body":{"index.html":{}}}],["nome",{"_index":339,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1062,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":158,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["notfoundexception('brand",{"_index":179,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["notfoundexception('seller",{"_index":685,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["notice",{"_index":1047,"title":{},"body":{"license.html":{}}}],["now",{"_index":990,"title":{},"body":{"index.html":{}}}],["npm",{"_index":933,"title":{},"body":{"index.html":{}}}],["null",{"_index":332,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"classes/TestHelper.html":{},"classes/migrations1679162777045.html":{}}}],["nullable",{"_index":94,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{}}}],["number",{"_index":85,"title":{},"body":{"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"injectables/SellersService.html":{},"classes/UpdateProductDto.html":{}}}],["não",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["o.priceend",{"_index":421,"title":{},"body":{"classes/FindOptions.html":{}}}],["o.pricestart",{"_index":423,"title":{},"body":{"classes/FindOptions.html":{}}}],["object",{"_index":789,"title":{},"body":{"classes/TestHelper.html":{},"miscellaneous/variables.html":{}}}],["object.keys(row)[0",{"_index":813,"title":{},"body":{"classes/TestHelper.html":{}}}],["obtaining",{"_index":1020,"title":{},"body":{"license.html":{}}}],["onetomany",{"_index":103,"title":{},"body":{"entities/BrandEntity.html":{},"entities/SellerEntity.html":{}}}],["onetomany(undefined",{"_index":98,"title":{},"body":{"entities/BrandEntity.html":{},"entities/SellerEntity.html":{}}}],["open",{"_index":998,"title":{},"body":{"index.html":{}}}],["optional",{"_index":131,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateProductDto.html":{},"classes/FindOptions.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateProductDto.html":{},"classes/migrations1679162777045.html":{}}}],["options",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["options.dto",{"_index":526,"title":{},"body":{"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["options.dto.ts",{"_index":400,"title":{},"body":{"classes/FindOptions.html":{},"coverage.html":{}}}],["options.dto.ts:16",{"_index":408,"title":{},"body":{"classes/FindOptions.html":{}}}],["options.dto.ts:23",{"_index":406,"title":{},"body":{"classes/FindOptions.html":{}}}],["options.dto.ts:30",{"_index":415,"title":{},"body":{"classes/FindOptions.html":{}}}],["options.dto.ts:38",{"_index":413,"title":{},"body":{"classes/FindOptions.html":{}}}],["options.dto.ts:47",{"_index":411,"title":{},"body":{"classes/FindOptions.html":{}}}],["otherwise",{"_index":1074,"title":{},"body":{"license.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandRepositoryModule.html":{},"modules/BrandsModule.html":{},"modules/ProductRepositoryModule.html":{},"modules/ProductsModule.html":{},"modules/SellerRepositoryModule.html":{},"modules/SellersModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1112,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":877,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":236,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["param('id",{"_index":281,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["param_id_brand",{"_index":255,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param_id_product",{"_index":587,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param_id_seller",{"_index":720,"title":{},"body":{"controllers/SellersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param_slug_product",{"_index":588,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":130,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/migrations1679162777045.html":{}}}],["particular",{"_index":1060,"title":{},"body":{"license.html":{}}}],["parâmetros",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permission",{"_index":1014,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1040,"title":{},"body":{"license.html":{}}}],["permite",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["person",{"_index":1019,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1041,"title":{},"body":{"license.html":{}}}],["pino",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"dependencies.html":{}}}],["pinohttp",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["por",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":978,"title":{},"body":{"index.html":{}}}],["portions",{"_index":1051,"title":{},"body":{"license.html":{}}}],["post",{"_index":237,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["precision",{"_index":476,"title":{},"body":{"entities/ProductEntity.html":{}}}],["prefix",{"_index":220,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["pretty",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["preço",{"_index":376,"title":{},"body":{"classes/CreateProductSerializer.html":{},"classes/GetProductResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{}}}],["price",{"_index":349,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/GetProductResponse.html":{},"entities/ProductEntity.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{},"classes/UpdateProductDto.html":{},"classes/migrations1679162777045.html":{}}}],["priceend",{"_index":401,"title":{},"body":{"classes/FindOptions.html":{},"injectables/ProductRepository.html":{}}}],["pricestart",{"_index":402,"title":{},"body":{"classes/FindOptions.html":{},"injectables/ProductRepository.html":{}}}],["primary",{"_index":1092,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["primarygeneratedcolumn",{"_index":104,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{}}}],["primarygeneratedcolumn({type",{"_index":86,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{}}}],["private",{"_index":122,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"classes/TestHelper.html":{}}}],["product",{"_index":99,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"entities/SellerEntity.html":{},"classes/migrations1679162777045.html":{}}}],["product.brand",{"_index":100,"title":{},"body":{"entities/BrandEntity.html":{}}}],["product.dto",{"_index":518,"title":{},"body":{"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["product.dto.ts",{"_index":347,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":838,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:16",{"_index":840,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:18",{"_index":353,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:23",{"_index":356,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:28",{"_index":352,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:33",{"_index":357,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.entity",{"_index":107,"title":{},"body":{"entities/BrandEntity.html":{},"entities/SellerEntity.html":{}}}],["product.repository",{"_index":557,"title":{},"body":{"modules/ProductRepositoryModule.html":{}}}],["product.seller",{"_index":668,"title":{},"body":{"entities/SellerEntity.html":{}}}],["product.serializer",{"_index":521,"title":{},"body":{"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["product.serializer.ts",{"_index":366,"title":{},"body":{"classes/CreateProductSerializer.html":{},"classes/UpdateProductSerializer.html":{},"coverage.html":{}}}],["product.serializer.ts:14",{"_index":375,"title":{},"body":{"classes/CreateProductSerializer.html":{}}}],["product.serializer.ts:20",{"_index":383,"title":{},"body":{"classes/CreateProductSerializer.html":{}}}],["product.serializer.ts:26",{"_index":378,"title":{},"body":{"classes/CreateProductSerializer.html":{}}}],["product.serializer.ts:32",{"_index":370,"title":{},"body":{"classes/CreateProductSerializer.html":{}}}],["product.serializer.ts:38",{"_index":384,"title":{},"body":{"classes/CreateProductSerializer.html":{}}}],["product.serializer.ts:44",{"_index":371,"title":{},"body":{"classes/CreateProductSerializer.html":{}}}],["product.serializer.ts:5",{"_index":842,"title":{},"body":{"classes/UpdateProductSerializer.html":{}}}],["product.serializer.ts:50",{"_index":369,"title":{},"body":{"classes/CreateProductSerializer.html":{}}}],["product.serializer.ts:56",{"_index":381,"title":{},"body":{"classes/CreateProductSerializer.html":{}}}],["product.serializer.ts:8",{"_index":372,"title":{},"body":{"classes/CreateProductSerializer.html":{}}}],["product_not_found",{"_index":547,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["productentity",{"_index":97,"title":{"entities/ProductEntity.html":{}},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"entities/SellerEntity.html":{},"coverage.html":{}}}],["production",{"_index":958,"title":{},"body":{"index.html":{}}}],["productrepository",{"_index":496,"title":{"injectables/ProductRepository.html":{}},"body":{"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["productrepositorymodule",{"_index":551,"title":{"modules/ProductRepositoryModule.html":{}},"body":{"modules/ProductRepositoryModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":84,"title":{},"body":{"entities/BrandEntity.html":{},"controllers/ProductsController.html":{},"entities/SellerEntity.html":{}}}],["products.controller",{"_index":625,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.service",{"_index":576,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/dto/create",{"_index":517,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["products/dto/update",{"_index":519,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["products/products.module",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["products/serializers/create",{"_index":520,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["products/serializers/update",{"_index":523,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["productscontroller",{"_index":559,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":8,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":575,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":368,"title":{},"body":{"classes/CreateProductSerializer.html":{},"classes/GetProductResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{},"miscellaneous/variables.html":{}}}],["produtos",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":983,"title":{},"body":{"index.html":{}}}],["promise",{"_index":136,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/migrations1679162777045.html":{}}}],["promise.resolve",{"_index":801,"title":{},"body":{"classes/TestHelper.html":{}}}],["properties",{"_index":55,"title":{"properties.html":{}},"body":{"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"classes/migrations1679162777045.html":{},"properties.html":{}}}],["protector",{"_index":924,"title":{},"body":{"index.html":{}}}],["provided",{"_index":1052,"title":{},"body":{"license.html":{}}}],["providers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandRepositoryModule.html":{},"modules/BrandsModule.html":{},"modules/ProductRepositoryModule.html":{},"modules/ProductsModule.html":{},"modules/SellerRepositoryModule.html":{},"modules/SellersModule.html":{}}}],["public",{"_index":769,"title":{},"body":{"classes/TestHelper.html":{},"classes/migrations1679162777045.html":{}}}],["publish",{"_index":1034,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1061,"title":{},"body":{"license.html":{}}}],["put",{"_index":238,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["put(':id",{"_index":280,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["qb",{"_index":528,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["qb.andwhere",{"_index":535,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["qb.andwhere('brand.name",{"_index":537,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["qb.andwhere('product.price",{"_index":533,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["qb.andwhere('seller.name",{"_index":538,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["qb.getmany",{"_index":539,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["quando",{"_index":334,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["que",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query",{"_index":505,"title":{},"body":{"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["queryrunner",{"_index":803,"title":{},"body":{"classes/TestHelper.html":{},"classes/migrations1679162777045.html":{}}}],["queryrunner.connect",{"_index":807,"title":{},"body":{"classes/TestHelper.html":{}}}],["queryrunner.query('set",{"_index":818,"title":{},"body":{"classes/TestHelper.html":{}}}],["queryrunner.query('show",{"_index":809,"title":{},"body":{"classes/TestHelper.html":{}}}],["queryrunner.query(`alter",{"_index":1098,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["queryrunner.query(`create",{"_index":1087,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["queryrunner.query(`drop",{"_index":1108,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["queryrunner.query(`truncate",{"_index":820,"title":{},"body":{"classes/TestHelper.html":{}}}],["queryrunner.release",{"_index":826,"title":{},"body":{"classes/TestHelper.html":{}}}],["readonly",{"_index":171,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["reference",{"_index":919,"title":{},"body":{"index.html":{}}}],["references",{"_index":1103,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["reflect",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":121,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["remove(@param('id",{"_index":286,"title":{},"body":{"controllers/BrandsController.html":{},"controllers/ProductsController.html":{},"controllers/SellersController.html":{}}}],["remove(id",{"_index":145,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["repository",{"_index":127,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"classes/TestHelper.html":{}}}],["repository.create(data",{"_index":832,"title":{},"body":{"classes/TestHelper.html":{}}}],["repository.save(entity",{"_index":831,"title":{},"body":{"classes/TestHelper.html":{}}}],["repository/brand.repository",{"_index":303,"title":{},"body":{"injectables/BrandsService.html":{}}}],["repository/brand.repository.module",{"_index":294,"title":{},"body":{"modules/BrandsModule.html":{}}}],["repository/product.repository",{"_index":636,"title":{},"body":{"injectables/ProductsService.html":{}}}],["repository/product.repository.module",{"_index":626,"title":{},"body":{"modules/ProductsModule.html":{}}}],["repository/seller.repository",{"_index":758,"title":{},"body":{"injectables/SellersService.html":{}}}],["repository/seller.repository.module",{"_index":748,"title":{},"body":{"modules/SellersModule.html":{}}}],["request",{"_index":438,"title":{},"body":{"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["required",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandRepositoryModule.html":{},"modules/BrandsModule.html":{},"modules/ProductRepositoryModule.html":{},"modules/ProductsModule.html":{},"modules/SellerRepositoryModule.html":{},"modules/SellersModule.html":{},"overview.html":{}}}],["response400dto",{"_index":434,"title":{"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{}},"body":{"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["response404dto",{"_index":431,"title":{"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{}},"body":{"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["response409dto",{"_index":439,"title":{"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}},"body":{"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["restriction",{"_index":1027,"title":{},"body":{"license.html":{}}}],["results",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"classes/migrations1679162777045.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["return",{"_index":76,"title":{},"body":{"classes/BasicEntity.html":{},"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{}}}],["returns",{"_index":71,"title":{},"body":{"classes/BasicEntity.html":{},"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/migrations1679162777045.html":{}}}],["rights",{"_index":1030,"title":{},"body":{"license.html":{}}}],["row[key",{"_index":815,"title":{},"body":{"classes/TestHelper.html":{}}}],["run",{"_index":953,"title":{},"body":{"index.html":{}}}],["running",{"_index":992,"title":{},"body":{"index.html":{}}}],["runs",{"_index":986,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["saved",{"_index":830,"title":{},"body":{"classes/TestHelper.html":{}}}],["savedataasentity",{"_index":775,"title":{},"body":{"classes/TestHelper.html":{}}}],["savedataasentity(data",{"_index":788,"title":{},"body":{"classes/TestHelper.html":{}}}],["saveentity",{"_index":776,"title":{},"body":{"classes/TestHelper.html":{}}}],["saveentity(entity",{"_index":792,"title":{},"body":{"classes/TestHelper.html":{}}}],["scale",{"_index":478,"title":{},"body":{"entities/ProductEntity.html":{}}}],["secret=change",{"_index":943,"title":{},"body":{"index.html":{}}}],["see",{"_index":996,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1038,"title":{},"body":{"license.html":{}}}],["seller",{"_index":403,"title":{},"body":{"classes/FindOptions.html":{},"classes/GetProductResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"classes/migrations1679162777045.html":{}}}],["seller.dto",{"_index":681,"title":{},"body":{"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["seller.dto.ts",{"_index":387,"title":{},"body":{"classes/CreateSellerDto.html":{},"classes/UpdateSellerDto.html":{},"coverage.html":{}}}],["seller.dto.ts:11",{"_index":388,"title":{},"body":{"classes/CreateSellerDto.html":{},"classes/UpdateSellerDto.html":{}}}],["seller.entity",{"_index":489,"title":{},"body":{"entities/ProductEntity.html":{}}}],["seller.products",{"_index":480,"title":{},"body":{"entities/ProductEntity.html":{}}}],["seller.repository",{"_index":695,"title":{},"body":{"modules/SellerRepositoryModule.html":{}}}],["seller.serializer",{"_index":682,"title":{},"body":{"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["seller.serializer.ts",{"_index":391,"title":{},"body":{"classes/CreateSellerSerializer.html":{},"classes/UpdateSellerSerializer.html":{},"coverage.html":{}}}],["seller.serializer.ts:14",{"_index":396,"title":{},"body":{"classes/CreateSellerSerializer.html":{}}}],["seller.serializer.ts:20",{"_index":392,"title":{},"body":{"classes/CreateSellerSerializer.html":{}}}],["seller.serializer.ts:26",{"_index":397,"title":{},"body":{"classes/CreateSellerSerializer.html":{}}}],["seller.serializer.ts:32",{"_index":393,"title":{},"body":{"classes/CreateSellerSerializer.html":{}}}],["seller.serializer.ts:5",{"_index":845,"title":{},"body":{"classes/UpdateSellerSerializer.html":{}}}],["seller.serializer.ts:8",{"_index":394,"title":{},"body":{"classes/CreateSellerSerializer.html":{}}}],["seller\\`(\\`id",{"_index":1106,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["seller_not_found",{"_index":689,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["sellerentity",{"_index":453,"title":{"entities/SellerEntity.html":{}},"body":{"classes/GetProductResponse.html":{},"entities/ProductEntity.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"coverage.html":{}}}],["sellerid",{"_index":350,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/GetProductResponse.html":{},"entities/ProductEntity.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{},"classes/migrations1679162777045.html":{}}}],["sellerrepository",{"_index":670,"title":{"injectables/SellerRepository.html":{}},"body":{"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"injectables/SellersService.html":{},"coverage.html":{},"overview.html":{}}}],["sellerrepositorymodule",{"_index":690,"title":{"modules/SellerRepositoryModule.html":{}},"body":{"modules/SellerRepositoryModule.html":{},"modules/SellersModule.html":{},"modules.html":{},"overview.html":{}}}],["sellers",{"_index":699,"title":{},"body":{"controllers/SellersController.html":{}}}],["sellers.controller",{"_index":749,"title":{},"body":{"modules/SellersModule.html":{}}}],["sellers.service",{"_index":712,"title":{},"body":{"controllers/SellersController.html":{},"modules/SellersModule.html":{}}}],["sellers/sellers.module",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductRepositoryModule.html":{}}}],["sellers/sellers.service",{"_index":524,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["sellerscontroller",{"_index":697,"title":{"controllers/SellersController.html":{}},"body":{"controllers/SellersController.html":{},"modules/SellersModule.html":{},"coverage.html":{}}}],["sellersmodule",{"_index":9,"title":{"modules/SellersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductRepositoryModule.html":{},"modules/SellersModule.html":{},"modules.html":{},"overview.html":{}}}],["sellersservice",{"_index":499,"title":{"injectables/SellersService.html":{}},"body":{"injectables/ProductRepository.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"coverage.html":{},"overview.html":{}}}],["ser",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serializers/create",{"_index":164,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["serializers/update",{"_index":167,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["shall",{"_index":1048,"title":{},"body":{"license.html":{}}}],["singleline",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["slug",{"_index":367,"title":{},"body":{"classes/CreateProductSerializer.html":{},"classes/GetProductResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{},"classes/migrations1679162777045.html":{},"miscellaneous/variables.html":{}}}],["slugify",{"_index":484,"title":{},"body":{"entities/ProductEntity.html":{},"dependencies.html":{}}}],["slugify(this.name",{"_index":493,"title":{},"body":{"entities/ProductEntity.html":{}}}],["soft",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":1022,"title":{},"body":{"license.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"modules/BrandRepositoryModule.html":{},"controllers/BrandsController.html":{},"modules/BrandsModule.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"modules/ProductRepositoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"modules/SellerRepositoryModule.html":{},"controllers/SellersController.html":{},"modules/SellersModule.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"classes/migrations1679162777045.html":{}}}],["src/.../brands.constant.ts",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../db.config.ts",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":914,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../products.constant.ts",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../seller.constant.ts",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":16,"title":{},"body":{"modules/AppModule.html":{}}}],["src/brands/brands.controller.ts",{"_index":219,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{}}}],["src/brands/brands.controller.ts:47",{"_index":226,"title":{},"body":{"controllers/BrandsController.html":{}}}],["src/brands/brands.controller.ts:55",{"_index":228,"title":{},"body":{"controllers/BrandsController.html":{}}}],["src/brands/brands.controller.ts:64",{"_index":224,"title":{},"body":{"controllers/BrandsController.html":{}}}],["src/brands/brands.controller.ts:77",{"_index":233,"title":{},"body":{"controllers/BrandsController.html":{}}}],["src/brands/brands.controller.ts:88",{"_index":230,"title":{},"body":{"controllers/BrandsController.html":{}}}],["src/brands/brands.module.ts",{"_index":292,"title":{},"body":{"modules/BrandsModule.html":{}}}],["src/brands/brands.service.ts",{"_index":295,"title":{},"body":{"injectables/BrandsService.html":{},"coverage.html":{}}}],["src/brands/brands.service.ts:11",{"_index":297,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/brands/brands.service.ts:14",{"_index":299,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/brands/brands.service.ts:18",{"_index":300,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/brands/brands.service.ts:22",{"_index":298,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/brands/brands.service.ts:26",{"_index":302,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/brands/brands.service.ts:33",{"_index":301,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/brands/dto/create",{"_index":309,"title":{},"body":{"classes/CreateBrandDto.html":{},"coverage.html":{}}}],["src/brands/dto/update",{"_index":833,"title":{},"body":{"classes/UpdateBrandDto.html":{},"coverage.html":{}}}],["src/brands/repository/brand.repository.module.ts",{"_index":213,"title":{},"body":{"modules/BrandRepositoryModule.html":{}}}],["src/brands/repository/brand.repository.ts",{"_index":114,"title":{},"body":{"injectables/BrandRepository.html":{},"coverage.html":{}}}],["src/brands/repository/brand.repository.ts:102",{"_index":144,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["src/brands/repository/brand.repository.ts:111",{"_index":138,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["src/brands/repository/brand.repository.ts:119",{"_index":150,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["src/brands/repository/brand.repository.ts:21",{"_index":129,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["src/brands/repository/brand.repository.ts:29",{"_index":140,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["src/brands/repository/brand.repository.ts:33",{"_index":142,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["src/brands/repository/brand.repository.ts:43",{"_index":134,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["src/brands/repository/brand.repository.ts:66",{"_index":154,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["src/brands/repository/brand.repository.ts:94",{"_index":146,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["src/brands/serializers/create",{"_index":320,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"coverage.html":{}}}],["src/brands/serializers/update",{"_index":834,"title":{},"body":{"classes/UpdateBrandSerializer.html":{},"coverage.html":{}}}],["src/brands/swagger/brand.response.ts",{"_index":425,"title":{},"body":{"classes/GetBrandResponse.html":{},"classes/Response400Dto.html":{},"classes/Response404Dto.html":{},"classes/Response409Dto.html":{},"coverage.html":{}}}],["src/brands/swagger/brand.response.ts:14",{"_index":429,"title":{},"body":{"classes/GetBrandResponse.html":{}}}],["src/brands/swagger/brand.response.ts:20",{"_index":426,"title":{},"body":{"classes/GetBrandResponse.html":{}}}],["src/brands/swagger/brand.response.ts:26",{"_index":430,"title":{},"body":{"classes/GetBrandResponse.html":{}}}],["src/brands/swagger/brand.response.ts:32",{"_index":427,"title":{},"body":{"classes/GetBrandResponse.html":{}}}],["src/brands/swagger/brand.response.ts:39",{"_index":654,"title":{},"body":{"classes/Response404Dto.html":{}}}],["src/brands/swagger/brand.response.ts:44",{"_index":653,"title":{},"body":{"classes/Response404Dto.html":{}}}],["src/brands/swagger/brand.response.ts:51",{"_index":646,"title":{},"body":{"classes/Response400Dto.html":{}}}],["src/brands/swagger/brand.response.ts:56",{"_index":645,"title":{},"body":{"classes/Response400Dto.html":{}}}],["src/brands/swagger/brand.response.ts:61",{"_index":644,"title":{},"body":{"classes/Response400Dto.html":{}}}],["src/brands/swagger/brand.response.ts:68",{"_index":661,"title":{},"body":{"classes/Response409Dto.html":{}}}],["src/brands/swagger/brand.response.ts:73",{"_index":660,"title":{},"body":{"classes/Response409Dto.html":{}}}],["src/brands/swagger/brand.response.ts:78",{"_index":659,"title":{},"body":{"classes/Response409Dto.html":{}}}],["src/brands/swagger/brand.response.ts:8",{"_index":428,"title":{},"body":{"classes/GetBrandResponse.html":{}}}],["src/brands/swagger/brands.constant.ts",{"_index":859,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/database/entities/basic.entity.ts",{"_index":51,"title":{},"body":{"classes/BasicEntity.html":{},"coverage.html":{}}}],["src/common/database/entities/basic.entity.ts:10",{"_index":65,"title":{},"body":{"classes/BasicEntity.html":{}}}],["src/common/database/entities/basic.entity.ts:13",{"_index":69,"title":{},"body":{"classes/BasicEntity.html":{}}}],["src/common/database/entities/basic.entity.ts:16",{"_index":67,"title":{},"body":{"classes/BasicEntity.html":{}}}],["src/common/database/entities/basic.entity.ts:19",{"_index":70,"title":{},"body":{"classes/BasicEntity.html":{}}}],["src/common/database/entities/brand.entity.ts",{"_index":81,"title":{},"body":{"entities/BrandEntity.html":{},"coverage.html":{}}}],["src/common/database/entities/brand.entity.ts:21",{"_index":88,"title":{},"body":{"entities/BrandEntity.html":{}}}],["src/common/database/entities/brand.entity.ts:28",{"_index":96,"title":{},"body":{"entities/BrandEntity.html":{}}}],["src/common/database/entities/brand.entity.ts:31",{"_index":101,"title":{},"body":{"entities/BrandEntity.html":{}}}],["src/common/database/entities/product.entity.ts",{"_index":467,"title":{},"body":{"entities/ProductEntity.html":{},"coverage.html":{}}}],["src/common/database/entities/product.entity.ts:25",{"_index":473,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/common/database/entities/product.entity.ts:32",{"_index":474,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/common/database/entities/product.entity.ts:39",{"_index":483,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/common/database/entities/product.entity.ts:47",{"_index":479,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/common/database/entities/product.entity.ts:52",{"_index":472,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/common/database/entities/product.entity.ts:58",{"_index":471,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/common/database/entities/product.entity.ts:63",{"_index":482,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/common/database/entities/product.entity.ts:69",{"_index":481,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/common/database/entities/seller.entity.ts",{"_index":665,"title":{},"body":{"entities/SellerEntity.html":{},"coverage.html":{}}}],["src/common/database/entities/seller.entity.ts:14",{"_index":666,"title":{},"body":{"entities/SellerEntity.html":{}}}],["src/common/database/entities/seller.entity.ts:21",{"_index":667,"title":{},"body":{"entities/SellerEntity.html":{}}}],["src/common/database/entities/seller.entity.ts:24",{"_index":669,"title":{},"body":{"entities/SellerEntity.html":{}}}],["src/config/db.config.ts",{"_index":865,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/helpers/test.helper.ts",{"_index":765,"title":{},"body":{"classes/TestHelper.html":{},"coverage.html":{}}}],["src/helpers/test.helper.ts:16",{"_index":783,"title":{},"body":{"classes/TestHelper.html":{}}}],["src/helpers/test.helper.ts:24",{"_index":795,"title":{},"body":{"classes/TestHelper.html":{}}}],["src/helpers/test.helper.ts:28",{"_index":787,"title":{},"body":{"classes/TestHelper.html":{}}}],["src/helpers/test.helper.ts:36",{"_index":782,"title":{},"body":{"classes/TestHelper.html":{}}}],["src/helpers/test.helper.ts:40",{"_index":781,"title":{},"body":{"classes/TestHelper.html":{}}}],["src/helpers/test.helper.ts:6",{"_index":780,"title":{},"body":{"classes/TestHelper.html":{}}}],["src/helpers/test.helper.ts:7",{"_index":779,"title":{},"body":{"classes/TestHelper.html":{}}}],["src/helpers/test.helper.ts:75",{"_index":785,"title":{},"body":{"classes/TestHelper.html":{}}}],["src/helpers/test.helper.ts:79",{"_index":793,"title":{},"body":{"classes/TestHelper.html":{}}}],["src/helpers/test.helper.ts:86",{"_index":790,"title":{},"body":{"classes/TestHelper.html":{}}}],["src/main.ts",{"_index":868,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/products/dto/create",{"_index":346,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/dto/find",{"_index":399,"title":{},"body":{"classes/FindOptions.html":{},"coverage.html":{}}}],["src/products/dto/update",{"_index":836,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/products/products.controller.ts",{"_index":560,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:101",{"_index":571,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:52",{"_index":565,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:60",{"_index":567,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:68",{"_index":569,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:77",{"_index":563,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:90",{"_index":574,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":624,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":627,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:12",{"_index":629,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:15",{"_index":631,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:19",{"_index":632,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:23",{"_index":633,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:27",{"_index":630,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:31",{"_index":635,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:38",{"_index":634,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/repository/product.repository.module.ts",{"_index":556,"title":{},"body":{"modules/ProductRepositoryModule.html":{}}}],["src/products/repository/product.repository.ts",{"_index":497,"title":{},"body":{"injectables/ProductRepository.html":{},"coverage.html":{}}}],["src/products/repository/product.repository.ts:115",{"_index":513,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/products/repository/product.repository.ts:143",{"_index":510,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/products/repository/product.repository.ts:151",{"_index":509,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/products/repository/product.repository.ts:160",{"_index":502,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/products/repository/product.repository.ts:168",{"_index":511,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/products/repository/product.repository.ts:24",{"_index":500,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/products/repository/product.repository.ts:34",{"_index":504,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/products/repository/product.repository.ts:65",{"_index":507,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/products/repository/product.repository.ts:76",{"_index":508,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/products/repository/product.repository.ts:87",{"_index":501,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/products/serializers/create",{"_index":365,"title":{},"body":{"classes/CreateProductSerializer.html":{},"coverage.html":{}}}],["src/products/serializers/update",{"_index":841,"title":{},"body":{"classes/UpdateProductSerializer.html":{},"coverage.html":{}}}],["src/products/swagger/product.response.ts",{"_index":443,"title":{},"body":{"classes/GetProductResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{},"coverage.html":{}}}],["src/products/swagger/product.response.ts:100",{"_index":647,"title":{},"body":{"classes/Response400Dto-1.html":{}}}],["src/products/swagger/product.response.ts:107",{"_index":664,"title":{},"body":{"classes/Response409Dto-1.html":{}}}],["src/products/swagger/product.response.ts:11",{"_index":450,"title":{},"body":{"classes/GetProductResponse.html":{}}}],["src/products/swagger/product.response.ts:112",{"_index":663,"title":{},"body":{"classes/Response409Dto-1.html":{}}}],["src/products/swagger/product.response.ts:117",{"_index":662,"title":{},"body":{"classes/Response409Dto-1.html":{}}}],["src/products/swagger/product.response.ts:17",{"_index":451,"title":{},"body":{"classes/GetProductResponse.html":{}}}],["src/products/swagger/product.response.ts:23",{"_index":457,"title":{},"body":{"classes/GetProductResponse.html":{}}}],["src/products/swagger/product.response.ts:29",{"_index":452,"title":{},"body":{"classes/GetProductResponse.html":{}}}],["src/products/swagger/product.response.ts:35",{"_index":447,"title":{},"body":{"classes/GetProductResponse.html":{}}}],["src/products/swagger/product.response.ts:41",{"_index":446,"title":{},"body":{"classes/GetProductResponse.html":{}}}],["src/products/swagger/product.response.ts:47",{"_index":456,"title":{},"body":{"classes/GetProductResponse.html":{}}}],["src/products/swagger/product.response.ts:53",{"_index":455,"title":{},"body":{"classes/GetProductResponse.html":{}}}],["src/products/swagger/product.response.ts:59",{"_index":448,"title":{},"body":{"classes/GetProductResponse.html":{}}}],["src/products/swagger/product.response.ts:65",{"_index":458,"title":{},"body":{"classes/GetProductResponse.html":{}}}],["src/products/swagger/product.response.ts:71",{"_index":449,"title":{},"body":{"classes/GetProductResponse.html":{}}}],["src/products/swagger/product.response.ts:78",{"_index":656,"title":{},"body":{"classes/Response404Dto-1.html":{}}}],["src/products/swagger/product.response.ts:83",{"_index":655,"title":{},"body":{"classes/Response404Dto-1.html":{}}}],["src/products/swagger/product.response.ts:90",{"_index":649,"title":{},"body":{"classes/Response400Dto-1.html":{}}}],["src/products/swagger/product.response.ts:95",{"_index":648,"title":{},"body":{"classes/Response400Dto-1.html":{}}}],["src/products/swagger/products.constant.ts",{"_index":872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sellers/dto/create",{"_index":386,"title":{},"body":{"classes/CreateSellerDto.html":{},"coverage.html":{}}}],["src/sellers/dto/update",{"_index":843,"title":{},"body":{"classes/UpdateSellerDto.html":{},"coverage.html":{}}}],["src/sellers/repository/seller.repository.module.ts",{"_index":694,"title":{},"body":{"modules/SellerRepositoryModule.html":{}}}],["src/sellers/repository/seller.repository.ts",{"_index":671,"title":{},"body":{"injectables/SellerRepository.html":{},"coverage.html":{}}}],["src/sellers/repository/seller.repository.ts:105",{"_index":678,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["src/sellers/repository/seller.repository.ts:20",{"_index":672,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["src/sellers/repository/seller.repository.ts:28",{"_index":675,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["src/sellers/repository/seller.repository.ts:32",{"_index":676,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["src/sellers/repository/seller.repository.ts:42",{"_index":673,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["src/sellers/repository/seller.repository.ts:61",{"_index":680,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["src/sellers/repository/seller.repository.ts:89",{"_index":677,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["src/sellers/repository/seller.repository.ts:97",{"_index":674,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["src/sellers/sellers.controller.ts",{"_index":698,"title":{},"body":{"controllers/SellersController.html":{},"coverage.html":{}}}],["src/sellers/sellers.controller.ts:45",{"_index":704,"title":{},"body":{"controllers/SellersController.html":{}}}],["src/sellers/sellers.controller.ts:52",{"_index":706,"title":{},"body":{"controllers/SellersController.html":{}}}],["src/sellers/sellers.controller.ts:60",{"_index":702,"title":{},"body":{"controllers/SellersController.html":{}}}],["src/sellers/sellers.controller.ts:72",{"_index":711,"title":{},"body":{"controllers/SellersController.html":{}}}],["src/sellers/sellers.controller.ts:83",{"_index":708,"title":{},"body":{"controllers/SellersController.html":{}}}],["src/sellers/sellers.module.ts",{"_index":747,"title":{},"body":{"modules/SellersModule.html":{}}}],["src/sellers/sellers.service.ts",{"_index":750,"title":{},"body":{"injectables/SellersService.html":{},"coverage.html":{}}}],["src/sellers/sellers.service.ts:11",{"_index":752,"title":{},"body":{"injectables/SellersService.html":{}}}],["src/sellers/sellers.service.ts:14",{"_index":754,"title":{},"body":{"injectables/SellersService.html":{}}}],["src/sellers/sellers.service.ts:18",{"_index":755,"title":{},"body":{"injectables/SellersService.html":{}}}],["src/sellers/sellers.service.ts:22",{"_index":753,"title":{},"body":{"injectables/SellersService.html":{}}}],["src/sellers/sellers.service.ts:26",{"_index":757,"title":{},"body":{"injectables/SellersService.html":{}}}],["src/sellers/sellers.service.ts:33",{"_index":756,"title":{},"body":{"injectables/SellersService.html":{}}}],["src/sellers/serializers/create",{"_index":390,"title":{},"body":{"classes/CreateSellerSerializer.html":{},"coverage.html":{}}}],["src/sellers/serializers/update",{"_index":844,"title":{},"body":{"classes/UpdateSellerSerializer.html":{},"coverage.html":{}}}],["src/sellers/swagger/seller.constant.ts",{"_index":874,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sellers/swagger/seller.response.ts",{"_index":461,"title":{},"body":{"classes/GetSellerResponse.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto-2.html":{},"coverage.html":{}}}],["src/sellers/swagger/seller.response.ts:14",{"_index":465,"title":{},"body":{"classes/GetSellerResponse.html":{}}}],["src/sellers/swagger/seller.response.ts:20",{"_index":462,"title":{},"body":{"classes/GetSellerResponse.html":{}}}],["src/sellers/swagger/seller.response.ts:26",{"_index":466,"title":{},"body":{"classes/GetSellerResponse.html":{}}}],["src/sellers/swagger/seller.response.ts:32",{"_index":463,"title":{},"body":{"classes/GetSellerResponse.html":{}}}],["src/sellers/swagger/seller.response.ts:39",{"_index":658,"title":{},"body":{"classes/Response404Dto-2.html":{}}}],["src/sellers/swagger/seller.response.ts:44",{"_index":657,"title":{},"body":{"classes/Response404Dto-2.html":{}}}],["src/sellers/swagger/seller.response.ts:51",{"_index":652,"title":{},"body":{"classes/Response400Dto-2.html":{}}}],["src/sellers/swagger/seller.response.ts:56",{"_index":651,"title":{},"body":{"classes/Response400Dto-2.html":{}}}],["src/sellers/swagger/seller.response.ts:61",{"_index":650,"title":{},"body":{"classes/Response400Dto-2.html":{}}}],["src/sellers/swagger/seller.response.ts:8",{"_index":464,"title":{},"body":{"classes/GetSellerResponse.html":{}}}],["start",{"_index":954,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":957,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":959,"title":{},"body":{"index.html":{}}}],["started",{"_index":916,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":927,"title":{},"body":{"index.html":{}}}],["statements",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":767,"title":{},"body":{"classes/TestHelper.html":{}}}],["status",{"_index":194,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":433,"title":{},"body":{"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{}}}],["strategies",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["strict",{"_index":495,"title":{},"body":{"entities/ProductEntity.html":{}}}],["string",{"_index":89,"title":{},"body":{"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"controllers/SellersController.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSellerDto.html":{},"classes/migrations1679162777045.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":1043,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1036,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1050,"title":{},"body":{"license.html":{}}}],["success",{"_index":197,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerSerializer.html":{}}}],["sucess",{"_index":199,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["support",{"_index":1109,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1110,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":905,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swagger/brands.constant",{"_index":260,"title":{},"body":{"controllers/BrandsController.html":{}}}],["swagger/products.constant",{"_index":593,"title":{},"body":{"controllers/ProductsController.html":{}}}],["swagger/seller.constant",{"_index":724,"title":{},"body":{"controllers/SellersController.html":{}}}],["synchronize",{"_index":109,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{}}}],["table",{"_index":876,"title":{},"body":{"coverage.html":{},"classes/migrations1679162777045.html":{}}}],["tablename",{"_index":814,"title":{},"body":{"classes/TestHelper.html":{}}}],["tablenames",{"_index":810,"title":{},"body":{"classes/TestHelper.html":{}}}],["tables",{"_index":808,"title":{},"body":{"classes/TestHelper.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["tem",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tenis",{"_index":382,"title":{},"body":{"classes/CreateProductSerializer.html":{},"classes/GetProductResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{}}}],["test",{"_index":823,"title":{},"body":{"classes/TestHelper.html":{},"index.html":{}}}],["test:covdocumentation",{"_index":995,"title":{},"body":{"index.html":{}}}],["test:covrun",{"_index":964,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":963,"title":{},"body":{"index.html":{}}}],["test:prepareyou",{"_index":989,"title":{},"body":{"index.html":{}}}],["test:watchor",{"_index":994,"title":{},"body":{"index.html":{}}}],["testhelper",{"_index":764,"title":{"classes/TestHelper.html":{}},"body":{"classes/TestHelper.html":{},"coverage.html":{}}}],["testhelper.instance",{"_index":797,"title":{},"body":{"classes/TestHelper.html":{}}}],["testor",{"_index":993,"title":{},"body":{"index.html":{}}}],["tests",{"_index":961,"title":{},"body":{"index.html":{}}}],["this.brandrepository.create(data",{"_index":306,"title":{},"body":{"injectables/BrandsService.html":{}}}],["this.brandrepository.findall",{"_index":304,"title":{},"body":{"injectables/BrandsService.html":{}}}],["this.brandrepository.findone(id",{"_index":305,"title":{},"body":{"injectables/BrandsService.html":{}}}],["this.brandrepository.remove(id",{"_index":308,"title":{},"body":{"injectables/BrandsService.html":{}}}],["this.brandrepository.update(id",{"_index":307,"title":{},"body":{"injectables/BrandsService.html":{}}}],["this.brandsservice.create(data",{"_index":275,"title":{},"body":{"controllers/BrandsController.html":{}}}],["this.brandsservice.findall",{"_index":265,"title":{},"body":{"controllers/BrandsController.html":{}}}],["this.brandsservice.findone(+id",{"_index":271,"title":{},"body":{"controllers/BrandsController.html":{}}}],["this.brandsservice.findone(data.brandid",{"_index":541,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.brandsservice.remove(+id",{"_index":287,"title":{},"body":{"controllers/BrandsController.html":{}}}],["this.brandsservice.update(+id",{"_index":282,"title":{},"body":{"controllers/BrandsController.html":{}}}],["this.datasource",{"_index":796,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.datasource.createqueryrunner",{"_index":804,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.datasource.destroy",{"_index":802,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.datasource.getrepository(klass",{"_index":828,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.datasource.getrepository(typeof",{"_index":829,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.datasource.initialize",{"_index":800,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.datasource.isinitialized",{"_index":798,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.deletedat",{"_index":77,"title":{},"body":{"classes/BasicEntity.html":{}}}],["this.exist(id",{"_index":192,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/SellerRepository.html":{}}}],["this.isinitialized",{"_index":799,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.logger.error('failed",{"_index":190,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["this.nameexists(data.name",{"_index":181,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{}}}],["this.productrepository.create(data",{"_index":640,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.findall(query",{"_index":637,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.findbyslug(slug",{"_index":638,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.findone(id",{"_index":639,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.remove(id",{"_index":642,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.update(id",{"_index":641,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.create(data",{"_index":612,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall(query",{"_index":598,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findbyslug(slug",{"_index":604,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findone(+id",{"_index":608,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.remove(+id",{"_index":620,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.update(+id",{"_index":617,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.repository",{"_index":200,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{}}}],["this.repository.create(data",{"_index":187,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["this.repository.exist",{"_index":205,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["this.repository.find",{"_index":173,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/SellerRepository.html":{}}}],["this.repository.findone",{"_index":546,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.repository.findoneorfail",{"_index":175,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["this.repository.save(newbrand",{"_index":188,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["this.repository.save(newproduct",{"_index":544,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.repository.save(newseller",{"_index":687,"title":{},"body":{"injectables/SellerRepository.html":{}}}],["this.repository.save(object.assign(product",{"_index":549,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.repository.softdelete",{"_index":198,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["this.repository.update",{"_index":196,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/SellerRepository.html":{}}}],["this.sellerrepository.create(data",{"_index":761,"title":{},"body":{"injectables/SellersService.html":{}}}],["this.sellerrepository.findall",{"_index":759,"title":{},"body":{"injectables/SellersService.html":{}}}],["this.sellerrepository.findone(id",{"_index":760,"title":{},"body":{"injectables/SellersService.html":{}}}],["this.sellerrepository.remove(id",{"_index":763,"title":{},"body":{"injectables/SellersService.html":{}}}],["this.sellerrepository.update(id",{"_index":762,"title":{},"body":{"injectables/SellersService.html":{}}}],["this.sellersservice.create(data",{"_index":734,"title":{},"body":{"controllers/SellersController.html":{}}}],["this.sellersservice.findall",{"_index":728,"title":{},"body":{"controllers/SellersController.html":{}}}],["this.sellersservice.findone(+id",{"_index":731,"title":{},"body":{"controllers/SellersController.html":{}}}],["this.sellersservice.findone(data.sellerid",{"_index":542,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.sellersservice.remove(+id",{"_index":742,"title":{},"body":{"controllers/SellersController.html":{}}}],["this.sellersservice.update(+id",{"_index":739,"title":{},"body":{"controllers/SellersController.html":{}}}],["this.slug",{"_index":492,"title":{},"body":{"entities/ProductEntity.html":{}}}],["this.throwvaliderror(error",{"_index":191,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["throw",{"_index":177,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"classes/TestHelper.html":{}}}],["throwvaliderror",{"_index":123,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["throwvaliderror(error",{"_index":147,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["tort",{"_index":1073,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"injectables/BrandRepository.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":174,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"classes/TestHelper.html":{}}}],["type",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/CreateBrandDto.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductDto.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerDto.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/TestHelper.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateBrandSerializer.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateProductSerializer.html":{},"classes/UpdateSellerDto.html":{},"classes/UpdateSellerSerializer.html":{},"coverage.html":{},"classes/migrations1679162777045.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":827,"title":{},"body":{"classes/TestHelper.html":{}}}],["typeorm",{"_index":73,"title":{},"body":{"classes/BasicEntity.html":{},"entities/BrandEntity.html":{},"injectables/BrandRepository.html":{},"entities/ProductEntity.html":{},"injectables/ProductRepository.html":{},"entities/SellerEntity.html":{},"injectables/SellerRepository.html":{},"classes/TestHelper.html":{},"dependencies.html":{},"classes/migrations1679162777045.html":{}}}],["typeormmodule",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandRepositoryModule.html":{},"modules/ProductRepositoryModule.html":{},"modules/SellerRepositoryModule.html":{}}}],["typeormmodule.forfeature([brandentity",{"_index":216,"title":{},"body":{"modules/BrandRepositoryModule.html":{}}}],["typeormmodule.forfeature([productentity",{"_index":558,"title":{},"body":{"modules/ProductRepositoryModule.html":{}}}],["typeormmodule.forfeature([sellerentity",{"_index":696,"title":{},"body":{"modules/SellerRepositoryModule.html":{}}}],["typeormmodule.forroot",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["tênis",{"_index":373,"title":{},"body":{"classes/CreateProductSerializer.html":{},"classes/FindOptions.html":{},"classes/GetProductResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response404Dto-1.html":{},"classes/Response409Dto-1.html":{}}}],["tênis'})@isoptional()@isstring",{"_index":407,"title":{},"body":{"classes/FindOptions.html":{}}}],["ui",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uma",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined",{"_index":336,"title":{},"body":{"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/FindOptions.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{}}}],["unique",{"_index":105,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"classes/migrations1679162777045.html":{}}}],["unique(['name",{"_index":110,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{}}}],["unit",{"_index":960,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":139,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{},"classes/TestHelper.html":{}}}],["unlicensed",{"_index":1119,"title":{},"body":{"properties.html":{}}}],["up",{"_index":974,"title":{},"body":{"index.html":{},"classes/migrations1679162777045.html":{}}}],["up(queryrunner",{"_index":1085,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["update",{"_index":124,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/migrations1679162777045.html":{}}}],["update(id",{"_index":152,"title":{},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{}}}],["update_brand_400_response",{"_index":256,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_brand_404_response",{"_index":257,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_brand_409_response",{"_index":258,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_brand_ok_response",{"_index":259,"title":{},"body":{"controllers/BrandsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_product_400_response",{"_index":589,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_product_404_response",{"_index":590,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_product_409_response",{"_index":591,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_product_ok_response",{"_index":592,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_seller_400_response",{"_index":721,"title":{},"body":{"controllers/SellersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_seller_404_response",{"_index":722,"title":{},"body":{"controllers/SellersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["update_seller_ok_response",{"_index":723,"title":{},"body":{"controllers/SellersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatebranddto",{"_index":153,"title":{"classes/UpdateBrandDto.html":{}},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/UpdateBrandDto.html":{},"coverage.html":{}}}],["updatebranddto})@put(':id",{"_index":232,"title":{},"body":{"controllers/BrandsController.html":{}}}],["updatebrandserializer",{"_index":166,"title":{"classes/UpdateBrandSerializer.html":{}},"body":{"injectables/BrandRepository.html":{},"controllers/BrandsController.html":{},"injectables/BrandsService.html":{},"classes/UpdateBrandSerializer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatedat",{"_index":58,"title":{},"body":{"classes/BasicEntity.html":{},"classes/CreateBrandSerializer.html":{},"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetBrandResponse.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto.html":{},"classes/Response409Dto-1.html":{},"classes/migrations1679162777045.html":{}}}],["updatedatecolumn",{"_index":68,"title":{},"body":{"classes/BasicEntity.html":{}}}],["updateproductdto",{"_index":512,"title":{"classes/UpdateProductDto.html":{}},"body":{"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updateproductdto})@put(':id",{"_index":573,"title":{},"body":{"controllers/ProductsController.html":{}}}],["updateproductserializer",{"_index":522,"title":{"classes/UpdateProductSerializer.html":{}},"body":{"injectables/ProductRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductSerializer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatesellerdto",{"_index":679,"title":{"classes/UpdateSellerDto.html":{}},"body":{"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/UpdateSellerDto.html":{},"coverage.html":{}}}],["updatesellerdto})@put(':id",{"_index":710,"title":{},"body":{"controllers/SellersController.html":{}}}],["updatesellerserializer",{"_index":683,"title":{"classes/UpdateSellerSerializer.html":{}},"body":{"injectables/SellerRepository.html":{},"controllers/SellersController.html":{},"injectables/SellersService.html":{},"classes/UpdateSellerSerializer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["upthis",{"_index":975,"title":{},"body":{"index.html":{}}}],["use",{"_index":1031,"title":{},"body":{"license.html":{}}}],["validateif",{"_index":418,"title":{},"body":{"classes/FindOptions.html":{}}}],["validateif((o",{"_index":420,"title":{},"body":{"classes/FindOptions.html":{}}}],["validator",{"_index":318,"title":{},"body":{"classes/CreateBrandDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSellerDto.html":{},"classes/FindOptions.html":{},"classes/UpdateBrandDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSellerDto.html":{},"dependencies.html":{}}}],["value",{"_index":1081,"title":{},"body":{"classes/migrations1679162777045.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":91,"title":{},"body":{"entities/BrandEntity.html":{},"entities/ProductEntity.html":{},"entities/SellerEntity.html":{}}}],["varchar(50",{"_index":1091,"title":{},"body":{"classes/migrations1679162777045.html":{}}}],["variable",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1121,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vazio",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vendedor",{"_index":379,"title":{},"body":{"classes/CreateProductSerializer.html":{},"classes/CreateSellerSerializer.html":{},"classes/GetProductResponse.html":{},"classes/GetSellerResponse.html":{},"classes/Response400Dto-1.html":{},"classes/Response400Dto-2.html":{},"classes/Response404Dto-1.html":{},"classes/Response404Dto-2.html":{},"classes/Response409Dto-1.html":{},"miscellaneous/variables.html":{}}}],["vendedores",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1117,"title":{},"body":{"properties.html":{}}}],["void",{"_index":151,"title":{},"body":{"injectables/BrandRepository.html":{},"injectables/ProductRepository.html":{},"injectables/SellerRepository.html":{}}}],["warranties",{"_index":1057,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1053,"title":{},"body":{"license.html":{}}}],["watch",{"_index":955,"title":{},"body":{"index.html":{}}}],["watcher",{"_index":980,"title":{},"body":{"index.html":{}}}],["where('brand.name",{"_index":202,"title":{},"body":{"injectables/BrandRepository.html":{}}}],["where('product.name",{"_index":550,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["whether",{"_index":1070,"title":{},"body":{"license.html":{}}}],["without",{"_index":1026,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/BrandRepositoryModule.html":{},"modules/BrandsModule.html":{},"modules/ProductRepositoryModule.html":{},"modules/ProductsModule.html":{},"modules/SellerRepositoryModule.html":{},"modules/SellersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nBrandsModule\n\nBrandsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBrandsModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nSellersModule\n\nSellersModule\n\nAppModule -->\n\nSellersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BrandsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            SellersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { LoggerModule } from 'nestjs-pino';\n\nimport { BrandsModule } from './brands/brands.module';\nimport { ProductsModule } from './products/products.module';\nimport { SellersModule } from './sellers/sellers.module';\n\nimport dbConfig from './config/db.config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mariadb',\n      ...dbConfig,\n    }),\n    LoggerModule.forRoot({\n      pinoHttp: {\n        transport: {\n          target: 'pino-pretty',\n          options: {\n            singleLine: true,\n            colorize: true,\n            levelFirst: true,\n          },\n        },\n      },\n    }),\n    BrandsModule,\n    SellersModule,\n    ProductsModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BasicEntity.html":{"url":"classes/BasicEntity.html","title":"class - BasicEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BasicEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/entities/basic.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isDeleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/basic.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/basic.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/basic.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isDeleted\n                        \n                    \n                \n            \n            \n                \nisDeleted()\n                \n            \n\n\n            \n                \n                    Defined in src/common/database/entities/basic.entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  CreateDateColumn,\n  DeleteDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport abstract class BasicEntity extends BaseEntity {\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n\n  // Helpers\n  isDeleted(): boolean {\n    return !!this.deletedAt;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BrandEntity.html":{"url":"entities/BrandEntity.html","title":"entity - BrandEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BrandEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/entities/brand.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/brand.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: '50', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/brand.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, product => product.brand)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/brand.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  Unique,\n} from 'typeorm';\n\nimport { BasicEntity } from './basic.entity';\nimport { ProductEntity } from './product.entity';\n\n@Entity({\n  name: 'brand',\n  synchronize: false,\n})\n@Unique(['name'])\nexport class BrandEntity extends BasicEntity {\n  @PrimaryGeneratedColumn({\n    type: 'int',\n  })\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    length: '50',\n    nullable: false,\n  })\n  name: string;\n\n  @OneToMany(() => ProductEntity, (product) => product.brand)\n  products: ProductEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrandRepository.html":{"url":"injectables/BrandRepository.html","title":"injectable - BrandRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BrandRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/repository/brand.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                exist\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                nameExists\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Private\n                                throwValidError\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/brands/repository/brand.repository.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateBrandDto)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/repository/brand.repository.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateBrandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exist\n                        \n                    \n                \n            \n            \n                \n                    \n                    exist(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/repository/brand.repository.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/brands/repository/brand.repository.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/repository/brand.repository.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        nameExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    nameExists(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/repository/brand.repository.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/repository/brand.repository.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        throwValidError\n                        \n                    \n                \n            \n            \n                \n                    \n                    throwValidError(error: HttpException | Error)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/repository/brand.repository.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            HttpException | Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: UpdateBrandDto)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/repository/brand.repository.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateBrandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  HttpException,\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { Logger } from 'nestjs-pino';\nimport { Repository } from 'typeorm';\n\nimport { BrandEntity } from '@/common/database/entities/brand.entity';\nimport { CreateBrandDto } from '../dto/create-brand.dto';\nimport { CreateBrandSerializer } from '../serializers/create-brand.serializer';\nimport { UpdateBrandSerializer } from '../serializers/update-brand.serializer';\nimport { UpdateBrandDto } from './../dto/update-brand.dto';\n\n@Injectable()\nexport class BrandRepository {\n  constructor(\n    @InjectRepository(BrandEntity)\n    private repository: Repository,\n    @Inject(Logger)\n    private readonly logger: Logger,\n  ) {}\n\n  async findAll() {\n    return await this.repository.find();\n  }\n\n  async findOne(id: number) {\n    try {\n      return await this.repository.findOneOrFail({\n        where: { id },\n      });\n    } catch (error) {\n      throw new NotFoundException('Brand not found');\n    }\n  }\n\n  async create(\n    data: CreateBrandDto,\n  ): Promise {\n    try {\n      if (await this.nameExists(data.name)) {\n        throw new ConflictException('Name already exists');\n      }\n\n      const newBrand = this.repository.create(data);\n\n      await this.repository.save(newBrand);\n\n      const brand = await this.repository.findOneOrFail({\n        where: { id: newBrand.id },\n      });\n\n      return brand;\n    } catch (error) {\n      this.logger.error('Failed to create brand', error);\n      this.throwValidError(error);\n    }\n  }\n\n  async update(\n    id: number,\n    data: UpdateBrandDto,\n  ): Promise {\n    if (!(await this.exist(id))) {\n      throw new NotFoundException({\n        message: 'Brand not found',\n        status: 'BRAND_NOT_FOUND',\n      });\n    }\n\n    try {\n      await this.repository.update(\n        {\n          id,\n        },\n        data,\n      );\n\n      return {\n        success: true,\n      };\n    } catch (error) {\n      this.logger.error('Failed to update brand', error);\n      this.throwValidError(error);\n    }\n  }\n\n  async remove(id: number) {\n    await this.repository.softDelete({\n      id,\n    });\n\n    return { sucess: true };\n  }\n\n  async nameExists(name: string): Promise {\n    return (\n      (await this.repository\n        .createQueryBuilder('brand')\n        .where('brand.name = :name', { name })\n        .getCount()) === 1\n    );\n  }\n\n  async exist(id: number) {\n    return await this.repository.exist({\n      where: {\n        id,\n      },\n    });\n  }\n\n  private throwValidError(error: HttpException | Error) {\n    if (error instanceof HttpException) {\n      throw error;\n    } else {\n      throw new InternalServerErrorException({\n        status: 'INTERNAL_ERROR',\n        message: error.message,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BrandRepositoryModule.html":{"url":"modules/BrandRepositoryModule.html","title":"module - BrandRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    BrandRepositoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BrandRepositoryModule\n\n\n\ncluster_BrandRepositoryModule_exports\n\n\n\ncluster_BrandRepositoryModule_providers\n\n\n\n\nBrandRepository \n\nBrandRepository \n\n\n\nBrandRepositoryModule\n\nBrandRepositoryModule\n\nBrandRepository  -->\n\nBrandRepositoryModule->BrandRepository \n\n\n\n\n\nBrandRepository\n\nBrandRepository\n\nBrandRepositoryModule -->\n\nBrandRepository->BrandRepositoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/brands/repository/brand.repository.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BrandRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BrandRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { BrandEntity } from '@/common/database/entities/brand.entity';\nimport { BrandRepository } from './brand.repository';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([BrandEntity])],\n  controllers: [],\n  providers: [BrandRepository],\n  exports: [BrandRepository],\n})\nexport class BrandRepositoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BrandsController.html":{"url":"controllers/BrandsController.html","title":"controller - BrandsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BrandsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/brands.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                brands\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: CreateBrandDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(CREATE_BRAND_OK_RESPONSE)@ApiResponse(CREATE_BRAND_400_RESPONSE)@ApiResponse(CREATE_BRAND_409_RESPONSE)@ApiBody({type: CreateBrandDto})@Post()\n                \n            \n\n            \n                \n                    Defined in src/brands/brands.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateBrandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(GET_BRAND_OK_RESPONSE)@Get()\n                \n            \n\n            \n                \n                    Defined in src/brands/brands.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(GET_BY_ID_BRAND_OK_RESPONSE)@ApiResponse(GET_BY_ID_BRAND_404_RESPONSE)@ApiParam(PARAM_ID_BRAND)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/brands/brands.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(DELETE_BRAND_OK_RESPONSE)@ApiResponse(DELETE_BRAND_404_RESPONSE)@ApiParam(PARAM_ID_BRAND)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/brands/brands.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, data: UpdateBrandDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(UPDATE_BRAND_OK_RESPONSE)@ApiResponse(UPDATE_BRAND_400_RESPONSE)@ApiResponse(UPDATE_BRAND_404_RESPONSE)@ApiResponse(UPDATE_BRAND_409_RESPONSE)@ApiParam(PARAM_ID_BRAND)@ApiBody({type: UpdateBrandDto})@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/brands/brands.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateBrandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiOkResponse,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { BrandEntity } from '@/common/database/entities/brand.entity';\nimport { BrandsService } from './brands.service';\nimport { CreateBrandDto } from './dto/create-brand.dto';\nimport { UpdateBrandDto } from './dto/update-brand.dto';\nimport { CreateBrandSerializer } from './serializers/create-brand.serializer';\nimport { UpdateBrandSerializer } from './serializers/update-brand.serializer';\nimport {\n  CREATE_BRAND_400_RESPONSE,\n  CREATE_BRAND_409_RESPONSE,\n  CREATE_BRAND_OK_RESPONSE,\n  DELETE_BRAND_404_RESPONSE,\n  DELETE_BRAND_OK_RESPONSE,\n  GET_BRAND_OK_RESPONSE,\n  GET_BY_ID_BRAND_404_RESPONSE,\n  GET_BY_ID_BRAND_OK_RESPONSE,\n  PARAM_ID_BRAND,\n  UPDATE_BRAND_400_RESPONSE,\n  UPDATE_BRAND_404_RESPONSE,\n  UPDATE_BRAND_409_RESPONSE,\n  UPDATE_BRAND_OK_RESPONSE,\n} from './swagger/brands.constant';\n\n@ApiTags('Brands')\n@Controller('brands')\nexport class BrandsController {\n  constructor(private readonly brandsService: BrandsService) {}\n\n  @ApiOkResponse(GET_BRAND_OK_RESPONSE)\n  @Get()\n  findAll(): Promise {\n    return this.brandsService.findAll();\n  }\n\n  @ApiOkResponse(GET_BY_ID_BRAND_OK_RESPONSE)\n  @ApiResponse(GET_BY_ID_BRAND_404_RESPONSE)\n  @ApiParam(PARAM_ID_BRAND)\n  @Get(':id')\n  findOne(@Param('id') id: string): Promise {\n    return this.brandsService.findOne(+id);\n  }\n\n  @ApiOkResponse(CREATE_BRAND_OK_RESPONSE)\n  @ApiResponse(CREATE_BRAND_400_RESPONSE)\n  @ApiResponse(CREATE_BRAND_409_RESPONSE)\n  @ApiBody({ type: CreateBrandDto })\n  @Post()\n  create(\n    @Body() data: CreateBrandDto,\n  ): Promise {\n    return this.brandsService.create(data);\n  }\n\n  @ApiOkResponse(UPDATE_BRAND_OK_RESPONSE)\n  @ApiResponse(UPDATE_BRAND_400_RESPONSE)\n  @ApiResponse(UPDATE_BRAND_404_RESPONSE)\n  @ApiResponse(UPDATE_BRAND_409_RESPONSE)\n  @ApiParam(PARAM_ID_BRAND)\n  @ApiBody({ type: UpdateBrandDto })\n  @Put(':id')\n  update(\n    @Param('id') id: string,\n    @Body() data: UpdateBrandDto,\n  ): Promise {\n    return this.brandsService.update(+id, data);\n  }\n\n  @ApiOkResponse(DELETE_BRAND_OK_RESPONSE)\n  @ApiResponse(DELETE_BRAND_404_RESPONSE)\n  @ApiParam(PARAM_ID_BRAND)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.brandsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BrandsModule.html":{"url":"modules/BrandsModule.html","title":"module - BrandsModule","body":"\n                   \n\n\n\n\n    Modules\n    BrandsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BrandsModule\n\n\n\ncluster_BrandsModule_imports\n\n\n\ncluster_BrandsModule_exports\n\n\n\ncluster_BrandsModule_providers\n\n\n\n\nBrandRepositoryModule\n\nBrandRepositoryModule\n\n\n\nBrandsModule\n\nBrandsModule\n\nBrandsModule -->\n\nBrandRepositoryModule->BrandsModule\n\n\n\n\n\nBrandsService \n\nBrandsService \n\nBrandsService  -->\n\nBrandsModule->BrandsService \n\n\n\n\n\nBrandsService\n\nBrandsService\n\nBrandsModule -->\n\nBrandsService->BrandsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/brands/brands.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BrandsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BrandsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BrandRepositoryModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BrandsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { BrandsController } from './brands.controller';\nimport { BrandsService } from './brands.service';\nimport { BrandRepositoryModule } from './repository/brand.repository.module';\n\n@Module({\n  imports: [BrandRepositoryModule],\n  controllers: [BrandsController],\n  providers: [BrandsService],\n  exports: [BrandsService],\n})\nexport class BrandsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrandsService.html":{"url":"injectables/BrandsService.html","title":"injectable - BrandsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BrandsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/brands.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(brandRepository: BrandRepository)\n                    \n                \n                        \n                            \n                                Defined in src/brands/brands.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        brandRepository\n                                                  \n                                                        \n                                                                        BrandRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: CreateBrandDto)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/brands.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateBrandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/brands/brands.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/brands.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/brands.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, data: UpdateBrandDto)\n                \n            \n\n\n            \n                \n                    Defined in src/brands/brands.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateBrandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { BrandEntity } from '@/common/database/entities/brand.entity';\nimport { CreateBrandDto } from './dto/create-brand.dto';\nimport { UpdateBrandDto } from './dto/update-brand.dto';\nimport { BrandRepository } from './repository/brand.repository';\nimport { CreateBrandSerializer } from './serializers/create-brand.serializer';\nimport { UpdateBrandSerializer } from './serializers/update-brand.serializer';\n\n@Injectable()\nexport class BrandsService {\n  constructor(private readonly brandRepository: BrandRepository) {}\n\n  findAll(): Promise {\n    return this.brandRepository.findAll();\n  }\n\n  findOne(id: number): Promise {\n    return this.brandRepository.findOne(id);\n  }\n\n  create(data: CreateBrandDto): Promise {\n    return this.brandRepository.create(data);\n  }\n\n  update(\n    id: number,\n    data: UpdateBrandDto,\n  ): Promise {\n    return this.brandRepository.update(id, data);\n  }\n\n  remove(id: number) {\n    return this.brandRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBrandDto.html":{"url":"classes/CreateBrandDto.html","title":"class - CreateBrandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBrandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/dto/create-brand.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MaxLength(50, {message: 'This name is too long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/dto/create-brand.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, MaxLength } from 'class-validator';\n\nexport class CreateBrandDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(50, {\n    message: 'This name is too long',\n  })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBrandSerializer.html":{"url":"classes/CreateBrandSerializer.html","title":"class - CreateBrandSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBrandSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/serializers/create-brand.serializer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de criação da marca.', example: '2023-03-18T22:38:45.996Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/serializers/create-brand.serializer.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de exclusão da marca quando aplicável.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/serializers/create-brand.serializer.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID da marca.', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/serializers/create-brand.serializer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nome da marca.', example: 'Nike'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/serializers/create-brand.serializer.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de atualização da marca.', example: '2023-03-18T22:38:45.996Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/serializers/create-brand.serializer.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateBrandSerializer {\n  @ApiProperty({\n    description: 'ID da marca.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome da marca.',\n    example: 'Nike',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Data de criação da marca.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização da marca.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão da marca quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brandId\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                price\n                            \n                            \n                                sellerId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        brandId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MaxLength(50, {message: 'This name is too long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({default: '0'})@IsOptional()@IsDecimal()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sellerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/create-product.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsDecimal,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  MaxLength,\n} from 'class-validator';\n\nexport class CreateProductDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(50, {\n    message: 'This name is too long',\n  })\n  name: string;\n\n  @ApiPropertyOptional({ default: '0' })\n  @IsOptional()\n  @IsDecimal()\n  price?: number;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsNumber()\n  brandId: number;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsNumber()\n  sellerId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductSerializer.html":{"url":"classes/CreateProductSerializer.html","title":"class - CreateProductSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/serializers/create-product.serializer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brandId\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                sellerId\n                            \n                            \n                                slug\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        brandId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID da marca do produto.', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/serializers/create-product.serializer.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de criação do produto.', example: '2023-03-18T22:38:45.996Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/serializers/create-product.serializer.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de exclusão do produto quando aplicável.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/serializers/create-product.serializer.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID do produto.', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/serializers/create-product.serializer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nome do produto.', example: 'Tênis de corrida'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/serializers/create-product.serializer.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Preço do produto.', example: '100.00'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/serializers/create-product.serializer.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sellerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID do vendedor do produto.', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/serializers/create-product.serializer.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Slug do produto.', example: 'tenis-de-corrida'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/serializers/create-product.serializer.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de atualização do produto.', example: '2023-03-18T22:38:45.996Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/serializers/create-product.serializer.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateProductSerializer {\n  @ApiProperty({\n    description: 'ID do produto.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome do produto.',\n    example: 'Tênis de corrida',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Slug do produto.',\n    example: 'tenis-de-corrida',\n  })\n  slug: string;\n\n  @ApiProperty({\n    description: 'Preço do produto.',\n    example: '100.00',\n  })\n  price: number;\n\n  @ApiProperty({\n    description: 'Data de criação do produto.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização do produto.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão do produto quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n\n  @ApiProperty({\n    description: 'ID da marca do produto.',\n    example: 1,\n  })\n  brandId: number;\n\n  @ApiProperty({\n    description: 'ID do vendedor do produto.',\n    example: 2,\n  })\n  sellerId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSellerDto.html":{"url":"classes/CreateSellerDto.html","title":"class - CreateSellerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSellerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sellers/dto/create-seller.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MaxLength(50, {message: 'This name is too long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/dto/create-seller.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, MaxLength } from 'class-validator';\n\nexport class CreateSellerDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(50, {\n    message: 'This name is too long',\n  })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSellerSerializer.html":{"url":"classes/CreateSellerSerializer.html","title":"class - CreateSellerSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSellerSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sellers/serializers/create-seller.serializer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de criação do vendedor.', example: '2023-03-18T22:38:45.996Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/serializers/create-seller.serializer.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de exclusão do vendedor quando aplicável.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/serializers/create-seller.serializer.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID do vendedor.', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/serializers/create-seller.serializer.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nome do vendedor.', example: 'Centauro'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/serializers/create-seller.serializer.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de atualização do vendedor.', example: '2023-03-18T22:38:45.996Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/serializers/create-seller.serializer.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateSellerSerializer {\n  @ApiProperty({\n    description: 'ID do vendedor.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome do vendedor.',\n    example: 'Centauro',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Data de criação do vendedor.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização do vendedor.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão do vendedor quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindOptions.html":{"url":"classes/FindOptions.html","title":"class - FindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/find-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                brand\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                priceEnd\n                            \n                            \n                                    Optional\n                                priceStart\n                            \n                            \n                                    Optional\n                                seller\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Nike'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/find-options.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Tênis'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/find-options.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        priceEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: '200'})@IsNumberString()@ValidateIf(o => )@IsDefined()@IsNumberString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/find-options.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        priceStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: '100'})@ValidateIf(o => )@IsDefined()@IsNumberString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/find-options.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        seller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Centauro'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/find-options.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsDefined,\n  IsNumberString,\n  IsOptional,\n  IsString,\n  ValidateIf,\n} from 'class-validator';\n\nexport class FindOptions {\n  @ApiPropertyOptional({\n    example: 'Tênis',\n  })\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @ApiPropertyOptional({\n    example: 'Nike',\n  })\n  @IsOptional()\n  @IsString()\n  brand?: string;\n\n  @ApiPropertyOptional({\n    example: 'Centauro',\n  })\n  @IsOptional()\n  @IsString()\n  seller?: string;\n\n  @ApiPropertyOptional({\n    example: '100',\n  })\n  @ValidateIf((o) => o.priceEnd !== null && o.priceEnd !== undefined)\n  @IsDefined()\n  @IsNumberString()\n  priceStart?: string;\n\n  @ApiPropertyOptional({\n    example: '200',\n  })\n  @IsNumberString()\n  @ValidateIf((o) => o.priceStart !== null && o.priceStart !== undefined)\n  @IsDefined()\n  @IsNumberString()\n  priceEnd?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetBrandResponse.html":{"url":"classes/GetBrandResponse.html","title":"class - GetBrandResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetBrandResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/swagger/brand.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de criação da marca.', example: '2023-03-18T22:38:45.996Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/swagger/brand.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de exclusão da marca quando aplicável.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/swagger/brand.response.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID da marca.', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/swagger/brand.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nome da marca.', example: 'Nike'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/swagger/brand.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de atualização da marca.', example: '2023-03-18T22:38:45.996Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/swagger/brand.response.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class GetBrandResponse {\n  @ApiProperty({\n    description: 'ID da marca.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome da marca.',\n    example: 'Nike',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Data de criação da marca.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização da marca.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão da marca quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n}\n\nexport class Response404Dto {\n  @ApiProperty({\n    example: '404',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Not found',\n  })\n  message: string;\n}\n\nexport class Response400Dto {\n  @ApiProperty({\n    example: '400',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name should not be empty',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Bad Request',\n  })\n  error: string;\n}\n\nexport class Response409Dto {\n  @ApiProperty({\n    example: '409',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name already exists',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Conflict',\n  })\n  error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProductResponse.html":{"url":"classes/GetProductResponse.html","title":"class - GetProductResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProductResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/swagger/product.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brand\n                            \n                            \n                                brandId\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                seller\n                            \n                            \n                                sellerId\n                            \n                            \n                                slug\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BrandEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Marca associada ao produto.', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        brandId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID da marca do produto.', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de criação do produto.', example: '2023-03-18T22:38:45.996Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de exclusão do produto quando aplicável.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID do produto.', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nome do produto.', example: 'Tênis de corrida'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Preço do produto.', example: '100.00'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SellerEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Vendedor associado ao produto.', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sellerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID do vendedor do produto.', example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Slug do produto.', example: 'tenis-de-corrida'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de atualização do produto.', example: '2023-03-18T22:38:45.996Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { BrandEntity } from '@/common/database/entities/brand.entity';\nimport { SellerEntity } from '@/common/database/entities/seller.entity';\n\nexport class GetProductResponse {\n  @ApiProperty({\n    description: 'ID do produto.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome do produto.',\n    example: 'Tênis de corrida',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Slug do produto.',\n    example: 'tenis-de-corrida',\n  })\n  slug: string;\n\n  @ApiProperty({\n    description: 'Preço do produto.',\n    example: '100.00',\n  })\n  price: number;\n\n  @ApiProperty({\n    description: 'ID da marca do produto.',\n    example: 1,\n  })\n  brandId: number;\n\n  @ApiProperty({\n    description: 'Marca associada ao produto.',\n    example: 1,\n  })\n  brand: BrandEntity;\n\n  @ApiProperty({\n    description: 'ID do vendedor do produto.',\n    example: 2,\n  })\n  sellerId: number;\n\n  @ApiProperty({\n    description: 'Vendedor associado ao produto.',\n    example: 2,\n  })\n  seller: SellerEntity;\n\n  @ApiProperty({\n    description: 'Data de criação do produto.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização do produto.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão do produto quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n}\n\nexport class Response404Dto {\n  @ApiProperty({\n    example: '404',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Not found',\n  })\n  message: string;\n}\n\nexport class Response400Dto {\n  @ApiProperty({\n    example: '400',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name should not be empty',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Bad Request',\n  })\n  error: string;\n}\n\nexport class Response409Dto {\n  @ApiProperty({\n    example: '409',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name already exists',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Conflict',\n  })\n  error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSellerResponse.html":{"url":"classes/GetSellerResponse.html","title":"class - GetSellerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSellerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sellers/swagger/seller.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de criação do vendedor.', example: '2023-03-18T22:38:45.996Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/swagger/seller.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de exclusão do vendedor quando aplicável.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/swagger/seller.response.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID do vendedor.', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/swagger/seller.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nome do vendedor.', example: 'Centauro'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/swagger/seller.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Data de atualização do vendedor.', example: '2023-03-18T22:38:45.996Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/swagger/seller.response.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class GetSellerResponse {\n  @ApiProperty({\n    description: 'ID do vendedor.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome do vendedor.',\n    example: 'Centauro',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Data de criação do vendedor.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização do vendedor.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão do vendedor quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n}\n\nexport class Response404Dto {\n  @ApiProperty({\n    example: '404',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Not found',\n  })\n  message: string;\n}\n\nexport class Response400Dto {\n  @ApiProperty({\n    example: '400',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name should not be empty',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Bad Request',\n  })\n  error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductEntity.html":{"url":"entities/ProductEntity.html","title":"entity - ProductEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/entities/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brand\n                            \n                            \n                                brandId\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                seller\n                            \n                            \n                                sellerId\n                            \n                            \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BrandEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, brand => brand.products, {nullable: false, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/product.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        brandId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/product.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/product.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: '50', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/product.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'decimal', precision: 10, scale: 2, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/product.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SellerEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, seller => seller.products, {nullable: false, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/product.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sellerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/product.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: '50', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/product.entity.ts:39\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import slugify from 'slugify';\nimport {\n  BeforeInsert,\n  BeforeUpdate,\n  Column,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Unique,\n} from 'typeorm';\n\nimport { BasicEntity } from './basic.entity';\nimport { BrandEntity } from './brand.entity';\nimport { SellerEntity } from './seller.entity';\n\n@Entity({\n  name: 'product',\n  synchronize: false,\n})\n@Unique(['name', 'slug'])\nexport class ProductEntity extends BasicEntity {\n  @PrimaryGeneratedColumn({\n    type: 'int',\n  })\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    length: '50',\n    nullable: false,\n  })\n  name: string;\n\n  @Column({\n    type: 'varchar',\n    length: '50',\n    nullable: false,\n  })\n  slug: string;\n\n  @Column({\n    type: 'decimal',\n    precision: 10,\n    scale: 2,\n    default: 0.0,\n  })\n  price: number;\n\n  @Column({\n    type: 'int',\n  })\n  brandId: number;\n\n  @ManyToOne(() => BrandEntity, (brand) => brand.products, {\n    nullable: false,\n    eager: true,\n  })\n  brand: BrandEntity;\n\n  @Column({\n    type: 'int',\n  })\n  sellerId: number;\n\n  @ManyToOne(() => SellerEntity, (seller) => seller.products, {\n    nullable: false,\n    eager: true,\n  })\n  seller: SellerEntity;\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  generateSlug() {\n    this.slug = slugify(this.name, { lower: true, strict: true });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductRepository.html":{"url":"injectables/ProductRepository.html","title":"injectable - ProductRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/repository/product.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                exist\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findBySlug\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                nameExists\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Private\n                                throwValidError\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository, brandsService: BrandsService, sellersService: SellersService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/products/repository/product.repository.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        brandsService\n                                                  \n                                                        \n                                                                        BrandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sellersService\n                                                  \n                                                        \n                                                                        SellersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/repository/product.repository.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exist\n                        \n                    \n                \n            \n            \n                \n                    \n                    exist(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/products/repository/product.repository.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query: FindOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/products/repository/product.repository.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FindOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findBySlug\n                        \n                    \n                \n            \n            \n                \n                    \n                    findBySlug(slug: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/repository/product.repository.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/products/repository/product.repository.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        nameExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    nameExists(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/repository/product.repository.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/products/repository/product.repository.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        throwValidError\n                        \n                    \n                \n            \n            \n                \n                    \n                    throwValidError(error: HttpException | Error)\n                \n            \n\n\n            \n                \n                    Defined in src/products/repository/product.repository.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            HttpException | Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/repository/product.repository.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  HttpException,\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { ILike, Repository } from 'typeorm';\n\nimport { BrandsService } from '@/brands/brands.service';\nimport { ProductEntity } from '@/common/database/entities/product.entity';\nimport { CreateProductDto } from '@/products/dto/create-product.dto';\nimport { UpdateProductDto } from '@/products/dto/update-product.dto';\nimport { CreateProductSerializer } from '@/products/serializers/create-product.serializer';\nimport { UpdateProductSerializer } from '@/products/serializers/update-product.serializer';\nimport { SellersService } from '@/sellers/sellers.service';\nimport { Logger } from 'nestjs-pino';\nimport { FindOptions } from './../dto/find-options.dto';\n\n@Injectable()\nexport class ProductRepository {\n  constructor(\n    @InjectRepository(ProductEntity)\n    private repository: Repository,\n    private readonly brandsService: BrandsService,\n    private readonly sellersService: SellersService,\n    @Inject(Logger)\n    private readonly logger: Logger,\n  ) {}\n\n  async findAll(query: FindOptions) {\n    const { name, brand, seller, priceStart, priceEnd } = query;\n\n    const qb = this.repository\n      .createQueryBuilder('product')\n      .leftJoin('product.brand', 'brand')\n      .leftJoin('product.seller', 'seller')\n      .loadAllRelationIds();\n\n    if (priceStart && priceEnd) {\n      qb.andWhere('product.price BETWEEN :priceStart AND :priceEnd', {\n        priceStart: priceStart,\n        priceEnd: priceEnd,\n      });\n    }\n\n    if (name) {\n      qb.andWhere({ name: ILike(`%${name}%`) });\n    }\n\n    if (brand) {\n      qb.andWhere('brand.name LIKE :brand', { brand: `%${brand}%` });\n    }\n\n    if (seller) {\n      qb.andWhere('seller.name LIKE :seller', { seller: `%${seller}%` });\n    }\n\n    return await qb.getMany();\n  }\n\n  async findBySlug(slug: string) {\n    try {\n      return await this.repository.findOneOrFail({\n        where: { slug: slug },\n        loadRelationIds: true,\n      });\n    } catch (error) {\n      throw new NotFoundException();\n    }\n  }\n\n  async findOne(id: number) {\n    try {\n      return await this.repository.findOneOrFail({\n        where: { id },\n        loadRelationIds: true,\n      });\n    } catch (error) {\n      throw new NotFoundException();\n    }\n  }\n\n  async create(\n    data: CreateProductDto,\n  ): Promise {\n    try {\n      if (await this.nameExists(data.name)) {\n        throw new ConflictException('Name already exists');\n      }\n\n      await this.brandsService.findOne(data.brandId);\n\n      await this.sellersService.findOne(data.sellerId);\n\n      const newProduct = this.repository.create(data);\n\n      await this.repository.save(newProduct);\n\n      const product = await this.repository.findOneOrFail({\n        where: { id: newProduct.id },\n        loadRelationIds: true,\n      });\n\n      return product;\n    } catch (error) {\n      this.logger.error('Failed to create product', error);\n      this.throwValidError(error);\n    }\n  }\n\n  async update(\n    id: number,\n    data: UpdateProductDto,\n  ): Promise {\n    try {\n      const product = await this.repository.findOne({ where: { id } });\n\n      if (!product) {\n        throw new NotFoundException({\n          message: 'Product not found',\n          status: 'PRODUCT_NOT_FOUND',\n        });\n      }\n\n      if (data.name) {\n        if (await this.nameExists(data.name)) {\n          throw new ConflictException('Name already exists');\n        }\n      }\n\n      await this.repository.save(Object.assign(product, data));\n      return { success: true };\n    } catch (error) {\n      this.logger.error('Failed to update product', error);\n      this.throwValidError(error);\n    }\n  }\n\n  async remove(id: number) {\n    await this.repository.softDelete({\n      id,\n    });\n\n    return { sucess: true };\n  }\n\n  async nameExists(name: string): Promise {\n    return (\n      (await this.repository\n        .createQueryBuilder('product')\n        .where('product.name = :name', { name })\n        .getCount()) === 1\n    );\n  }\n\n  async exist(id: number) {\n    return await this.repository.exist({\n      where: {\n        id,\n      },\n    });\n  }\n\n  private throwValidError(error: HttpException | Error) {\n    if (error instanceof HttpException) {\n      throw error;\n    } else {\n      throw new InternalServerErrorException({\n        status: 'INTERNAL_ERROR',\n        message: error.message,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductRepositoryModule.html":{"url":"modules/ProductRepositoryModule.html","title":"module - ProductRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductRepositoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductRepositoryModule\n\n\n\ncluster_ProductRepositoryModule_imports\n\n\n\ncluster_ProductRepositoryModule_providers\n\n\n\ncluster_ProductRepositoryModule_exports\n\n\n\n\nBrandsModule\n\nBrandsModule\n\n\n\nProductRepositoryModule\n\nProductRepositoryModule\n\nProductRepositoryModule -->\n\nBrandsModule->ProductRepositoryModule\n\n\n\n\n\nSellersModule\n\nSellersModule\n\nProductRepositoryModule -->\n\nSellersModule->ProductRepositoryModule\n\n\n\n\n\nProductRepository \n\nProductRepository \n\nProductRepository  -->\n\nProductRepositoryModule->ProductRepository \n\n\n\n\n\nProductRepository\n\nProductRepository\n\nProductRepositoryModule -->\n\nProductRepository->ProductRepositoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/repository/product.repository.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductRepository\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BrandsModule\n                        \n                        \n                            SellersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { BrandsModule } from '@/brands/brands.module';\nimport { ProductEntity } from '@/common/database/entities/product.entity';\nimport { SellersModule } from '@/sellers/sellers.module';\nimport { ProductRepository } from './product.repository';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([ProductEntity]),\n    BrandsModule,\n    SellersModule,\n  ],\n  controllers: [],\n  providers: [ProductRepository],\n  exports: [ProductRepository],\n})\nexport class ProductRepositoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findBySlug\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(CREATE_PRODUCT_OK_RESPONSE)@ApiResponse(CREATE_PRODUCT_400_RESPONSE)@ApiResponse(CREATE_PRODUCT_409_RESPONSE)@ApiBody({type: CreateProductDto})@Post()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(query: FindOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(GET_PRODUCT_OK_RESPONSE)@Get()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FindOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findBySlug\n                        \n                    \n                \n            \n            \n                \nfindBySlug(slug: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(GET_BY_SLUG_PRODUCT_OK_RESPONSE)@ApiResponse(GET_BY_SLUG_PRODUCT_404_RESPONSE)@ApiParam(PARAM_SLUG_PRODUCT)@Get(':slug')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(GET_BY_ID_PRODUCT_OK_RESPONSE)@ApiResponse(GET_BY_ID_PRODUCT_404_RESPONSE)@ApiParam(PARAM_ID_PRODUCT)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(DELETE_PRODUCT_OK_RESPONSE)@ApiResponse(DELETE_PRODUCT_404_RESPONSE)@ApiParam(PARAM_ID_PRODUCT)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, data: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(UPDATE_PRODUCT_OK_RESPONSE)@ApiResponse(UPDATE_PRODUCT_400_RESPONSE)@ApiResponse(UPDATE_PRODUCT_404_RESPONSE)@ApiResponse(UPDATE_PRODUCT_409_RESPONSE)@ApiParam(PARAM_ID_PRODUCT)@ApiBody({type: UpdateProductDto})@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  Query,\n} from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiOkResponse,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { ProductEntity } from '@/common/database/entities/product.entity';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { FindOptions } from './dto/find-options.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ProductsService } from './products.service';\nimport { CreateProductSerializer } from './serializers/create-product.serializer';\nimport { UpdateProductSerializer } from './serializers/update-product.serializer';\nimport {\n  CREATE_PRODUCT_400_RESPONSE,\n  CREATE_PRODUCT_409_RESPONSE,\n  CREATE_PRODUCT_OK_RESPONSE,\n  DELETE_PRODUCT_404_RESPONSE,\n  DELETE_PRODUCT_OK_RESPONSE,\n  GET_BY_ID_PRODUCT_404_RESPONSE,\n  GET_BY_ID_PRODUCT_OK_RESPONSE,\n  GET_BY_SLUG_PRODUCT_404_RESPONSE,\n  GET_BY_SLUG_PRODUCT_OK_RESPONSE,\n  GET_PRODUCT_OK_RESPONSE,\n  PARAM_ID_PRODUCT,\n  PARAM_SLUG_PRODUCT,\n  UPDATE_PRODUCT_400_RESPONSE,\n  UPDATE_PRODUCT_404_RESPONSE,\n  UPDATE_PRODUCT_409_RESPONSE,\n  UPDATE_PRODUCT_OK_RESPONSE,\n} from './swagger/products.constant';\n\n@ApiTags('Products')\n@Controller('products')\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @ApiOkResponse(GET_PRODUCT_OK_RESPONSE)\n  @Get()\n  findAll(@Query() query: FindOptions): Promise {\n    return this.productsService.findAll(query);\n  }\n\n  @ApiOkResponse(GET_BY_SLUG_PRODUCT_OK_RESPONSE)\n  @ApiResponse(GET_BY_SLUG_PRODUCT_404_RESPONSE)\n  @ApiParam(PARAM_SLUG_PRODUCT)\n  @Get(':slug')\n  findBySlug(@Param('slug') slug: string): Promise {\n    return this.productsService.findBySlug(slug);\n  }\n\n  @ApiOkResponse(GET_BY_ID_PRODUCT_OK_RESPONSE)\n  @ApiResponse(GET_BY_ID_PRODUCT_404_RESPONSE)\n  @ApiParam(PARAM_ID_PRODUCT)\n  @Get(':id')\n  findOne(@Param('id') id: string): Promise {\n    return this.productsService.findOne(+id);\n  }\n\n  @ApiOkResponse(CREATE_PRODUCT_OK_RESPONSE)\n  @ApiResponse(CREATE_PRODUCT_400_RESPONSE)\n  @ApiResponse(CREATE_PRODUCT_409_RESPONSE)\n  @ApiBody({ type: CreateProductDto })\n  @Post()\n  create(\n    @Body() data: CreateProductDto,\n  ): Promise {\n    return this.productsService.create(data);\n  }\n\n  @ApiOkResponse(UPDATE_PRODUCT_OK_RESPONSE)\n  @ApiResponse(UPDATE_PRODUCT_400_RESPONSE)\n  @ApiResponse(UPDATE_PRODUCT_404_RESPONSE)\n  @ApiResponse(UPDATE_PRODUCT_409_RESPONSE)\n  @ApiParam(PARAM_ID_PRODUCT)\n  @ApiBody({ type: UpdateProductDto })\n  @Put(':id')\n  update(\n    @Param('id') id: string,\n    @Body() data: UpdateProductDto,\n  ): Promise {\n    return this.productsService.update(+id, data);\n  }\n\n  @ApiOkResponse(DELETE_PRODUCT_OK_RESPONSE)\n  @ApiResponse(DELETE_PRODUCT_404_RESPONSE)\n  @ApiParam(PARAM_ID_PRODUCT)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.productsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_imports\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductRepositoryModule\n\nProductRepositoryModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductRepositoryModule->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductRepositoryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './products.service';\nimport { ProductRepositoryModule } from './repository/product.repository.module';\n\n@Module({\n  imports: [ProductRepositoryModule],\n  controllers: [ProductsController],\n  providers: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findBySlug\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: ProductRepository)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        ProductRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(query: FindOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FindOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findBySlug\n                        \n                    \n                \n            \n            \n                \nfindBySlug(slug: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, data: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { ProductEntity } from '@/common/database/entities/product.entity';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { FindOptions } from './dto/find-options.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ProductRepository } from './repository/product.repository';\nimport { CreateProductSerializer } from './serializers/create-product.serializer';\nimport { UpdateProductSerializer } from './serializers/update-product.serializer';\n\n@Injectable()\nexport class ProductsService {\n  constructor(private readonly productRepository: ProductRepository) {}\n\n  findAll(query: FindOptions): Promise {\n    return this.productRepository.findAll(query);\n  }\n\n  findBySlug(slug: string): Promise {\n    return this.productRepository.findBySlug(slug);\n  }\n\n  findOne(id: number): Promise {\n    return this.productRepository.findOne(id);\n  }\n\n  create(data: CreateProductDto): Promise {\n    return this.productRepository.create(data);\n  }\n\n  update(\n    id: number,\n    data: UpdateProductDto,\n  ): Promise {\n    return this.productRepository.update(id, data);\n  }\n\n  remove(id: number) {\n    return this.productRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Response400Dto.html":{"url":"classes/Response400Dto.html","title":"class - Response400Dto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Response400Dto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/swagger/brand.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                message\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Bad Request'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/swagger/brand.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Name should not be empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/swagger/brand.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '400'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/swagger/brand.response.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class GetBrandResponse {\n  @ApiProperty({\n    description: 'ID da marca.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome da marca.',\n    example: 'Nike',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Data de criação da marca.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização da marca.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão da marca quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n}\n\nexport class Response404Dto {\n  @ApiProperty({\n    example: '404',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Not found',\n  })\n  message: string;\n}\n\nexport class Response400Dto {\n  @ApiProperty({\n    example: '400',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name should not be empty',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Bad Request',\n  })\n  error: string;\n}\n\nexport class Response409Dto {\n  @ApiProperty({\n    example: '409',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name already exists',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Conflict',\n  })\n  error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Response400Dto-1.html":{"url":"classes/Response400Dto-1.html","title":"class - Response400Dto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Response400Dto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/swagger/product.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                message\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Bad Request'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Name should not be empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '400'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:90\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { BrandEntity } from '@/common/database/entities/brand.entity';\nimport { SellerEntity } from '@/common/database/entities/seller.entity';\n\nexport class GetProductResponse {\n  @ApiProperty({\n    description: 'ID do produto.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome do produto.',\n    example: 'Tênis de corrida',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Slug do produto.',\n    example: 'tenis-de-corrida',\n  })\n  slug: string;\n\n  @ApiProperty({\n    description: 'Preço do produto.',\n    example: '100.00',\n  })\n  price: number;\n\n  @ApiProperty({\n    description: 'ID da marca do produto.',\n    example: 1,\n  })\n  brandId: number;\n\n  @ApiProperty({\n    description: 'Marca associada ao produto.',\n    example: 1,\n  })\n  brand: BrandEntity;\n\n  @ApiProperty({\n    description: 'ID do vendedor do produto.',\n    example: 2,\n  })\n  sellerId: number;\n\n  @ApiProperty({\n    description: 'Vendedor associado ao produto.',\n    example: 2,\n  })\n  seller: SellerEntity;\n\n  @ApiProperty({\n    description: 'Data de criação do produto.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização do produto.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão do produto quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n}\n\nexport class Response404Dto {\n  @ApiProperty({\n    example: '404',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Not found',\n  })\n  message: string;\n}\n\nexport class Response400Dto {\n  @ApiProperty({\n    example: '400',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name should not be empty',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Bad Request',\n  })\n  error: string;\n}\n\nexport class Response409Dto {\n  @ApiProperty({\n    example: '409',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name already exists',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Conflict',\n  })\n  error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Response400Dto-2.html":{"url":"classes/Response400Dto-2.html","title":"class - Response400Dto-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Response400Dto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sellers/swagger/seller.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                message\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Bad Request'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/swagger/seller.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Name should not be empty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/swagger/seller.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '400'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/swagger/seller.response.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class GetSellerResponse {\n  @ApiProperty({\n    description: 'ID do vendedor.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome do vendedor.',\n    example: 'Centauro',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Data de criação do vendedor.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização do vendedor.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão do vendedor quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n}\n\nexport class Response404Dto {\n  @ApiProperty({\n    example: '404',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Not found',\n  })\n  message: string;\n}\n\nexport class Response400Dto {\n  @ApiProperty({\n    example: '400',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name should not be empty',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Bad Request',\n  })\n  error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Response404Dto.html":{"url":"classes/Response404Dto.html","title":"class - Response404Dto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Response404Dto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/swagger/brand.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Not found'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/swagger/brand.response.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '404'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/swagger/brand.response.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class GetBrandResponse {\n  @ApiProperty({\n    description: 'ID da marca.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome da marca.',\n    example: 'Nike',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Data de criação da marca.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização da marca.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão da marca quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n}\n\nexport class Response404Dto {\n  @ApiProperty({\n    example: '404',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Not found',\n  })\n  message: string;\n}\n\nexport class Response400Dto {\n  @ApiProperty({\n    example: '400',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name should not be empty',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Bad Request',\n  })\n  error: string;\n}\n\nexport class Response409Dto {\n  @ApiProperty({\n    example: '409',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name already exists',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Conflict',\n  })\n  error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Response404Dto-1.html":{"url":"classes/Response404Dto-1.html","title":"class - Response404Dto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Response404Dto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/swagger/product.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Not found'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '404'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:78\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { BrandEntity } from '@/common/database/entities/brand.entity';\nimport { SellerEntity } from '@/common/database/entities/seller.entity';\n\nexport class GetProductResponse {\n  @ApiProperty({\n    description: 'ID do produto.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome do produto.',\n    example: 'Tênis de corrida',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Slug do produto.',\n    example: 'tenis-de-corrida',\n  })\n  slug: string;\n\n  @ApiProperty({\n    description: 'Preço do produto.',\n    example: '100.00',\n  })\n  price: number;\n\n  @ApiProperty({\n    description: 'ID da marca do produto.',\n    example: 1,\n  })\n  brandId: number;\n\n  @ApiProperty({\n    description: 'Marca associada ao produto.',\n    example: 1,\n  })\n  brand: BrandEntity;\n\n  @ApiProperty({\n    description: 'ID do vendedor do produto.',\n    example: 2,\n  })\n  sellerId: number;\n\n  @ApiProperty({\n    description: 'Vendedor associado ao produto.',\n    example: 2,\n  })\n  seller: SellerEntity;\n\n  @ApiProperty({\n    description: 'Data de criação do produto.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização do produto.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão do produto quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n}\n\nexport class Response404Dto {\n  @ApiProperty({\n    example: '404',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Not found',\n  })\n  message: string;\n}\n\nexport class Response400Dto {\n  @ApiProperty({\n    example: '400',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name should not be empty',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Bad Request',\n  })\n  error: string;\n}\n\nexport class Response409Dto {\n  @ApiProperty({\n    example: '409',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name already exists',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Conflict',\n  })\n  error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Response404Dto-2.html":{"url":"classes/Response404Dto-2.html","title":"class - Response404Dto-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Response404Dto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sellers/swagger/seller.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Not found'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/swagger/seller.response.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '404'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/swagger/seller.response.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class GetSellerResponse {\n  @ApiProperty({\n    description: 'ID do vendedor.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome do vendedor.',\n    example: 'Centauro',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Data de criação do vendedor.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização do vendedor.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão do vendedor quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n}\n\nexport class Response404Dto {\n  @ApiProperty({\n    example: '404',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Not found',\n  })\n  message: string;\n}\n\nexport class Response400Dto {\n  @ApiProperty({\n    example: '400',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name should not be empty',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Bad Request',\n  })\n  error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Response409Dto.html":{"url":"classes/Response409Dto.html","title":"class - Response409Dto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Response409Dto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/swagger/brand.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                message\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Conflict'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/swagger/brand.response.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Name already exists'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/swagger/brand.response.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '409'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/swagger/brand.response.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class GetBrandResponse {\n  @ApiProperty({\n    description: 'ID da marca.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome da marca.',\n    example: 'Nike',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Data de criação da marca.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização da marca.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão da marca quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n}\n\nexport class Response404Dto {\n  @ApiProperty({\n    example: '404',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Not found',\n  })\n  message: string;\n}\n\nexport class Response400Dto {\n  @ApiProperty({\n    example: '400',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name should not be empty',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Bad Request',\n  })\n  error: string;\n}\n\nexport class Response409Dto {\n  @ApiProperty({\n    example: '409',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name already exists',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Conflict',\n  })\n  error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Response409Dto-1.html":{"url":"classes/Response409Dto-1.html","title":"class - Response409Dto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Response409Dto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/swagger/product.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                message\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Conflict'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Name already exists'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '409'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/swagger/product.response.ts:107\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { BrandEntity } from '@/common/database/entities/brand.entity';\nimport { SellerEntity } from '@/common/database/entities/seller.entity';\n\nexport class GetProductResponse {\n  @ApiProperty({\n    description: 'ID do produto.',\n    example: 1,\n  })\n  id: number;\n\n  @ApiProperty({\n    description: 'Nome do produto.',\n    example: 'Tênis de corrida',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Slug do produto.',\n    example: 'tenis-de-corrida',\n  })\n  slug: string;\n\n  @ApiProperty({\n    description: 'Preço do produto.',\n    example: '100.00',\n  })\n  price: number;\n\n  @ApiProperty({\n    description: 'ID da marca do produto.',\n    example: 1,\n  })\n  brandId: number;\n\n  @ApiProperty({\n    description: 'Marca associada ao produto.',\n    example: 1,\n  })\n  brand: BrandEntity;\n\n  @ApiProperty({\n    description: 'ID do vendedor do produto.',\n    example: 2,\n  })\n  sellerId: number;\n\n  @ApiProperty({\n    description: 'Vendedor associado ao produto.',\n    example: 2,\n  })\n  seller: SellerEntity;\n\n  @ApiProperty({\n    description: 'Data de criação do produto.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    description: 'Data de atualização do produto.',\n    example: '2023-03-18T22:38:45.996Z',\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    description: 'Data de exclusão do produto quando aplicável.',\n    example: null,\n  })\n  deletedAt: Date | null;\n}\n\nexport class Response404Dto {\n  @ApiProperty({\n    example: '404',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Not found',\n  })\n  message: string;\n}\n\nexport class Response400Dto {\n  @ApiProperty({\n    example: '400',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name should not be empty',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Bad Request',\n  })\n  error: string;\n}\n\nexport class Response409Dto {\n  @ApiProperty({\n    example: '409',\n  })\n  statusCode: number;\n\n  @ApiProperty({\n    example: 'Name already exists',\n  })\n  message: string;\n\n  @ApiProperty({\n    example: 'Conflict',\n  })\n  error: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SellerEntity.html":{"url":"entities/SellerEntity.html","title":"entity - SellerEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SellerEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/database/entities/seller.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/seller.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: '50', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/seller.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, product => product.seller)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/database/entities/seller.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { BasicEntity } from './basic.entity';\nimport { ProductEntity } from './product.entity';\n\n@Entity({\n  name: 'seller',\n  synchronize: false,\n})\nexport class SellerEntity extends BasicEntity {\n  @PrimaryGeneratedColumn({\n    type: 'int',\n  })\n  id: number;\n\n  @Column({\n    type: 'varchar',\n    length: '50',\n    nullable: false,\n  })\n  name: string;\n\n  @OneToMany(() => ProductEntity, (product) => product.seller)\n  products: ProductEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SellerRepository.html":{"url":"injectables/SellerRepository.html","title":"injectable - SellerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SellerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sellers/repository/seller.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                exist\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Private\n                                throwValidError\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/sellers/repository/seller.repository.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateSellerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/sellers/repository/seller.repository.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateSellerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exist\n                        \n                    \n                \n            \n            \n                \n                    \n                    exist(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/sellers/repository/seller.repository.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/sellers/repository/seller.repository.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/sellers/repository/seller.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/sellers/repository/seller.repository.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        throwValidError\n                        \n                    \n                \n            \n            \n                \n                    \n                    throwValidError(error: HttpException | Error)\n                \n            \n\n\n            \n                \n                    Defined in src/sellers/repository/seller.repository.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            HttpException | Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: UpdateSellerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/sellers/repository/seller.repository.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateSellerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { Logger } from 'nestjs-pino';\nimport { Repository } from 'typeorm';\n\nimport { SellerEntity } from '@/common/database/entities/seller.entity';\nimport { CreateSellerDto } from '../dto/create-seller.dto';\nimport { CreateSellerSerializer } from '../serializers/create-seller.serializer';\nimport { UpdateSellerSerializer } from '../serializers/update-seller.serializer';\nimport { UpdateSellerDto } from './../dto/update-seller.dto';\n\n@Injectable()\nexport class SellerRepository {\n  constructor(\n    @InjectRepository(SellerEntity)\n    private repository: Repository,\n    @Inject(Logger)\n    private readonly logger: Logger,\n  ) {}\n\n  async findAll() {\n    return await this.repository.find();\n  }\n\n  async findOne(id: number) {\n    try {\n      return await this.repository.findOneOrFail({\n        where: { id },\n      });\n    } catch (error) {\n      throw new NotFoundException('Seller not found');\n    }\n  }\n\n  async create(\n    data: CreateSellerDto,\n  ): Promise {\n    try {\n      const newSeller = this.repository.create(data);\n\n      await this.repository.save(newSeller);\n\n      const seller = await this.repository.findOneOrFail({\n        where: { id: newSeller.id },\n      });\n\n      return seller;\n    } catch (error) {\n      this.logger.error('Failed to create seller', error);\n      this.throwValidError(error);\n    }\n  }\n\n  async update(\n    id: number,\n    data: UpdateSellerDto,\n  ): Promise {\n    if (!(await this.exist(id))) {\n      throw new NotFoundException({\n        message: 'Seller not found',\n        status: 'SELLER_NOT_FOUND',\n      });\n    }\n\n    try {\n      await this.repository.update(\n        {\n          id,\n        },\n        data,\n      );\n\n      return {\n        success: true,\n      };\n    } catch (error) {\n      this.logger.error('Failed to update seller', error);\n      this.throwValidError(error);\n    }\n  }\n\n  async remove(id: number) {\n    await this.repository.softDelete({\n      id,\n    });\n\n    return { sucess: true };\n  }\n\n  async exist(id: number) {\n    return await this.repository.exist({\n      where: {\n        id,\n      },\n    });\n  }\n\n  private throwValidError(error: HttpException | Error) {\n    if (error instanceof HttpException) {\n      throw error;\n    } else {\n      throw new InternalServerErrorException({\n        status: 'INTERNAL_ERROR',\n        message: error.message,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SellerRepositoryModule.html":{"url":"modules/SellerRepositoryModule.html","title":"module - SellerRepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    SellerRepositoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SellerRepositoryModule\n\n\n\ncluster_SellerRepositoryModule_exports\n\n\n\ncluster_SellerRepositoryModule_providers\n\n\n\n\nSellerRepository \n\nSellerRepository \n\n\n\nSellerRepositoryModule\n\nSellerRepositoryModule\n\nSellerRepository  -->\n\nSellerRepositoryModule->SellerRepository \n\n\n\n\n\nSellerRepository\n\nSellerRepository\n\nSellerRepositoryModule -->\n\nSellerRepository->SellerRepositoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sellers/repository/seller.repository.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SellerRepository\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SellerRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { SellerEntity } from '@/common/database/entities/seller.entity';\nimport { SellerRepository } from './seller.repository';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([SellerEntity])],\n  controllers: [],\n  providers: [SellerRepository],\n  exports: [SellerRepository],\n})\nexport class SellerRepositoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SellersController.html":{"url":"controllers/SellersController.html","title":"controller - SellersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SellersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sellers/sellers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sellers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: CreateSellerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(CREATE_SELLER_OK_RESPONSE)@ApiResponse(CREATE_SELLER_400_RESPONSE)@ApiBody({type: CreateSellerDto})@Post()\n                \n            \n\n            \n                \n                    Defined in src/sellers/sellers.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateSellerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(GET_SELLER_OK_RESPONSE)@Get()\n                \n            \n\n            \n                \n                    Defined in src/sellers/sellers.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(GET_BY_ID_SELLER_OK_RESPONSE)@ApiResponse(GET_BY_ID_SELLER_404_RESPONSE)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/sellers/sellers.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(DELETE_SELLER_OK_RESPONSE)@ApiResponse(DELETE_SELLER_404_RESPONSE)@ApiParam(PARAM_ID_SELLER)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/sellers/sellers.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, data: UpdateSellerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse(UPDATE_SELLER_OK_RESPONSE)@ApiResponse(UPDATE_SELLER_400_RESPONSE)@ApiResponse(UPDATE_SELLER_404_RESPONSE)@ApiParam(PARAM_ID_SELLER)@ApiBody({type: UpdateSellerDto})@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/sellers/sellers.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateSellerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiOkResponse,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { SellerEntity } from '@/common/database/entities/seller.entity';\nimport { CreateSellerDto } from './dto/create-seller.dto';\nimport { UpdateSellerDto } from './dto/update-seller.dto';\nimport { SellersService } from './sellers.service';\nimport { CreateSellerSerializer } from './serializers/create-seller.serializer';\nimport { UpdateSellerSerializer } from './serializers/update-seller.serializer';\nimport {\n  CREATE_SELLER_400_RESPONSE,\n  CREATE_SELLER_OK_RESPONSE,\n  DELETE_SELLER_404_RESPONSE,\n  DELETE_SELLER_OK_RESPONSE,\n  GET_BY_ID_SELLER_404_RESPONSE,\n  GET_BY_ID_SELLER_OK_RESPONSE,\n  GET_SELLER_OK_RESPONSE,\n  PARAM_ID_SELLER,\n  UPDATE_SELLER_400_RESPONSE,\n  UPDATE_SELLER_404_RESPONSE,\n  UPDATE_SELLER_OK_RESPONSE,\n} from './swagger/seller.constant';\n\n@ApiTags('Sellers')\n@Controller('sellers')\nexport class SellersController {\n  constructor(private readonly sellersService: SellersService) {}\n\n  @ApiOkResponse(GET_SELLER_OK_RESPONSE)\n  @Get()\n  findAll(): Promise {\n    return this.sellersService.findAll();\n  }\n\n  @ApiOkResponse(GET_BY_ID_SELLER_OK_RESPONSE)\n  @ApiResponse(GET_BY_ID_SELLER_404_RESPONSE)\n  @Get(':id')\n  findOne(@Param('id') id: string): Promise {\n    return this.sellersService.findOne(+id);\n  }\n\n  @ApiOkResponse(CREATE_SELLER_OK_RESPONSE)\n  @ApiResponse(CREATE_SELLER_400_RESPONSE)\n  @ApiBody({ type: CreateSellerDto })\n  @Post()\n  create(\n    @Body() data: CreateSellerDto,\n  ): Promise {\n    return this.sellersService.create(data);\n  }\n\n  @ApiOkResponse(UPDATE_SELLER_OK_RESPONSE)\n  @ApiResponse(UPDATE_SELLER_400_RESPONSE)\n  @ApiResponse(UPDATE_SELLER_404_RESPONSE)\n  @ApiParam(PARAM_ID_SELLER)\n  @ApiBody({ type: UpdateSellerDto })\n  @Put(':id')\n  update(\n    @Param('id') id: string,\n    @Body() data: UpdateSellerDto,\n  ): Promise {\n    return this.sellersService.update(+id, data);\n  }\n\n  @ApiOkResponse(DELETE_SELLER_OK_RESPONSE)\n  @ApiResponse(DELETE_SELLER_404_RESPONSE)\n  @ApiParam(PARAM_ID_SELLER)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.sellersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SellersModule.html":{"url":"modules/SellersModule.html","title":"module - SellersModule","body":"\n                   \n\n\n\n\n    Modules\n    SellersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SellersModule\n\n\n\ncluster_SellersModule_imports\n\n\n\ncluster_SellersModule_exports\n\n\n\ncluster_SellersModule_providers\n\n\n\n\nSellerRepositoryModule\n\nSellerRepositoryModule\n\n\n\nSellersModule\n\nSellersModule\n\nSellersModule -->\n\nSellerRepositoryModule->SellersModule\n\n\n\n\n\nSellersService \n\nSellersService \n\nSellersService  -->\n\nSellersModule->SellersService \n\n\n\n\n\nSellersService\n\nSellersService\n\nSellersModule -->\n\nSellersService->SellersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sellers/sellers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SellersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SellersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SellerRepositoryModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SellersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { SellerRepositoryModule } from './repository/seller.repository.module';\nimport { SellersController } from './sellers.controller';\nimport { SellersService } from './sellers.service';\n\n@Module({\n  imports: [SellerRepositoryModule],\n  providers: [SellersService],\n  controllers: [SellersController],\n  exports: [SellersService],\n})\nexport class SellersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SellersService.html":{"url":"injectables/SellersService.html","title":"injectable - SellersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SellersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sellers/sellers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sellerRepository: SellerRepository)\n                    \n                \n                        \n                            \n                                Defined in src/sellers/sellers.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sellerRepository\n                                                  \n                                                        \n                                                                        SellerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: CreateSellerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/sellers/sellers.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateSellerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/sellers/sellers.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/sellers/sellers.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/sellers/sellers.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, data: UpdateSellerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/sellers/sellers.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateSellerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { SellerEntity } from '@/common/database/entities/seller.entity';\nimport { CreateSellerDto } from './dto/create-seller.dto';\nimport { UpdateSellerDto } from './dto/update-seller.dto';\nimport { SellerRepository } from './repository/seller.repository';\nimport { CreateSellerSerializer } from './serializers/create-seller.serializer';\nimport { UpdateSellerSerializer } from './serializers/update-seller.serializer';\n\n@Injectable()\nexport class SellersService {\n  constructor(private readonly sellerRepository: SellerRepository) {}\n\n  findAll(): Promise {\n    return this.sellerRepository.findAll();\n  }\n\n  findOne(id: number): Promise {\n    return this.sellerRepository.findOne(id);\n  }\n\n  create(data: CreateSellerDto): Promise {\n    return this.sellerRepository.create(data);\n  }\n\n  update(\n    id: number,\n    data: UpdateSellerDto,\n  ): Promise {\n    return this.sellerRepository.update(id, data);\n  }\n\n  remove(id: number) {\n    return this.sellerRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestHelper.html":{"url":"classes/TestHelper.html","title":"class - TestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/helpers/test.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                datasource\n                            \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                cleanDatabase\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Static\n                                getInstance\n                            \n                            \n                                    Public\n                                getRepository\n                            \n                            \n                                    Public\n                                initialize\n                            \n                            \n                                    Public\n                                    Async\n                                saveDataAsEntity\n                            \n                            \n                                    Public\n                                    Async\n                                saveEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isInitialized\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/helpers/test.helper.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        datasource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/helpers/test.helper.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TestHelper\n\n                    \n                \n                    \n                        \n                                Defined in src/helpers/test.helper.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        cleanDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    cleanDatabase()\n                \n            \n\n\n            \n                \n                    Defined in src/helpers/test.helper.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/helpers/test.helper.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInstance()\n                \n            \n\n\n            \n                \n                    Defined in src/helpers/test.helper.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TestHelper\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRepository\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRepository(klass)\n                \n            \n\n\n            \n                \n                    Defined in src/helpers/test.helper.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    klass\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Repository\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize()\n                \n            \n\n\n            \n                \n                    Defined in src/helpers/test.helper.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        saveDataAsEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveDataAsEntity(data: object, klass)\n                \n            \n\n\n            \n                \n                    Defined in src/helpers/test.helper.ts:86\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        EntityType\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    klass\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        saveEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveEntity(entity: BaseEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/helpers/test.helper.ts:79\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        EntityType\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            BaseEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isInitialized\n                    \n                \n\n                \n                    \n                        getisInitialized()\n                    \n                \n                            \n                                \n                                    Defined in src/helpers/test.helper.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BaseEntity, DataSource, Repository } from 'typeorm';\n\nimport dbConfig from '../config/db.config';\n\nexport class TestHelper {\n  private static instance: TestHelper;\n  private datasource: DataSource;\n\n  private constructor() {\n    this.datasource = new DataSource({\n      type: 'mariadb',\n      ...dbConfig,\n    });\n  }\n\n  public static getInstance(): TestHelper {\n    if (!TestHelper.instance) {\n      TestHelper.instance = new TestHelper();\n    }\n\n    return TestHelper.instance;\n  }\n\n  public get isInitialized(): boolean {\n    return this.datasource.isInitialized;\n  }\n\n  public initialize() {\n    if (!this.isInitialized) {\n      return this.datasource.initialize();\n    }\n\n    return Promise.resolve();\n  }\n\n  public destroy() {\n    return this.datasource.destroy();\n  }\n\n  public async cleanDatabase(): Promise {\n    const queryRunner = this.datasource.createQueryRunner();\n\n    try {\n      // DB Cleaning\n      await queryRunner.connect();\n\n      const tables = await queryRunner.query('SHOW TABLES;');\n\n      const tableNames = tables\n        .map((row: any) => {\n          const key = Object.keys(row)[0];\n          const tableName = row[key];\n\n          return tableName;\n        })\n        .filter(\n          (tableName: string) =>\n            tableName !== null && tableName !== 'migrations',\n        );\n\n      await queryRunner.query('SET FOREIGN_KEY_CHECKS=0;');\n\n      for (const tableName of tableNames) {\n        await queryRunner.query(`TRUNCATE ${tableName};`);\n      }\n\n      await queryRunner.query('SET FOREIGN_KEY_CHECKS=1;');\n    } catch (error) {\n      throw new Error(`ERROR: Cleaning test database: ${error}`);\n    } finally {\n      await queryRunner.release();\n    }\n  }\n\n  public getRepository(klass: typeof BaseEntity): Repository {\n    return this.datasource.getRepository(klass);\n  }\n\n  public async saveEntity(entity: BaseEntity) {\n    const repository = this.datasource.getRepository(typeof entity);\n    const saved = await repository.save(entity as EntityType);\n\n    return saved;\n  }\n\n  public async saveDataAsEntity(\n    data: object,\n    klass: typeof BaseEntity,\n  ) {\n    const repository = this.datasource.getRepository(klass);\n    const entity = repository.create(data as EntityType);\n    const saved: EntityType = await repository.save(entity);\n\n    return saved;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBrandDto.html":{"url":"classes/UpdateBrandDto.html","title":"class - UpdateBrandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBrandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/dto/update-brand.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MaxLength(50, {message: 'This name is too long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/dto/update-brand.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, MaxLength } from 'class-validator';\n\nexport class UpdateBrandDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(50, {\n    message: 'This name is too long',\n  })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBrandSerializer.html":{"url":"classes/UpdateBrandSerializer.html","title":"class - UpdateBrandSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBrandSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/brands/serializers/update-brand.serializer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/brands/serializers/update-brand.serializer.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateBrandSerializer {\n  @ApiProperty()\n  success: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()@MaxLength(50, {message: 'This name is too long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/update-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsDecimal()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/update-product.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDecimal, IsOptional, IsString, MaxLength } from 'class-validator';\n\nexport class UpdateProductDto {\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsString()\n  @MaxLength(50, {\n    message: 'This name is too long',\n  })\n  name?: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsDecimal()\n  price?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductSerializer.html":{"url":"classes/UpdateProductSerializer.html","title":"class - UpdateProductSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/serializers/update-product.serializer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/serializers/update-product.serializer.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateProductSerializer {\n  @ApiProperty()\n  success: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSellerDto.html":{"url":"classes/UpdateSellerDto.html","title":"class - UpdateSellerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSellerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sellers/dto/update-seller.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MaxLength(50, {message: 'This name is too long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/dto/update-seller.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, MaxLength } from 'class-validator';\n\nexport class UpdateSellerDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(50, {\n    message: 'This name is too long',\n  })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSellerSerializer.html":{"url":"classes/UpdateSellerSerializer.html","title":"class - UpdateSellerSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSellerSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sellers/serializers/update-seller.serializer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sellers/serializers/update-seller.serializer.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateSellerSerializer {\n  @ApiProperty()\n  success: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                migrations/1679162777045-migrations.ts\n            \n            class\n            migrations1679162777045\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/brands/brands.controller.ts\n            \n            controller\n            BrandsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/brands/brands.service.ts\n            \n            injectable\n            BrandsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/brands/dto/create-brand.dto.ts\n            \n            class\n            CreateBrandDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/brands/dto/update-brand.dto.ts\n            \n            class\n            UpdateBrandDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/brands/repository/brand.repository.ts\n            \n            injectable\n            BrandRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/brands/serializers/create-brand.serializer.ts\n            \n            class\n            CreateBrandSerializer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/brands/serializers/update-brand.serializer.ts\n            \n            class\n            UpdateBrandSerializer\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/brands/swagger/brand.response.ts\n            \n            class\n            GetBrandResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/brands/swagger/brand.response.ts\n            \n            class\n            Response400Dto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/brands/swagger/brand.response.ts\n            \n            class\n            Response404Dto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/brands/swagger/brand.response.ts\n            \n            class\n            Response409Dto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/brands/swagger/brands.constant.ts\n            \n            variable\n            CREATE_BRAND_400_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/swagger/brands.constant.ts\n            \n            variable\n            CREATE_BRAND_409_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/swagger/brands.constant.ts\n            \n            variable\n            CREATE_BRAND_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/swagger/brands.constant.ts\n            \n            variable\n            DELETE_BRAND_404_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/swagger/brands.constant.ts\n            \n            variable\n            DELETE_BRAND_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/swagger/brands.constant.ts\n            \n            variable\n            GET_BRAND_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/swagger/brands.constant.ts\n            \n            variable\n            GET_BY_ID_BRAND_404_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/swagger/brands.constant.ts\n            \n            variable\n            GET_BY_ID_BRAND_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/swagger/brands.constant.ts\n            \n            variable\n            PARAM_ID_BRAND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/swagger/brands.constant.ts\n            \n            variable\n            UPDATE_BRAND_400_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/swagger/brands.constant.ts\n            \n            variable\n            UPDATE_BRAND_404_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/swagger/brands.constant.ts\n            \n            variable\n            UPDATE_BRAND_409_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/brands/swagger/brands.constant.ts\n            \n            variable\n            UPDATE_BRAND_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/database/entities/basic.entity.ts\n            \n            class\n            BasicEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/database/entities/brand.entity.ts\n            \n            entity\n            BrandEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/database/entities/brand.entity.ts\n            \n            class\n            BrandEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/database/entities/product.entity.ts\n            \n            entity\n            ProductEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/database/entities/product.entity.ts\n            \n            class\n            ProductEntity\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/database/entities/seller.entity.ts\n            \n            entity\n            SellerEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/db.config.ts\n            \n            variable\n            configService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helpers/test.helper.ts\n            \n            class\n            TestHelper\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/products/dto/find-options.dto.ts\n            \n            class\n            FindOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/products/repository/product.repository.ts\n            \n            injectable\n            ProductRepository\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/products/serializers/create-product.serializer.ts\n            \n            class\n            CreateProductSerializer\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/products/serializers/update-product.serializer.ts\n            \n            class\n            UpdateProductSerializer\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/swagger/product.response.ts\n            \n            class\n            GetProductResponse\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/products/swagger/product.response.ts\n            \n            class\n            Response400Dto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/swagger/product.response.ts\n            \n            class\n            Response404Dto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/swagger/product.response.ts\n            \n            class\n            Response409Dto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            CREATE_PRODUCT_400_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            CREATE_PRODUCT_409_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            CREATE_PRODUCT_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            DELETE_PRODUCT_404_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            DELETE_PRODUCT_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            GET_BY_ID_PRODUCT_404_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            GET_BY_ID_PRODUCT_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            GET_BY_SLUG_PRODUCT_404_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            GET_BY_SLUG_PRODUCT_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            GET_PRODUCT_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            PARAM_ID_PRODUCT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            PARAM_SLUG_PRODUCT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            UPDATE_PRODUCT_400_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            UPDATE_PRODUCT_404_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            UPDATE_PRODUCT_409_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/swagger/products.constant.ts\n            \n            variable\n            UPDATE_PRODUCT_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sellers/dto/create-seller.dto.ts\n            \n            class\n            CreateSellerDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/sellers/dto/update-seller.dto.ts\n            \n            class\n            UpdateSellerDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/sellers/repository/seller.repository.ts\n            \n            injectable\n            SellerRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/sellers/sellers.controller.ts\n            \n            controller\n            SellersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/sellers/sellers.service.ts\n            \n            injectable\n            SellersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/sellers/serializers/create-seller.serializer.ts\n            \n            class\n            CreateSellerSerializer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/sellers/serializers/update-seller.serializer.ts\n            \n            class\n            UpdateSellerSerializer\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.constant.ts\n            \n            variable\n            CREATE_SELLER_400_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.constant.ts\n            \n            variable\n            CREATE_SELLER_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.constant.ts\n            \n            variable\n            DELETE_SELLER_404_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.constant.ts\n            \n            variable\n            DELETE_SELLER_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.constant.ts\n            \n            variable\n            GET_BY_ID_SELLER_404_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.constant.ts\n            \n            variable\n            GET_BY_ID_SELLER_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.constant.ts\n            \n            variable\n            GET_SELLER_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.constant.ts\n            \n            variable\n            PARAM_ID_SELLER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.constant.ts\n            \n            variable\n            UPDATE_SELLER_400_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.constant.ts\n            \n            variable\n            UPDATE_SELLER_404_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.constant.ts\n            \n            variable\n            UPDATE_SELLER_OK_RESPONSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.response.ts\n            \n            class\n            GetSellerResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.response.ts\n            \n            class\n            Response400Dto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/sellers/swagger/seller.response.ts\n            \n            class\n            Response404Dto\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            dotenv : ^16.0.3\n        \n            dotenv-flow : ^3.2.0\n        \n            mariadb : ^3.1.1\n        \n            mysql2 : ^3.2.0\n        \n            nestjs-pino : ^3.1.2\n        \n            pino-http : ^8.3.3\n        \n            pino-pretty : ^10.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            slugify : ^1.6.5\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n        \n            typeorm-naming-strategies : ^4.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nhermes\n\nThis name was chosen in reference to the Greek god Hermes, the god of commerce, also known as the protector of merchants.\nBefore starts\nDownload and install Node LTS\nInstallation\nnpm installConfigure .env  and .env.test\nexample .env\nDB_TYPE=mariadb\nDB_HOST=localhost\nDB_PORT=13306\nDB_NAME=hermes_dev\nDB_USER=hermes_dev\nDB_PASSWORD=hermes_dev\nSECRET=change-meexample .env.test\nDB_TYPE=mariadb\nDB_HOST=127.0.0.1\nDB_PORT=23306\nDB_NAME=hermes_test\nDB_USER=hermes_test\nDB_PASSWORD=hermes_test\nSECRET=change-meRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covRun with Docker\nThere is a docker compose configuration that will load the DEV MariaDB\ninstance. All you need is docker compose\ninstalled in your machine.\nTo bring all up, just run\ndocker compose upThis will expose the database 127.0.0.1 port 13306.\nTest watcher with Docker\nTo run the jest test watcher with Docker, just call with test profile:\ndocker compose --profile test upThis will start jest in \"watch all\" mode in an isolated container and database.\nThis also runs the app in development mode.\nLocal tests with test database in Docker\nThere is a test database in docker compose. All DB configuration will be loaded from .env.test.\nJust run:\nnpm run test:prepareYou can now run your tests locally running:\nnpm run testor\nnpm run test:watchor\nnpm run test:covDocumentation\nSee Swagger documentation\nAfter application starts, open your browser and navigate to http://localhost:3000/api\nDocumentation with Compodoc\nFirst run\nnpm run docs:buildNow open your browser and navigate to http://localhost:8080/\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Janice Caldeira\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/migrations1679162777045.html":{"url":"classes/migrations1679162777045.html","title":"class - migrations1679162777045","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  migrations1679162777045\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            migrations/1679162777045-migrations.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'migrations1679162777045'\n                    \n                \n                    \n                        \n                                Defined in migrations/1679162777045-migrations.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in migrations/1679162777045-migrations.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in migrations/1679162777045-migrations.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from \"typeorm\";\n\nexport class migrations1679162777045 implements MigrationInterface {\n    name = 'migrations1679162777045'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`CREATE TABLE \\`seller\\` (\\`createdAt\\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \\`updatedAt\\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \\`deletedAt\\` datetime(6) NULL, \\`id\\` int NOT NULL AUTO_INCREMENT, \\`name\\` varchar(50) NOT NULL, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`);\n        await queryRunner.query(`CREATE TABLE \\`product\\` (\\`createdAt\\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \\`updatedAt\\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \\`deletedAt\\` datetime(6) NULL, \\`id\\` int NOT NULL AUTO_INCREMENT, \\`name\\` varchar(50) NOT NULL, \\`slug\\` varchar(50) NOT NULL, \\`price\\` decimal(10,2) NOT NULL DEFAULT '0.00', \\`brandId\\` int NOT NULL, \\`sellerId\\` int NOT NULL, UNIQUE INDEX \\`IDX_fb3049aa3e5955c00ded7a2827\\` (\\`name\\`, \\`slug\\`), PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`);\n        await queryRunner.query(`CREATE TABLE \\`brand\\` (\\`createdAt\\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \\`updatedAt\\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \\`deletedAt\\` datetime(6) NULL, \\`id\\` int NOT NULL AUTO_INCREMENT, \\`name\\` varchar(50) NOT NULL, UNIQUE INDEX \\`IDX_5f468ae5696f07da025138e38f\\` (\\`name\\`), PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`);\n        await queryRunner.query(`ALTER TABLE \\`product\\` ADD CONSTRAINT \\`FK_bb7d3d9dc1fae40293795ae39d6\\` FOREIGN KEY (\\`brandId\\`) REFERENCES \\`brand\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE \\`product\\` ADD CONSTRAINT \\`FK_d5cac481d22dacaf4d53f900a3f\\` FOREIGN KEY (\\`sellerId\\`) REFERENCES \\`seller\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \\`product\\` DROP FOREIGN KEY \\`FK_d5cac481d22dacaf4d53f900a3f\\``);\n        await queryRunner.query(`ALTER TABLE \\`product\\` DROP FOREIGN KEY \\`FK_bb7d3d9dc1fae40293795ae39d6\\``);\n        await queryRunner.query(`DROP INDEX \\`IDX_5f468ae5696f07da025138e38f\\` ON \\`brand\\``);\n        await queryRunner.query(`DROP TABLE \\`brand\\``);\n        await queryRunner.query(`DROP INDEX \\`IDX_fb3049aa3e5955c00ded7a2827\\` ON \\`product\\``);\n        await queryRunner.query(`DROP TABLE \\`product\\``);\n        await queryRunner.query(`DROP TABLE \\`seller\\``);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BrandRepositoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BrandsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductRepositoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SellerRepositoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SellersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_BrandRepositoryModule\n\n\n\ncluster_BrandRepositoryModule_exports\n\n\n\ncluster_BrandRepositoryModule_providers\n\n\n\ncluster_BrandsModule\n\n\n\ncluster_BrandsModule_exports\n\n\n\ncluster_BrandsModule_providers\n\n\n\ncluster_ProductRepositoryModule\n\n\n\ncluster_ProductRepositoryModule_exports\n\n\n\ncluster_ProductRepositoryModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_SellerRepositoryModule\n\n\n\ncluster_SellerRepositoryModule_exports\n\n\n\ncluster_SellerRepositoryModule_providers\n\n\n\ncluster_SellersModule\n\n\n\ncluster_SellersModule_exports\n\n\n\ncluster_SellersModule_providers\n\n\n\n\nBrandsModule\n\nBrandsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBrandsModule->AppModule\n\n\n\n\n\nBrandsService \n\nBrandsService \n\nBrandsService  -->\n\nBrandsModule->BrandsService \n\n\n\n\n\nProductRepositoryModule\n\nProductRepositoryModule\n\nProductRepositoryModule -->\n\nBrandsModule->ProductRepositoryModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nSellersModule\n\nSellersModule\n\nAppModule -->\n\nSellersModule->AppModule\n\n\n\nProductRepositoryModule -->\n\nSellersModule->ProductRepositoryModule\n\n\n\n\n\nSellersService \n\nSellersService \n\nSellersService  -->\n\nSellersModule->SellersService \n\n\n\n\n\nBrandRepository \n\nBrandRepository \n\n\n\nBrandRepositoryModule\n\nBrandRepositoryModule\n\nBrandsModule -->\n\nBrandRepositoryModule->BrandsModule\n\n\n\nBrandRepository  -->\n\nBrandRepositoryModule->BrandRepository \n\n\n\n\n\nBrandRepository\n\nBrandRepository\n\nBrandRepositoryModule -->\n\nBrandRepository->BrandRepositoryModule\n\n\n\n\n\nBrandsService\n\nBrandsService\n\nBrandsModule -->\n\nBrandsService->BrandsModule\n\n\n\nProductsModule -->\n\nProductRepositoryModule->ProductsModule\n\n\n\n\n\nProductRepository \n\nProductRepository \n\nProductRepository  -->\n\nProductRepositoryModule->ProductRepository \n\n\n\n\n\nProductRepository\n\nProductRepository\n\nProductRepositoryModule -->\n\nProductRepository->ProductRepositoryModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nSellerRepository \n\nSellerRepository \n\n\n\nSellerRepositoryModule\n\nSellerRepositoryModule\n\nSellersModule -->\n\nSellerRepositoryModule->SellersModule\n\n\n\nSellerRepository  -->\n\nSellerRepositoryModule->SellerRepository \n\n\n\n\n\nSellerRepository\n\nSellerRepository\n\nSellerRepositoryModule -->\n\nSellerRepository->SellerRepositoryModule\n\n\n\n\n\nSellersService\n\nSellersService\n\nSellersModule -->\n\nSellersService->SellersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configService   (src/.../db.config.ts)\n                        \n                        \n                            CREATE_BRAND_400_RESPONSE   (src/.../brands.constant.ts)\n                        \n                        \n                            CREATE_BRAND_409_RESPONSE   (src/.../brands.constant.ts)\n                        \n                        \n                            CREATE_BRAND_OK_RESPONSE   (src/.../brands.constant.ts)\n                        \n                        \n                            CREATE_PRODUCT_400_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            CREATE_PRODUCT_409_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            CREATE_PRODUCT_OK_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            CREATE_SELLER_400_RESPONSE   (src/.../seller.constant.ts)\n                        \n                        \n                            CREATE_SELLER_OK_RESPONSE   (src/.../seller.constant.ts)\n                        \n                        \n                            DELETE_BRAND_404_RESPONSE   (src/.../brands.constant.ts)\n                        \n                        \n                            DELETE_BRAND_OK_RESPONSE   (src/.../brands.constant.ts)\n                        \n                        \n                            DELETE_PRODUCT_404_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            DELETE_PRODUCT_OK_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            DELETE_SELLER_404_RESPONSE   (src/.../seller.constant.ts)\n                        \n                        \n                            DELETE_SELLER_OK_RESPONSE   (src/.../seller.constant.ts)\n                        \n                        \n                            GET_BRAND_OK_RESPONSE   (src/.../brands.constant.ts)\n                        \n                        \n                            GET_BY_ID_BRAND_404_RESPONSE   (src/.../brands.constant.ts)\n                        \n                        \n                            GET_BY_ID_BRAND_OK_RESPONSE   (src/.../brands.constant.ts)\n                        \n                        \n                            GET_BY_ID_PRODUCT_404_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            GET_BY_ID_PRODUCT_OK_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            GET_BY_ID_SELLER_404_RESPONSE   (src/.../seller.constant.ts)\n                        \n                        \n                            GET_BY_ID_SELLER_OK_RESPONSE   (src/.../seller.constant.ts)\n                        \n                        \n                            GET_BY_SLUG_PRODUCT_404_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            GET_BY_SLUG_PRODUCT_OK_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            GET_PRODUCT_OK_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            GET_SELLER_OK_RESPONSE   (src/.../seller.constant.ts)\n                        \n                        \n                            PARAM_ID_BRAND   (src/.../brands.constant.ts)\n                        \n                        \n                            PARAM_ID_PRODUCT   (src/.../products.constant.ts)\n                        \n                        \n                            PARAM_ID_SELLER   (src/.../seller.constant.ts)\n                        \n                        \n                            PARAM_SLUG_PRODUCT   (src/.../products.constant.ts)\n                        \n                        \n                            UPDATE_BRAND_400_RESPONSE   (src/.../brands.constant.ts)\n                        \n                        \n                            UPDATE_BRAND_404_RESPONSE   (src/.../brands.constant.ts)\n                        \n                        \n                            UPDATE_BRAND_409_RESPONSE   (src/.../brands.constant.ts)\n                        \n                        \n                            UPDATE_BRAND_OK_RESPONSE   (src/.../brands.constant.ts)\n                        \n                        \n                            UPDATE_PRODUCT_400_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            UPDATE_PRODUCT_404_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            UPDATE_PRODUCT_409_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            UPDATE_PRODUCT_OK_RESPONSE   (src/.../products.constant.ts)\n                        \n                        \n                            UPDATE_SELLER_400_RESPONSE   (src/.../seller.constant.ts)\n                        \n                        \n                            UPDATE_SELLER_404_RESPONSE   (src/.../seller.constant.ts)\n                        \n                        \n                            UPDATE_SELLER_OK_RESPONSE   (src/.../seller.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/db.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConfigService()\n                    \n                \n\n\n        \n    \n\n    src/brands/swagger/brands.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CREATE_BRAND_400_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 400,\n  description: 'Nome da marca não deve estar vazio.',\n  type: Response400Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CREATE_BRAND_409_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 409,\n  description: 'Nome da marca tem que ser único.',\n  type: Response409Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CREATE_BRAND_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 201,\n  description: 'Cria e retorna uma marca.',\n  type: CreateBrandSerializer,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DELETE_BRAND_404_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 404,\n  description: 'Marca não encontrada.',\n  type: Response404Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DELETE_BRAND_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  description: 'Exclui uma marca (soft delete).',\n  type: UpdateBrandSerializer,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_BRAND_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  description: 'Retorna uma lista de marcas cadastradas.',\n  type: GetBrandResponse,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_BY_ID_BRAND_404_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 404,\n  description: 'Marca não encontrada.',\n  type: Response404Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_BY_ID_BRAND_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  description: 'Retorna uma marca cadastrada.',\n  type: GetBrandResponse,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PARAM_ID_BRAND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'string',\n  name: 'id',\n  description: 'ID da marca',\n  required: true,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPDATE_BRAND_400_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 400,\n  description: 'Nome da marca não deve estar vazio.',\n  type: Response400Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPDATE_BRAND_404_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 404,\n  description: 'Marca não encontrada.',\n  type: Response404Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPDATE_BRAND_409_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 409,\n  description: 'Nome da marca tem que ser único.',\n  type: Response409Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPDATE_BRAND_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  description: 'Atualiza uma marca.',\n  type: UpdateBrandSerializer,\n}\n                    \n                \n\n\n        \n    \n\n    src/products/swagger/products.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CREATE_PRODUCT_400_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 400,\n  description: 'Nome do produto não deve estar vazio.',\n  type: Response400Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CREATE_PRODUCT_409_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 409,\n  description: 'Nome do produto tem que ser único.',\n  type: Response409Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CREATE_PRODUCT_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 201,\n  description: 'Cria e retorna um produto.',\n  type: CreateProductSerializer,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DELETE_PRODUCT_404_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 404,\n  description: 'Produto não encontrado.',\n  type: Response404Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DELETE_PRODUCT_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  description: 'Exclui um produto (soft delete).',\n  type: UpdateProductSerializer,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_BY_ID_PRODUCT_404_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 404,\n  description: 'Produto não encontrado.',\n  type: Response404Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_BY_ID_PRODUCT_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  description: 'Retorna um produto cadastrado.',\n  type: GetProductResponse,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_BY_SLUG_PRODUCT_404_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 404,\n  description: 'Produto não encontrado.',\n  type: Response404Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_BY_SLUG_PRODUCT_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  description: 'Retorna um produto cadastrado.',\n  type: GetProductResponse,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_PRODUCT_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  description:\n    'Retorna uma lista de produtos cadastrados. Permite filtrar por parâmetros.',\n  type: GetProductResponse,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PARAM_ID_PRODUCT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'string',\n  name: 'id',\n  description: 'ID do produto',\n  required: true,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PARAM_SLUG_PRODUCT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'string',\n  name: 'slug',\n  description: 'Slug do produto',\n  required: true,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPDATE_PRODUCT_400_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 400,\n  description: 'Nome do produto não deve estar vazio.',\n  type: Response400Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPDATE_PRODUCT_404_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 404,\n  description: 'Produto não encontrado.',\n  type: Response404Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPDATE_PRODUCT_409_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 409,\n  description: 'Nome do produto tem que ser único.',\n  type: Response409Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPDATE_PRODUCT_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  description: 'Atualiza um produto.',\n  type: UpdateProductSerializer,\n}\n                    \n                \n\n\n        \n    \n\n    src/sellers/swagger/seller.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CREATE_SELLER_400_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 400,\n  description: 'Nome do vendedor não deve estar vazio.',\n  type: Response400Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CREATE_SELLER_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 201,\n  description: 'Cria e retorna um vendedor.',\n  type: CreateSellerSerializer,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DELETE_SELLER_404_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 404,\n  description: 'Vendedor não encontrado.',\n  type: Response404Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DELETE_SELLER_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  description: 'Exclui um vendedor (soft delete).',\n  type: UpdateSellerSerializer,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_BY_ID_SELLER_404_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 404,\n  description: 'Vendedor não encontrado.',\n  type: Response404Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_BY_ID_SELLER_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  description: 'Retorna um vendedor cadastrado.',\n  type: GetSellerResponse,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_SELLER_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  description: 'Retorna uma lista de vendedores cadastrados.',\n  type: GetSellerResponse,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PARAM_ID_SELLER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'string',\n  name: 'id',\n  description: 'ID do vendedor',\n  required: true,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPDATE_SELLER_400_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 400,\n  description: 'Nome do vendedor não deve estar vazio.',\n  type: Response400Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPDATE_SELLER_404_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 404,\n  description: 'Vendedor não encontrado.',\n  type: Response404Dto,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPDATE_SELLER_OK_RESPONSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  description: 'Atualiza um vendedor.',\n  type: UpdateSellerSerializer,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
